@学校一覧
#DIM DYNAMIC LCOUNT

FOR LCOUNT, 0, VARSIZE("学校名")
	PRINTFORMLC 　[{LCOUNT}] - %学校名:LCOUNT%
NEXT

CALL NEWLINE

@TURNEND_学園
#DIM DYNAMIC LCOUNT

;ターンを進める
SELECTCASE ターン
	CASE "朝"
		PRINTW 昼になった……
		ターン = 昼
		;登校中のキャラを参照
		FOR LCOUNT, 1, CHARANUM
			;サボり魔は10%でバックレてる さすがに教師はバックレない
			SIF CSTR:LCOUNT:現在地 == CSTR:LCOUNT:在校 && TALENT:LCOUNT:サボり魔 && RAND:10 == 0
				CSTR:LCOUNT:現在地 = 
		NEXT
	CASE "昼"
		PRINTW 夕方になった……
		ターン = 夕
		;生徒は放課後タイム
		FOR LCOUNT, 1, CHARANUM
			SIF CSTR:LCOUNT:現在地 == CSTR:LCOUNT:在校
				CSTR:LCOUNT:現在地 = 
			;教師陣もぼちぼち帰る
			SIF CSTR:LCOUNT:現在地 == CSTR:LCOUNT:在任 && RAND:2
				CSTR:LCOUNT:現在地 = 
		NEXT
	CASE "夕"
		PRINTW 夜になった……
		ターン = 夜
		;教師陣も確定で帰る
		SIF CSTR:LCOUNT:現在地 == CSTR:LCOUNT:在任
			CSTR:LCOUNT:現在地 = 
	CASE "夜"
		IF 同行者
			PRINTFORMW %CALLNAME:同行者%は、今日はもう遅いからまた明日と%CALLNAME:PLAYER%に別れを告げた
			同行者 = 0
			CSTR:同行者:現在地 =
			CSTR:同行者:目的 =
		ENDIF
		PRINTW 一日が終わった……
		ターン = 朝
		DAY++
		CALL NEXTDAY
		CSTR:PLAYER:現在地 = 自宅
		IF ISHOLIDAY()
			;朝は在校生と教師は学校に居る
			FOR LCOUNT, 1, CHARANUM
				;ただしサボり魔は10%でサボってる 教師も例外ではない
				SIF CSTR:LCOUNT:在校 != "" && !(TALENT:LCOUNT:サボり魔 && RAND:10 == 0)
					CSTR:LCOUNT:現在地 = %CSTR:LCOUNT:在校%
				SIF CSTR:LCOUNT:在任 != "" && !(TALENT:LCOUNT:サボり魔 && RAND:10 == 0)
					CSTR:LCOUNT:現在地 = %CSTR:LCOUNT:在任%
			NEXT
		ENDIF
ENDSELECT

CALL SYSTEM_AUTOSAVE

JUMP SHOP_SCHOOL

@相性増加, ARG, ARG:1, 上昇値
#DIM DYNAMIC 上昇値

;引数の2人の間の相性を上昇させる関数

[SKIPSTART]
RELATION:ARG:(ARG:1) += 上昇値
RELATION:(ARG:1):ARG += 上昇値
[SKIPEND]

@クラスメイト選出, 対象, 選出タイプ
#DIM DYNAMIC 対象
#DIMS DYNAMIC 選出タイプ
;無所属が一番多くなるので余裕を持つ
#DIM DYNAMIC クラスメイト, 300
#DIM DYNAMIC 候補, 5
#DIM DYNAMIC 人数
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2

;第一引数のキャラと同じ学校の生徒を、第二引数で指定した条件で選出する
;RESULT:0～4で最大5人返す 必要なぶんだけRESULTを参照すると良い

;既にどこかのグループに入ってる場合は無効
SIF 出現率:対象 == -1
	RETURN
;同行中も無効
IF 同行者 == 対象
	出現率:対象 = -1
	RETURN
ENDIF

;グループ候補は出現率を-1に設定する
出現率:対象 = -1

人数 = 0

FOR LCOUNT, 1, CHARANUM
	SIF CSTR:対象:在校 == CSTR:LCOUNT:在校
		クラスメイト:(人数++) = LCOUNT
NEXT

;クラスメイト変数の順番をシャッフルする
FOR LCOUNT, 0, 人数
	SWAP クラスメイト:LCOUNT, クラスメイト:(RAND(LCOUNT, 人数))
NEXT


SELECTCASE 選出タイプ
	;相性の良いクラスメイトを優先
	;同値のキャラが複数いればランダムで選出（上で既にシャッフルしてある）
	CASE "相性"
		FOR LCOUNT, 0, 人数
			;対象は除外
			SIF クラスメイト:LCOUNT == 対象
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率:(クラスメイト:LCOUNT) == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:(クラスメイト:LCOUNT):現在地 != ""
				CONTINUE
			FOR LCOUNT2, 0, 5
				{
				IF 候補:LCOUNT2 == 0 ||
				相性値(クラスメイト:LCOUNT, 対象) > 相性値(候補:LCOUNT2, 対象) ||
				相性値(対象, クラスメイト:LCOUNT) > 相性値(対象, 候補:LCOUNT2)
				}
					ARRAYSHIFT 候補, 1, クラスメイト:LCOUNT, LCOUNT2
					;グループ候補は出現率を-1に設定する
					出現率:(クラスメイト:LCOUNT) = -1
					BREAK
				ENDIF
			NEXT
		NEXT
	;ランダム選出
	CASEELSE
		FOR LCOUNT, 0, 人数
			;対象は除外
			SIF クラスメイト:LCOUNT == 対象
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率:(クラスメイト:LCOUNT) == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:(クラスメイト:LCOUNT):現在地 != ""
				CONTINUE
			ARRAYSHIFT 候補, 1, クラスメイト:LCOUNT
		NEXT
		ARRAYCOPY "クラスメイト", "候補"
ENDSELECT

RETURN 候補:0, 候補:1, 候補:2, 候補:3, 候補:4

@グループキャラ選出, 対象, 選出タイプ
#DIM DYNAMIC 対象
#DIMS DYNAMIC 選出タイプ
#DIM DYNAMIC 候補, 5
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2

;上のとほぼ同じだが、こちらは学校ごとではなく全体でグループを作る
;ただし学校が同じでもない、相性が良いわけでもない、何も接点の無いキャラはグループにならない
;RESULT:0～4で最大5人返す 必要なぶんだけRESULTを参照すると良い

;既にどこかのグループに入ってる場合は無効
SIF 出現率:対象 == -1
	RETURN
;同行中も無効
IF 同行者 == 対象
	出現率:対象 = -1
	RETURN
ENDIF

;グループ候補は出現率を-1に設定する
出現率:対象 = -1

;番号が変わるので対象の値をNOにしておく
対象 = NOF(対象)

;キャラの順番をシャッフルする
FOR LCOUNT, 1, CHARANUM
	SWAPCHARA LCOUNT, RAND(LCOUNT, CHARANUM)
NEXT

SELECTCASE 選出タイプ
	;相性の良いキャラを優先
	;同値のキャラが複数いればランダムで選出
	CASE "相性"
		FOR LCOUNT, 1, CHARANUM
			;対象自身は除外
			SIF LCOUNT == GETCHARA(対象)
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率:LCOUNT == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:LCOUNT:現在地 != ""
				CONTINUE
			;相性、学校、血縁のいずれかも接点が無いキャラは除外
			SIF CSTR:GETCHARA(対象):在校 != "" && CSTR:GETCHARA(対象):在校 == CSTR:LCOUNT:在校
				GOTO CLEAR
			SIF CSTR:GETCHARA(対象):在任 != "" && CSTR:GETCHARA(対象):在任 == CSTR:LCOUNT:在任
				GOTO CLEAR
			SIF CFLAG:血縁コード && CFLAG:GETCHARA(対象):血縁コード == CFLAG:LCOUNT:血縁コード
				GOTO CLEAR
			SIF 相性値(GETCHARA(対象), LCOUNT) > 100
				GOTO CLEAR
			SIF 相性値(LCOUNT, GETCHARA(対象)) > 100
				GOTO CLEAR
			CONTINUE

			$CLEAR
			FOR LCOUNT2, 0, 5
				{
				IF 候補:LCOUNT2 == 0 ||
				相性値(LCOUNT, GETCHARA(対象)) > 相性値(GETCHARA(候補:LCOUNT2), GETCHARA(対象)) ||
				相性値(GETCHARA(対象), LCOUNT) > 相性値(GETCHARA(対象), GETCHARA(候補:LCOUNT2))
				}
					;こっちは後でキャラ番号戻るのでNOで入れる
					ARRAYSHIFT 候補, 1, NOF(LCOUNT), LCOUNT2
					BREAK
				ENDIF
			NEXT
		NEXT
	;接点のあるキャラをランダム選出
	CASEELSE
		FOR LCOUNT, 1, CHARANUM
			;対象自身は除外
			SIF LCOUNT == GETCHARA(対象)
				CONTINUE
			;既にグループ候補の場合は入れない
			SIF 出現率:LCOUNT == -1
				CONTINUE
			;現在地が確定してる場合も無理
			SIF CSTR:LCOUNT:現在地 != ""
				CONTINUE
			;相性、学校、血縁のいずれかも接点が無いキャラは除外
			SIF CSTR:GETCHARA(対象):在校 == CSTR:LCOUNT:在校
				GOTO CLEARELSE
			SIF CSTR:GETCHARA(対象):在任 == CSTR:LCOUNT:在任
				GOTO CLEARELSE
			SIF CFLAG:GETCHARA(対象):血縁コード && CFLAG:GETCHARA(対象):血縁コード == CFLAG:LCOUNT:血縁コード
				GOTO CLEARELSE
			SIF 相性値(GETCHARA(対象), LCOUNT) > 100
				GOTO CLEARELSE
			SIF 相性値(LCOUNT, GETCHARA(対象)) > 100
				GOTO CLEARELSE
			CONTINUE

			$CLEARELSE
			;こっちは後でキャラ番号戻るのでNOで入れる
			ARRAYSHIFT 候補, 1, NOF(LCOUNT)
		NEXT
ENDSELECT

;最後にNOでソートしなおす
SORTCHARA NO

;グループ候補は出現率を-1に設定する
FOR LCOUNT, 0, 5
	SIF 候補:LCOUNT
		出現率:GETCHARA(候補:LCOUNT) = -1
NEXT

RETURN GETCHARA(候補:0), GETCHARA(候補:1), GETCHARA(候補:2), GETCHARA(候補:3), GETCHARA(候補:4)

@学園データベース
#DIM DYNAMIC LCOUNT

PRINTL [1] - 学校一覧
PRINTL [2] - 
DRAWLINE
PRINTPLAIN 　DATABASE　
PRINTL [0] - 戻る

DO
	INPUT
	SELECTCASE RESULT
		CASE 0 
			RETURN
		CASE 1
			CALL 学校一覧_データベース
			RESTART
	ENDSELECT
LOOP 1

@学校一覧_データベース
#DIM DYNAMIC LCOUNT
#DIMS DYNAMIC 名称抜き取り用, 2
#DIM DYNAMIC 選択校
#DIM DYNAMIC 選択キャラ

FOR LCOUNT, 0, VARSIZE("学校名")
	PRINTFORMLC 　[{LCOUNT, 2}] - %学校名:LCOUNT%
NEXT
CALL NEWLINE

DRAWLINE
PRINTPLAIN 　DATABASE　
PRINTL [-1] - 戻る

DO
	INPUT
	選択校 = RESULT
	SELECTCASE 選択校
		CASE -1
			RETURN
		CASE 0 TO VARSIZE("学校名")-1
			$生徒選択
			DRAWLINE
			PRINTFORML □%学校名:選択校%の在校生
			FOR LCOUNT, 0, CHARANUM
				SIF CSTR:LCOUNT:在校 != 学校名:選択校
					CONTINUE
				PRINTFORML 　[{LCOUNT}] %NAME:LCOUNT%
			NEXT
			PRINTFORML □%学校名:選択校%の教師
			FOR LCOUNT, 0, CHARANUM
				SIF CSTR:LCOUNT:在任 != 学校名:選択校
					CONTINUE
				PRINTFORML 　担当科目:%CSTR:LCOUNT:担当科目% [{LCOUNT}] %NAME:LCOUNT% 
			NEXT
			DRAWLINE
			PRINTPLAINFORM 　%学校名:選択校%　
			PRINTL [-1] - 戻る

			DO
				INPUT
				SELECTCASE RESULT
					CASE -1
						RESTART
					CASE 0 TO CHARANUM-1
						選択キャラ = RESULT
						DRAWLINE
						PRINTFORML □%NAME:選択キャラ%の情報
						PRINTFORML 　倫理観崩壊度:{CFLAG:選択キャラ:倫理観}
						PRINTL □各ロケーションでの出現率
						;どこのロケーションに出現するのかを表示
						FOR LCOUNT, 0, VARSIZE("ロケーション")
							VARSET 出現率
							SPLIT ロケーション:LCOUNT, "/", 名称抜き取り用
							;分割されてたらスラッシュより後の部分だけを使用する
							IF RESULT >= 2
								RESULT = 0
								TRYCALLFORM 出現キャラ_%名称抜き取り用:1%
							ELSE
								RESULT = 0
								TRYCALLFORM 出現キャラ_%ロケーション:LCOUNT%
							ENDIF
							;出現率も表示
							SIF 出現率:選択キャラ > 0
								PRINTFORMLC 　%ロケーション:LCOUNT%({出現率:選択キャラ}\%)
						NEXT
						CALL NEWLINE
						DRAWLINE
						PRINTPLAIN 　DATABASE　
						PRINTW クリック・Enterで戻る
						BREAK
				ENDSELECT
			LOOP 1
			GOTO 生徒選択
	ENDSELECT
LOOP 1

@好感度合計, 対象
#FUNCTION
#DIM DYNAMIC 対象

RETURNF SUMARRAY(好感度:対象:0)

;;;学園モードの名前表示処理
@SNAME, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

RETURNF NAME:対象

;;;好感度上昇とメッセージ表示を行う
@好感度上昇, 対象, 好感度種類, 上昇値
#DIM DYNAMIC 対象
#DIMS DYNAMIC 好感度種類
#DIM DYNAMIC 上昇値

;素質等での補正を入れる

好感度:対象:好感度種類 += 上昇値

IF SEX(対象) == 2 && 好感度種類 == "舎弟"
	PRINTFORML 好感度上昇:%NAME:対象%(母性+{上昇値})
ELSE
	PRINTFORML 好感度上昇:%NAME:対象%(%好感度種類%+{上昇値})
ENDIF

;;;連絡先入手とメッセージ表示
@連絡先入手, 対象
#DIM DYNAMIC 対象

連絡先:対象 = 1

PRINTFORML 連絡先入手:%NAME:対象%

;;;恋人処理とメッセージ表示
@恋仲, 対象
#DIM DYNAMIC 対象

TALENT:対象:恋慕 = 1

PRINTFORML %NAME:対象%が恋人になった！

@TRAIN_SCHOOL
BASE:体力 = MAXBASE:体力
BASE:気力 = MAXBASE:気力

CALL EVENTUSERTRAIN
DO
	CALL SHOW_STATUS
	CALL SHOW_USERCOM
	INPUT
	CALL USERCOM
LOOP !TFLAG:調教終了

;習得の珠加算
SELECTCASE GETPALAMLV(PALAM:習得, 10)
	CASE 0
	CASE 1
		IF PALAM:習得 < PALAMLV:1*3
			JUEL:習得 += 1
		ELSE
			JUEL:習得 += 2
		ENDIF
	CASE 2
		IF PALAM:習得 < PALAMLV:2*3
			JUEL:習得 += 10
		ELSE
			JUEL:習得 += 20
		ENDIF
	CASE 3
		IF PALAM:習得 < PALAMLV:3*2
			JUEL:習得 += 100
		ELSE
			JUEL:習得 += 200
		ENDIF
	CASE 5
		JUEL:習得 += 1000
	CASE 6
		JUEL:習得 += 2000
	CASE 7
		JUEL:習得 += 3000
	CASE 8
		JUEL:習得 += 5000
	CASE 9
		JUEL:習得 += 8000
	CASEELSE
		JUEL:習得 += PALAM:習得/20
ENDSELECT

;とりあえず上級売春と同じ処理で自動上昇するようにしてみる
ABL:Ｃ感覚 = MAX(ABL:TARGET:Ｃ感覚, LIMIT(EXP:絶頂経験/50, 0, 10))
ABL:Ｂ感覚 = MAX(ABL:TARGET:Ｂ感覚, LIMIT(EXP:絶頂経験/50, 0, 10))
ABL:Ｖ感覚 = MAX(ABL:TARGET:Ｖ感覚, LIMIT(EXP:Ｖ経験/100, 0, 10))
ABL:Ａ感覚 = MAX(ABL:TARGET:Ａ感覚, LIMIT(EXP:Ａ経験/100, 0, 10))
ABL:精液中毒 = MAX(ABL:TARGET:精液中毒, LIMIT(EXP:精液経験/300, 0, 10))
ABL:ゲイ中毒 = MAX(ABL:TARGET:ゲイ中毒, LIMIT(EXP:ゲイ経験/300, 0, 10))
ABL:レズ中毒 = MAX(ABL:TARGET:レズ中毒, LIMIT(EXP:レズ経験/300, 0, 10))
ABL:自慰中毒 = MAX(ABL:TARGET:自慰中毒, LIMIT(EXP:自慰経験/300, 0, 10))
ABL:奉仕精神 = MAX(ABL:TARGET:奉仕精神, LIMIT(EXP:奉仕快楽経験/200, 0, 10))
ABL:性交中毒 = MAX(ABL:TARGET:性交中毒, LIMIT(EXP:性交経験/300, 0, 10))
ABL:マゾっ気 = MAX(ABL:TARGET:マゾっ気, LIMIT(EXP:苦痛快楽経験/300, 0, 10))
IF JUEL:習得 >= PALAMLV:(ABL:技巧)
	JUEL:習得 -= PALAMLV:(ABL:技巧)
	ABL:技巧++
ENDIF

;イった回数に応じてときめき増加
ときめき増加量 = SUMARRAY(EX:TARGET:0)

;立つ鳥跡を濁さず
CALL アイテム修理
CALL CVAR_RESET
