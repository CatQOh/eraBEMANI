@畜産
#DIM DYNAMIC 飼育レベル計算用
#DIM DYNAMIC 養殖レベル計算用
#DIM DYNAMIC 減額率
#DIM DYNAMIC 減額率計算用
#DIM DYNAMIC LCOUNT

;新婚モード
IF ゲームモード() == "新婚モード" && FINDCHARA(CFLAG:嫁, 1) >= 0
	CSTR:MASTER:配属 = 畜産業
	SIF !CFLAG:FINDCHARA(CFLAG:嫁, 1):キャラロスト
		CSTR:FINDCHARA(CFLAG:嫁, 1):配属 = 畜産業
ENDIF

飼育レベル計算用 = 0
養殖レベル計算用 = 0
減額率 = 0

FOR LCOUNT, 0, CHARANUM
	IF CSTR:LCOUNT:配属 == "畜産業"
		CFLAG:LCOUNT:配属完了 = 1
		飼育レベル計算用 += 飼育レベル(LCOUNT)
		養殖レベル計算用 += 養殖レベル(LCOUNT)
		;出費減額率の計算 実務経験、飼育技能、その他素質で一人につき最大9%減
		減額率計算用 = 0
		;実務経験/200 最大5%
		減額率計算用 += MIN(EXP:LCOUNT:実務経験, 1000)/200
		;飼育レベル
		減額率計算用 += ABL:LCOUNT:飼育技能+特質("ワーカホリック", LCOUNT)/10
		;買い物上手 2%
		SIF TALENT:LCOUNT:買い物上手
			減額率計算用 += 2
		;専業主婦 2%
		SIF TALENT:LCOUNT:専業主婦
			減額率計算用 += 2
		減額率 += MIN(減額率計算用, 9)
	ENDIF
NEXT

;新婚モードなら飼育レベルと養殖レベルは50にする
IF ゲームモード() == "新婚モード"
	飼育レベル計算用 = 50
	養殖レベル計算用 = 50
ENDIF

;ORIGINモードなら最初から所持
IF ORIGIN
	ITEM:牧場 = 1
	ITEM:畜舎 = 1
	ITEM:養蜂場 = 1
	ITEM:生け簀 = 1
	SIF !家畜:牛
		家畜:牛 = 50
	SIF !家畜:馬
		家畜:馬 = 50
	SIF !家畜:羊
		家畜:羊 = 50
	SIF !家畜:豚
		家畜:豚 = 50
	SIF !家畜:鶏
		家畜:鶏 = 50
	SIF !家畜:蜂
		家畜:蜂 = 50
ENDIF

DRAWLINE
PRINTL □畜産関連の管理
IF !ORIGIN
	IF ITEM:牧場 || ITEM:畜舎 || ITEM:養蜂場 || ITEM:生け簀
		PRINT 　現在の予算 
		SIF ITEM:牧場
			CALL PASELI, @"牧場の予算:{リソース:牧場の予算}＄/%TOOPTIONINT(1000000)%＄ "
		SIF ITEM:畜舎
			CALL PASELI, @"畜舎の予算:{リソース:畜舎の予算}＄/%TOOPTIONINT(1000000)%＄ "
		PRINTL 
		PRINT 　　　　　　 
		SIF ITEM:養蜂場
			CALL PASELI, @"養蜂場の予算:{リソース:養蜂場の予算}＄/%TOOPTIONINT(1000000)%＄ "
		SIF ITEM:生け簀
			CALL PASELI, @"生け簀の予算:{リソース:生け簀の予算}＄/%TOOPTIONINT(1000000)%＄"
		PRINTL 
	ENDIF
ENDIF
SIF ゲームモード() != "新婚モード"
	PRINTFORML 　現在の人員 配属人数:{CMATCH(CSTR:配属, "畜産業")}/10 飼育レベル:{飼育レベル計算用} 養殖レベル:{養殖レベル計算用} 出費の減額率:{減額率}\%/90\%
PRINTL 

IF (ITEM:牧場 || ITEM:畜舎 || ITEM:生け簀 || ITEM:養蜂場) && ゲームモード() != "新婚モード"
	SIF !ORIGIN
		PRINTL 　[1] - 畜産業に投資する
	PRINTL 　[2] - 人員を配置する
ELSEIF ゲームモード() != "新婚モード"
	SETCOLORBYNAME gray
	HTML_PRINT SET_TOOLTIP("　[-] - 畜産業に投資する", "畜産用の設備を導入する必要があります")
	HTML_PRINT SET_TOOLTIP("　[-] - 人員を配置する", "畜産用の設備を導入する必要があります")
	RESETCOLOR
ENDIF
IF ITEM:生け簀
	PRINTL 　[3] - 魚の養殖を始める
ELSE
	SETCOLORBYNAME gray
	HTML_PRINT SET_TOOLTIP("　[-] - 魚の養殖を始める", "生け簀を導入する必要があります")
	RESETCOLOR
ENDIF

PRINTL 　[4] - 生産状況を確認する・家畜を売却する
SIF !ORIGIN
	PRINTL 　[5] - 設備を導入する
PRINTL 　[6] - 畜産業の説明
DRAWLINE
PRINTPLAIN 　畜産　
PRINTL [0] - 戻る

BINPUT
SELECTCASE RESULT
	CASE 1
		CALL 畜産業に投資する
	CASE 2
		CALL STRATEGY_PERSONAL, "畜産業"
	CASE 3
		CALL 魚の養殖, 減額率, 養殖レベル計算用
	CASE 4
		CALL 生産状況_畜産, 減額率
	CASE 5
		CALL 畜産設備導入
	CASE 6
		CALL MANUAL_畜産業
	CASE 0
		;新婚モード
		IF ゲームモード() == "新婚モード" && FINDCHARA(CFLAG:嫁, 1) >= 0
			CSTR:MASTER:配属 = 
			CSTR:FINDCHARA(CFLAG:嫁, 1):配属 = 
		ENDIF
		RETURN
ENDSELECT

RESTART

@畜産業に投資する
#DIM DYNAMIC 自動投資可能
#DIM DYNAMIC LRESULT
DRAWLINE
PRINTL □畜産業の各施設に投資できます
PRINTL 　予算が増えることで動物たちの環境が改善され、健康管理に良い影響を及ぼします
CALL PASELIL, @"　現在の予算:{MONEY}＄"
PRINTL 
自動投資可能 = 0
IF ITEM:牧場
	CALL PASELIL, @"　[0] - 牧場に投資する(現在の予算:{リソース:牧場の予算}＄/1000000＄)"
	自動投資可能 = 1
ELSE
	CALL PRINTCOLORL, "　[-] - 牧場未所持", "gray"
ENDIF

IF ITEM:畜舎
	CALL PASELIL, @"　[1] - 畜舎に投資する(現在の予算:{リソース:畜舎の予算}＄/1000000＄)"
	自動投資可能 = 1
ELSE
	CALL PRINTCOLORL, "　[-] - 畜舎未所持", "gray"
ENDIF

IF ITEM:養蜂場
	CALL PASELIL, @"　[2] - 養蜂場に投資する(現在の予算:{リソース:養蜂場の予算}＄/100000＄)"
	自動投資可能 = 1
ELSE
	CALL PRINTCOLORL, "　[-] - 養蜂場未所持", "gray"
ENDIF

IF ITEM:生け簀
	CALL PASELIL, @"　[3] - 養殖に投資する(現在の予算:{リソース:生け簀の予算}＄/1000000＄)"
	自動投資可能 = 1
ELSE
	CALL PRINTCOLORL, "　[-] - 生け簀未所持", "gray"
ENDIF
SIF 自動投資可能
	PRINTFORML 　[4] - 自動投資を\@ 自動投資 ? オフ # オン \@にする
SIF 自動投資
	PRINTFORML 　[5] - 自動投資の報告を簡略化\@ 自動投資報告簡略化 ? しない # する \@

PRINTL 　[9] - 戻る

BINPUT
SELECTCASE RESULT
	CASE 0
		PRINTL □牧場への投資
		CALL PASELIL, @"　投資する金額を入力してください 現在の所持金:{MONEY}＄"
		PRINTBUTTON "　[MAX]", MONEY > 1000000-リソース:牧場の予算 ? 1000000-リソース:牧場の予算 # MONEY
		PRINTL [500000][100000][50000][10000][5000]
		IF !家畜:牛 || !家畜:馬 || !家畜:羊
			PRINTL 
			PRINTL □動物を購入
			SIF !家畜:牛
				CALL PASELIL, @"　[-1] - 牛を買う(100000＄)"
			SIF !家畜:馬
				CALL PASELIL, @"　[-2] - 馬を買う(100000＄)"
			SIF !家畜:羊
				CALL PASELIL, @"　[-3] - 羊を買う(50000＄)"
		ENDIF
		PRINTL 　[0] - 戻る
		DO
			INPUT
			LRESULT = RESULT
			SELECTCASE LRESULT
				CASE -1
					IF 100000 > MONEY
						PRINTW 所持金が足りません
						BREAK
					ENDIF
					PRINTW 牛を購入しました
					CALL PAYMENT, -100000, "牛を購入"
					家畜:牛 = 50
					ITEM:牛肉 = 1
					BREAK
				CASE -2
					IF 100000 > MONEY
						PRINTW 所持金が足りません
						BREAK
					ENDIF
					PRINTW 馬を購入しました
					CALL PAYMENT, -100000, "馬を購入"
					家畜:馬 = 50
					ITEM:馬肉 = 1
					BREAK
				CASE -3
					IF 50000 > MONEY
						PRINTW 所持金が足りません
						BREAK
					ENDIF
					PRINTW 羊を購入しました
					CALL PAYMENT, -50000, "羊を購入"
					家畜:羊 = 50
					ITEM:羊肉 = 1
					BREAK
				CASE 0
					RESTART
				CASEELSE
					IF LRESULT > MONEY
						PRINTW 所持金が足りません
						CONTINUE
					ENDIF
					CALL SETMIN, LRESULT, 1000000-リソース:牧場の予算
					SIF LRESULT == 0
						RESTART
					CALL PASELIW, @"牧場に{LRESULT}＄投資しました"
					リソース:牧場の予算 += LRESULT
					CALL PAYMENT, -LRESULT, "牧場への投資"
					RESTART
			ENDSELECT
		LOOP 1
		RESTART
	CASE 1
		IF ITEM:畜舎
			PRINTL □畜舎に投資する
			CALL PASELIL, @"　投資する金額を入力してください 現在の所持金:{MONEY}＄"
			PRINTBUTTON "　[MAX]", MONEY > 1000000-リソース:畜舎の予算 ? 1000000-リソース:畜舎の予算 # MONEY
			PRINTL [500000][100000][50000][10000][5000][0]
			IF 家畜:豚 == 0 || 家畜:鶏 == 0
				PRINTL 
				PRINTL □動物を購入する
				SIF 家畜:豚 == 0
					CALL PASELIL, @"　[-1] - 豚を買う(50000＄)"
				SIF 家畜:鶏 == 0
					CALL PASELIL, @"　[-2] - 鶏を買う(30000＄)"
			ENDIF
			PRINTL 　[0] - 戻る
			DO
				INPUT
				LRESULT = RESULT
				SELECTCASE LRESULT
					CASE -1
						SIF 家畜:豚
							CONTINUE
						IF 50000 > MONEY
							PRINTW 所持金が足りません
							BREAK
						ENDIF
						PRINTW 豚を購入しました
						CALL PAYMENT, -50000, "豚を購入"
						家畜:豚 = 50
						ITEM:豚肉 = 1
						BREAK
					CASE -2
						SIF 家畜:鶏
							CONTINUE
						IF 30000 > MONEY
							PRINTW 所持金が足りません
							BREAK
						ENDIF
						PRINTW 鶏を購入しました
						CALL PAYMENT, -30000, "鶏を購入"
						家畜:鶏 = 50
						ITEM:鶏肉 = 1
						BREAK
					CASE 0
						RESTART
				ENDSELECT
				IF LRESULT > MONEY
					PRINTW 所持金が足りません
					CONTINUE
				ENDIF
				CALL SETMIN, LRESULT, 1000000-リソース:畜舎の予算
				SIF LRESULT == 0
					RESTART
				CALL PASELIW, @"畜舎に{LRESULT}＄投資しました"
				リソース:畜舎の予算 += LRESULT
				CALL PAYMENT, -LRESULT, "畜舎への投資"
				RESTART
			LOOP 1
			RESTART
		ENDIF
	CASE 2
		IF ITEM:養蜂場
			PRINTL □養蜂場に投資する
			CALL PASELIL, @"　投資する金額を入力してください 現在の所持金:{MONEY}＄"
			PRINTBUTTON "　[MAX]", MONEY > 100000-リソース:養蜂場の予算 ? 100000-リソース:養蜂場の予算 # MONEY
			PRINTL [50000][10000][5000][0]
			IF 家畜:蜂 == 0
				PRINTL 
				PRINTL □動物を購入する
				CALL PASELIL, @"　[-1] - ミツバチを購入する(10000＄)"
			ENDIF
			PRINTL 　[0] - 戻る
			DO
				INPUT
				LRESULT = RESULT
				SELECTCASE LRESULT
					CASE -1
						SIF 家畜:蜂
							CONTINUE
						IF 10000 > MONEY
							PRINTW 所持金が足りません
							BREAK
						ENDIF
						PRINTW ミツバチを購入しました
						CALL PAYMENT, -10000, "ミツバチを購入"
						家畜:蜂 = 50
						ITEM:蜂蜜 = 1
						BREAK
					CASE 0
						RESTART
				ENDSELECT
				IF LRESULT > MONEY
					PRINTW 所持金が足りません
					CONTINUE
				ENDIF
				CALL SETMIN, LRESULT, 100000-リソース:養蜂場の予算
				SIF LRESULT == 0
					RESTART
				CALL PASELIW, @"養蜂場に{LRESULT}＄投資しました"
				リソース:養蜂場の予算 += LRESULT
				CALL PAYMENT, -LRESULT, "養蜂場への投資"
				RESTART
			LOOP 1
			RESTART
		ENDIF
	CASE 3
		IF ITEM:生け簀
			CALL PASELIL, @"投資する金額を入力してください 現在の所持金:{MONEY}＄"
			PRINTBUTTON "[MAX]", MONEY > 1000000-リソース:生け簀の予算 ? 1000000-リソース:生け簀の予算 # MONEY
			PRINTL [500000][100000][50000][10000][5000][0]
			PRINTL [0] - 戻る
			DO
				INPUT
				LRESULT = RESULT
				IF LRESULT > MONEY
					PRINTW 所持金が足りません
					CONTINUE
				ENDIF
				CALL SETMIN, LRESULT, 1000000-リソース:生け簀の予算
				SIF LRESULT == 0
					RESTART
				CALL PASELIW, @"生け簀に{LRESULT}＄投資しました"
				CALL PAYMENT, -LRESULT, "生け簀への投資"
				リソース:生け簀の予算 += LRESULT
				RESTART
			LOOP 1
		ENDIF
	CASE 4
		INVERTBIT 自動投資, 0
		RESTART
	CASE 5
		INVERTBIT 自動投資報告簡略化, 0
		RESTART
	CASE 9
		RETURN
ENDSELECT

@魚の養殖, 減額率, 養殖レベル計算用
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 減額率
#DIM DYNAMIC 養殖レベル計算用
#DIM DYNAMIC 海産物
#DIM DYNAMIC LRESULT

DRAWLINE
PRINTL □魚を養殖します
PRINTFORML 　現在の人員での養殖成功までの日数 {50-養殖レベル計算用/2}日
FOR LCOUNT, 1, 5
	PRINTFORM 　[{LCOUNT}] - 
	IF 生け簀の養殖:LCOUNT == ""
		PRINTL 未使用の生け簀
	ELSE
		PRINTFORML %生け簀の養殖:LCOUNT%の生け簀\@ 生け簀の状態:LCOUNT == 0 ? (養殖成功) # (養殖中 残り{生け簀の状態:LCOUNT}日) \@
	ENDIF
NEXT
DRAWLINE
PRINTPLAIN 　魚の養殖　
PRINTL [0] - 戻る

BINPUT
SELECTCASE RESULT
	CASE 0
		RETURN
	CASE 1 TO 4
		LRESULT = RESULT
		IF 生け簀の養殖:LRESULT != ""
			PRINTFORML {LRESULT}番の生け簀では%生け簀の養殖:LRESULT%を養殖中です。新しく別の魚を養殖しますか？
			PRINTL [0] - 新しいものに挑戦したい
			PRINTL [1] - もったいないからやめる
			BINPUT
			SIF RESULT == 1
				RESTART
		ENDIF
		DRAWLINE
		PRINTFORML □{LRESULT}番の生け簀で何を養殖しますか？
		FOR LCOUNT, 800, 850
			SIF ITEMNAME:LCOUNT != ""
				CALL PASELIL, @"　[{LCOUNT-800, 2}] - %ITEMNAME:LCOUNT%\@ !ORIGIN ? (養殖費用 およそ{ITEMPRICE:LCOUNT*(100-減額率)/100}＄/日)#\@"
		NEXT
		DRAWLINE
		PRINTPLAIN 　生け簀　
		PRINTL [100] - 戻る
		BINPUT
		SELECTCASE RESULT
			CASE 100
				RESTART
			CASEELSE
				海産物 = RESULT+800
				PRINTFORML {LRESULT}番の生け簀で%ITEMNAME:海産物%の養殖を始めました
				生け簀の状態:LRESULT = 50-養殖レベル計算用/2
				生け簀の養殖:LRESULT = %ITEMNAME:海産物%
				ITEM:海産物 = 1
				RESTART
		ENDSELECT
ENDSELECT

@生産状況_畜産, 減額率
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 名前文字数
#DIM DYNAMIC 減額率
#DIM DYNAMIC LTARGET
#DIMS DYNAMIC 表示用
DRAWLINE

PRINTFORML □畜産業の人員:{CMATCH(CSTR:配属, "畜産業")}/10
IF CMATCH(CSTR:配属, "畜産業")
	FOR LCOUNT, 0, CHARANUM
		SIF CSTR:LCOUNT:配属 == "畜産業"
			CALL SETMAX(名前文字数, STRLENS(NAME:LCOUNT))
	NEXT
	LTARGET = TARGET
	FOR LCOUNT, 0, CHARANUM
		IF CSTR:LCOUNT:配属 == "畜産業"
			TARGET = LCOUNT
			PRINTFORM 　%NAME:LCOUNT, 名前文字数, LEFT% 飼育技能:{ABL:LCOUNT:飼育技能, 2, LEFT} 飼育適性:{飼育レベル(LCOUNT), 2, LEFT} 
			SIF 統率者("畜産業") && !TALENT:LCOUNT:統率
				PRINT 統率者ボーナス+1 
			CALL ISTALENT, LCOUNT, "世話好き"
			SELECTCASE CSTR:LCOUNT:種族
				CASE "獣人"
					PRINT [獣人]
				CASE "獣"
					PRINT [獣]
				CASE "人魚"
					PRINT [人魚]
				CASE "精霊"
					PRINT [精霊]
				CASE "妖精"
					PRINT [妖精]
			ENDSELECT
			CALL ISTALENT, LCOUNT, "統率"
			SIF 特質("ワーカホリック", LCOUNT)
				PRINTFORM [ワーカホリック+{特質("ワーカホリック", LCOUNT)/10}]
			CALL ABL_CHECK_飼育技能
			SIF RESULT && ABL:LCOUNT:飼育技能 < 10
				PRINTBUTTON "[飼育技能上昇可能]", LCOUNT+1
			PRINTL 
		ENDIF
	NEXT
	TARGET = LTARGET
ELSE
	PRINTL 　[無し]
ENDIF
	PRINTL 

PRINTL 　[-1] 動物図鑑を見る
PRINTL 

PRINTL □自動投資
PRINTFORML 　現在:\@ 自動投資 ? オン # オフ \@
PRINTL 

CALL PASELIL, @"□現在の牧場 (牧場の予算:{リソース:牧場の予算}＄/%TOOPTIONINT(1000000)%＄)"
IF !ITEM:牧場
	CALL PRINTCOLORL, "　[牧場未所持]", "gray"
ELSE
	PRINT 　家畜:牛:
	CALL 動物の具合, 家畜:牛
	PRINT 家畜:馬:
	CALL 動物の具合, 家畜:馬
	PRINT 家畜:羊:
	CALL 動物の具合, 家畜:羊
	IF 家畜:ユニコーン > 0
		PRINT 家畜:ユニコーン:
		CALL 動物の具合, 家畜:ユニコーン
	ENDIF
	IF 家畜:バイコーン > 0
		PRINT 家畜:バイコーン:
		CALL 動物の具合, 家畜:バイコーン
	ENDIF
	PRINTL 
ENDIF
PRINTL 

CALL PASELIL, @"□現在の畜舎 (畜舎の予算:{リソース:畜舎の予算}＄/%TOOPTIONINT(1000000)%＄)"
IF !ITEM:畜舎
	CALL PRINTCOLORL, "　[畜舎未所持]", "gray"
ELSE
	PRINT 　家畜:豚:
	CALL 動物の具合, 家畜:豚
	PRINT 　家畜:鶏:
	CALL 動物の具合, 家畜:鶏
	PRINTL 
ENDIF
PRINTL 

CALL PASELIL, @"□現在の養蜂場 (養蜂場の予算:{リソース:養蜂場の予算}＄/%TOOPTIONINT(100000)%＄)"
IF !ITEM:養蜂場
	CALL PRINTCOLORL, "　[養蜂場未所持]", "gray"
ELSE
	PRINT 　家畜:蜂:
	CALL 動物の具合, 家畜:蜂
	PRINTL 
ENDIF
PRINTL 

CALL PASELIL, @"□現在の生け簀 (生け簀の予算:{リソース:生け簀の予算}＄/%TOOPTIONINT(1000000)%＄)"
IF !ITEM:生け簀
	CALL PRINTCOLORL, "　[生け簀未所持]", "gray"
ELSE
	FOR LCOUNT, 1, 5
		IF 生け簀の養殖:LCOUNT != ""
			PRINTFORM 　{LCOUNT}番の生け簀:%生け簀の養殖:LCOUNT%
			IF 生け簀の状態:LCOUNT != 0
				PRINTFORM 養殖中(残り{生け簀の状態:LCOUNT}日) 
			ELSE
				PRINT 養殖成功 
			ENDIF
			CALL PASELI, @"費用:{ITEMPRICE:(生け簀の養殖:LCOUNT)*(100-減額率)/100}＄/日"
			SIF LCOUNT == 2
				PRINTL 
		ELSE
			PRINTFORM 　{LCOUNT}番の生け簀:無し
			SIF LCOUNT == 2
				PRINTL 
		ENDIF
	NEXT
ENDIF
PRINTL 
PRINTL 

PRINTL □現在生産できるアイテム
PRINT 　
SIF 家畜:牛 >= 30
	PRINT [牛肉]
SIF 家畜:牛 >= 80
	PRINT [牛乳]
SIF 家畜:馬 >= 30 || 家畜:ユニコーン >= 30 || 家畜:バイコーン >= 30
	PRINT [馬肉]
SIF 家畜:羊 >= 30
	PRINT [羊肉]
SIF 家畜:羊 >= 80
	PRINT [チーズ]

SIF 家畜:豚 >= 30
	PRINT [豚肉]
SIF 家畜:鶏 >= 30
	PRINT [鶏肉]
SIF 家畜:鶏 >= 80
	PRINT [卵]

SIF TALENT:MASTER:触手使い
	PRINT [触手肉]

SIF 家畜:蜂 >= 30
	PRINT [蜂蜜]

FOR LCOUNT, 1, 5
	SIF 生け簀の養殖:LCOUNT != "" && 生け簀の状態:LCOUNT == 0
		PRINTFORM [%生け簀の養殖:LCOUNT%]
NEXT

表示用 = %HTML_POPPRINTINGSTR()%
IF 表示用 == "　"
	PRINT [無し]
ELSE
	PRINTFORM %表示用%
ENDIF
PRINTL 

IF !GROUPMATCH(ゲームモード(), "通常モード", "段位認定")
	PRINTL □売却できる動物たちの余力
	PRINT 　
	FOR LCOUNT, 0, 5
		SIF 家畜余力:LCOUNT < 10
			SETCOLORBYNAME gray
		PRINTFORM %ERDNAME(家畜余力, LCOUNT)%:%DIV10(家畜余力:LCOUNT)%頭 [\@ 家畜余力:LCOUNT >= 10 ? {LCOUNT+10} # -- \@] %ERDNAME(家畜, LCOUNT)%を売却 
		RESETCOLOR
		IF LCOUNT == 2
			PRINTL 
			PRINT 　
		ENDIF
	NEXT
	PRINTL 
ENDIF

DRAWLINE
PRINTPLAIN 　生産状況　
PRINTL [0] - 戻る

BINPUT
SELECTCASE RESULT
	CASE 0
		RETURN
	CASE -1
		CALL 動物図鑑
		RESTART
	CASE 10 TO 19
		CALL 家畜売却, RESULT-10
		RESTART
	CASEELSE
		LTARGET = TARGET
		TARGET = RESULT-1
		SIF CSTR:配属 == "畜産業"
			CALL ABLUP, "飼育技能"
		TARGET = LTARGET
ENDSELECT

@家畜売却, 家畜ID
#DIM DYNAMIC 家畜ID
#DIM DYNAMIC 単価
#DIM DYNAMIC 倍率
#DIM DYNAMIC 合計額

SELECTCASE ERDNAME(家畜, 家畜ID)
	CASE "牛", "馬"
		単価 = 10000
	CASE "羊", "豚"
		単価 = 5000
	CASE "鶏"
		単価 = 3000
ENDSELECT

PRINTFORML □%ERDNAME(家畜, 家畜ID)%を売却
PRINTFORM 　余力:%DIV10(家畜余力:家畜ID)%頭×単価:{単価}×
;下の関数は半角スペース付けられてるので結局コピペ
SELECTCASE 家畜:家畜ID
	CASE 80 TO 100
		SETCOLORBYNAME lime
		PRINT 元気(120%)
		倍率 = 120
	CASE 50 TO 79
		PRINT 普通(100%)
		倍率 = 100
	CASE 30 TO 49
		SETCOLORBYNAME yellow
		PRINT 微妙(80%)
		倍率 = 80
	CASE 10 TO 29
		SETCOLORBYNAME red
		PRINT 悪い(50%)
		倍率 = 50
	CASE 1 TO 9
		SETCOLORBYNAME darkred
		PRINT 病気(30%)
		倍率 = 30
ENDSELECT
RESETCOLOR

合計額 = (家畜余力:家畜ID/10)*単価*倍率/100

CALL PASELIL, @"＝{合計額}＄"
PRINTL 　売却しますか？（牧場の生産状況には影響ありません）
PRINTL 　[0] - はい
PRINTL 　[1] - いいえ

BINPUT

SIF RESULT
	RETURN

CALL PASELIW, @"%ERDNAME(家畜, 家畜ID)%の余力を{合計額}＄で売却しました"
CALL PAYMENT, 合計額, @"%ERDNAME(家畜, 家畜ID)%の余力を売却"
家畜余力:家畜ID %= 10

@動物の具合, ステータス値
#DIM DYNAMIC ステータス値

SELECTCASE ステータス値
	CASE 80 TO 100
		SETCOLORBYNAME lime
		PRINT 元気 
	CASE 50 TO 79
		PRINT 普通 
	CASE 30 TO 49
		SETCOLORBYNAME yellow
		PRINT 微妙 
	CASE 10 TO 29
		SETCOLORBYNAME red
		PRINT 悪い 
	CASE 1 TO 9
		SETCOLORBYNAME darkred
		PRINT 病気 
	CASE 0
		SETCOLORBYNAME gray
		PRINT 無し 
ENDSELECT

RESETCOLOR

@畜産設備導入
#DIMS DYNAMIC 購入設備
DRAWLINE
PRINTL □畜産用設備の導入
PRINT 現在の設備 
CALL PRINTCOLOR, "[牧場]", @"\@ !ITEM:牧場 ? gray #\@"
CALL PRINTCOLOR, "[畜舎]", @"\@ !ITEM:畜舎 ? gray #\@"
CALL PRINTCOLOR, "[養蜂場]", @"\@ !ITEM:養蜂場 ? gray #\@"
CALL PRINTCOLOR, "[生け簀]", @"\@ !ITEM:生け簀 ? gray #\@"

PRINTL 
PRINTL 
IF ITEM:牧場
	PRINTL 　[-] - 牧場(購入済み)
ELSE
	CALL PASELIL, @"　[0] - 牧場を購入する({ITEMPRICE:牧場}＄)"
ENDIF
IF ITEM:畜舎
	PRINTL 　[-] - 畜舎(購入済み)
ELSE
	CALL PASELIL, @"　[1] - 畜舎を購入する({ITEMPRICE:畜舎}＄)"
ENDIF
IF ITEM:養蜂場
	PRINTL 　[-] - 養蜂場(導入済み)
ELSE
	CALL PASELIL, @"　[2] - 養蜂場を設置する({ITEMPRICE:養蜂場}＄)"
ENDIF
IF ITEM:生け簀
	PRINTL 　[-] - 生け簀(購入済み)
ELSE
	CALL PASELIL, @"　[3] - 生け簀を購入する({ITEMPRICE:生け簀}＄)"
ENDIF
PRINTL 　[9] - 戻る

BINPUT
SELECTCASE RESULT
	CASE 0
		購入設備 = 牧場
	CASE 1
		購入設備 = 畜舎
	CASE 2
		購入設備 = 養蜂場
	CASE 3
		購入設備 = 生け簀
	CASE 9
		RETURN
ENDSELECT

SELECTCASE 購入設備
	CASE "牧場"
		PRINTL 牧場:牛、馬、羊の飼育が可能になる
	CASE "畜舎"
		PRINTL 畜舎:豚、鶏の飼育が可能になる
	CASE "養蜂場"
		PRINTL 養蜂場:蜂蜜の採取が可能になる
	CASE "生け簀"
		PRINTL 生け簀:魚の養殖が可能になる
ENDSELECT

IF MONEY < ITEMPRICE:購入設備
	PRINTW 所持金が足りません
ELSE
	CALL PASELIL, @"%購入設備%を購入します。よろしいですか？(所持金:{MONEY}＄→{MONEY-ITEMPRICE:購入設備}＄)"
	PRINTL [0] - はい
	PRINTL [1] - いいえ
	BINPUT
	SELECTCASE RESULT
		CASE 0
			PRINTFORMW %購入設備%を購入しました
			ITEM:購入設備 = 1
			CALL PAYMENT, -ITEMPRICE:購入設備, @"「%購入設備%」購入"
	ENDSELECT
ENDIF
RESTART

@動物図鑑

DRAWLINE
PRINTL 　1,牛　 牛肉と牛乳を採取可能。乳牛だったり肉牛だったりする
PRINTL 　2,馬　 馬肉を採取可能。乗馬にも使える
PRINTL 　3,羊　 羊肉とチーズを採取可能。そのモフ度はアルパカに負けずとも劣らない
PRINTL 　4,豚　 豚肉を採取可能。たびたび罵倒の言葉に用いられるが実物は割と可愛い
PRINTL 　5,鶏　 鶏肉と鶏卵を採取可能。小さな体には世界中の食文化を担う無限の可能性が秘められている
PRINTL 　6,蜂　 蜂蜜を採取可能。刺されないように気をつけて！
PRINTL 　7,触手 触手肉を採取可能。料理システムを実装する当バリアントに登場したのが運の尽き
DRAWLINE
PRINTPLAIN 　動物図鑑　クリック・Enterで戻る
WAIT

@TURNEND_畜産
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC 飼育レベル計算用
#DIM DYNAMIC 養殖レベル計算用
#DIM DYNAMIC モチベ計算用
#DIM DYNAMIC モチベ合計値
#DIM DYNAMIC 出費
#DIM DYNAMIC 減額率
#DIM DYNAMIC 減額率計算用
#DIM DYNAMIC 動物の死亡
#DIM DYNAMIC 養殖中
#DIM DYNAMIC ユニコーン飼育レベル
#DIM DYNAMIC バイコーン飼育レベル
#DIM DYNAMIC 特殊馬アライメント合計
#DIM DYNAMIC 状態計算用
#DIM DYNAMIC 自動投資済
#DIM DYNAMIC 予算プール
#DIM DYNAMIC LTARGET
#DIM DYNAMIC 投資額

SIF !ITEM:牧場 && !ITEM:畜舎 && !ITEM:養蜂場 && !ITEM:生け簀
	RETURN 0

CALL CHECKDRAWLINE

;ターン終了時の口上呼び出し
FOR LCOUNT, 0, CHARANUM
	SIF CSTR:LCOUNT:配属 == "畜産業"
		CALL KOJO_STRATEGY, LCOUNT, "畜産業", "TURNEND"
NEXT

;以下の処理は日付変更時のみ
SIF ターン == "昼"
	RETURN 0

;新婚モード
IF ゲームモード() == "新婚モード" && FINDCHARA(CFLAG:嫁, 1) >= 0
	CSTR:MASTER:配属 = 畜産業
	SIF !CFLAG:FINDCHARA(CFLAG:嫁, 1):キャラロスト
		CSTR:FINDCHARA(CFLAG:嫁, 1):配属 = 畜産業
ENDIF

FOR LCOUNT, 0, CHARANUM
	;10人配属できるので飼育レベル最大はだいたい200とする
	;養殖レベルはせいぜい70とかそこらへん
	IF CSTR:LCOUNT:配属 == "畜産業"
		飼育レベル計算用 += 飼育レベル(LCOUNT)
		養殖レベル計算用 += 養殖レベル(LCOUNT)
		;出費減額率の計算 実務経験、飼育技能、その他素質で一人につき最大9%減
		減額率計算用 = 0
		;実務経験/200 最大5%
		減額率計算用 += MIN(EXP:LCOUNT:実務経験, 1000)/200
		;飼育レベル
		減額率計算用 += ABL:LCOUNT:飼育技能
		SIF 統率者("畜産業") && !TALENT:LCOUNT:統率
			減額率計算用++
		;買い物上手 2%
		SIF TALENT:LCOUNT:買い物上手
			減額率計算用 += 2
		;専業主婦 2%
		SIF TALENT:LCOUNT:専業主婦
			減額率計算用 += 2
		;浪費癖 -3%
		SIF TALENT:LCOUNT:浪費癖
			減額率計算用 -= 3
		減額率 += LIMIT(減額率計算用, 0, 9)
		;ユニコーンポイントとバイコーンポイントの計算
		;下記計算式だと1キャラ-50～20の範囲くらい
		特殊馬アライメント合計 += 特殊馬アライメント(LCOUNT)
		SELECTCASE SIGN(特殊馬アライメント(LCOUNT))
			CASE 1
				ユニコーン飼育レベル += 飼育レベル(LCOUNT)
			CASE -1
				バイコーン飼育レベル += 飼育レベル(LCOUNT)
		ENDSELECT
	ENDIF
NEXT

;新婚モードなら飼育レベルと養殖レベルは50にする
IF ゲームモード() == "新婚モード"
	飼育レベル計算用 = 50
	養殖レベル計算用 = 50
ENDIF

;ORIGINなら予算は常にMAX
IF ORIGIN
	リソース:牧場の予算 = 1000000
	リソース:畜舎の予算 = 1000000
	リソース:養蜂場の予算 = 1000000
	リソース:生け簀の予算 = 1000000
	自動投資 = 0
ENDIF

;減額率が0なら1にする
CALL SETMAX, 減額率, 1

;牧場、畜舎、養蜂場の処理
FOR LCOUNT, 0, GETNUM(家畜, "蜂")+1
	IF 家畜:LCOUNT
		;家畜の種類によって出費が異なる
		SELECTCASE LCOUNT
			CASE GETNUM(家畜, "牛"), GETNUM(家畜, "馬"), GETNUM(家畜, "豚")
				;5万円±5千円
				出費 = RAND(45000, 55000)
			CASE GETNUM(家畜, "羊")
				;2万円±2千円
				出費 = RAND(18000, 22000)
			CASE GETNUM(家畜, "鶏")
				;1万円±1千円
				出費 = RAND(9000, 11000)
			CASE GETNUM(家畜, "蜂")
				;5000円±500円
				出費 = RAND(4500, 5500)
		ENDSELECT
		;減額率で計算
		出費 = 出費*(100-減額率)/100
		
		;予算の場所
		SELECTCASE LCOUNT
			CASE GETNUM(家畜, "牛"), GETNUM(家畜, "馬"), GETNUM(家畜, "羊")
				予算プール = GETNUM(リソース, "牧場の予算")
			CASE GETNUM(家畜, "豚"), GETNUM(家畜, "鶏")
				予算プール = GETNUM(リソース, "畜舎の予算")
			CASE GETNUM(家畜, "蜂")
				予算プール = GETNUM(リソース, "養蜂場の予算")
		ENDSELECT

		IF 出費 > リソース:予算プール && 自動投資
			IF MONEY >= 出費
				投資額 = MAX(出費, MIN(MONEY/10, 1000000))
				IF 自動投資報告簡略化
					SIF !自動投資済
						PRINTL 畜産業への自動投資を行いました
					自動投資済 = 1
				ELSE
					CALL PASELIL, @"%ERDNAME(家畜, LCOUNT)%の育成費用、{投資額}＄を%ERDNAME(リソース, 予算プール)%に繰り入れました"
				ENDIF
				CALL PAYMENT, -投資額, @"%ERDNAME(家畜, LCOUNT)%の育成費用"
				リソース:予算プール += 投資額
			ELSE
				PRINTFORML 所持金が足りないため、%ERDNAME(家畜, LCOUNT)%の育成費用への自動投資ができませんでした
			ENDIF
		ENDIF
		;予算が足りないと状態が悪くなる 1日で最大10 乱数次第では増えたりもする
		IF 出費 > リソース:予算プール
			;状態が3以下の場合は1日1づつ下がっていき、0で全滅する
			IF 家畜:LCOUNT <= 3
				家畜:LCOUNT--
			ELSE
				状態計算用 = MAX(10-(飼育レベル計算用/20), 1)
				;乱数で上下する ゆくゆくは気温や天候などでやりたい
				状態計算用 += RAND:3
				家畜:LCOUNT -= 状態計算用
				SIF 家畜:LCOUNT <= 3
					家畜:LCOUNT = 3
			ENDIF
		;予算が足りてると状態が良くなる
		ELSE
			状態計算用 = MAX(飼育レベル計算用/20, 1)
			;乱数で上下する ゆくゆくは気温や天候などでやりたい
			状態計算用 += RAND:3
			家畜:LCOUNT += 状態計算用
			;調子が良いと売却用の余力も増える 1日で最大0.5
			SIF LCOUNT < 5 && 家畜:LCOUNT >= 60
				家畜余力:LCOUNT += (家畜:LCOUNT-50)/10
			CALL SETMIN, 家畜余力:LCOUNT, 100
		ENDIF
		リソース:予算プール -= 出費
		;飼育レベル次第で状態の最大値が決まる 条件はゆるめ
		SELECTCASE 飼育レベル計算用
			CASE 0
				CALL SETMIN, 家畜, 50, LCOUNT
			CASE IS < 10
				CALL SETMIN, 家畜, 60, LCOUNT
			CASE IS < 20
				CALL SETMIN, 家畜, 70, LCOUNT
			CASE IS < 30
				CALL SETMIN, 家畜, 80, LCOUNT
			CASE IS < 40
				CALL SETMIN, 家畜, 90, LCOUNT
			CASEELSE
				CALL SETMIN, 家畜, 100, LCOUNT
		ENDSELECT
		IF 家畜:LCOUNT == 0
			PRINTFORML %ERDNAME(家畜, LCOUNT)%たちは飢餓で全滅しました……
			家畜余力:LCOUNT = 0
			動物の死亡++
		ENDIF
	ENDIF
NEXT

IF 家畜:ユニコーン
	;ユニコーンとバイコーンは出費無し
	;アライメントが純潔寄りで合計50未満、もしくは飼育レベル50未満だと居なくなる
	IF 特殊馬アライメント合計 < 50 || ユニコーン飼育レベル < 50
		PRINTL 飼育係をお気に召さないユニコーンは、どこかに逃げ出してしまった……
		家畜:ユニコーン = 0
		GOTO 特殊馬終了
	ENDIF
	;状態は(アライメント+飼育レベル-50)/2で決まる
	家畜:ユニコーン = (特殊馬アライメント合計+ユニコーン飼育レベル-50)/2
	CALL SETMIN, 家畜, 100, GETNUM(家畜, "ユニコーン")
ELSEIF 特殊馬アライメント合計 >= 50 && ユニコーン飼育レベル >= 50 && ITEM:牧場
	PRINTL どこからかやってきたユニコーンが牧場に住み着いたようだ
	家畜:ユニコーン = (特殊馬アライメント合計+ユニコーン飼育レベル-50)/2
	CALL SETMIN, 家畜, 100, GETNUM(家畜, "ユニコーン")
ENDIF

IF 家畜:バイコーン
	;ユニコーンとバイコーンは出費無し
	;アライメントが不純寄りで合計-300未満、もしくは飼育レベル100未満だと居なくなる
	IF 特殊馬アライメント合計 > -300 || バイコーン飼育レベル < 100
		PRINTL 飼育係をお気に召さないバイコーンは、どこかに逃げ出してしまった……
		家畜:バイコーン = 0
		GOTO 特殊馬終了
	ENDIF
	;状態は(ABS(アライメント)/5+飼育レベル-100)/2で決まる
	家畜:バイコーン = (ABS(特殊馬アライメント合計)/5+バイコーン飼育レベル-100)/2
	CALL SETMIN, 家畜, 100, GETNUM(家畜, "バイコーン")
ELSEIF 特殊馬アライメント合計 <= -300 && バイコーン飼育レベル >= 100 && ITEM:牧場
	PRINTL どこからかやってきたバイコーンが牧場に住み着いたようだ
	家畜:バイコーン = (ABS(特殊馬アライメント合計)/5+バイコーン飼育レベル-100)/2
	CALL SETMIN, 家畜, 100, GETNUM(家畜, "バイコーン")
ENDIF

$特殊馬終了

IF ITEM:生け簀
	出費 = 0
	FOR LCOUNT, 1, 5
		SIF 生け簀の養殖:LCOUNT != ""
			出費 += ITEMPRICE:(生け簀の養殖:LCOUNT)
	NEXT
	SIF 出費 == 0
		GOTO 養殖無し
	
	養殖中 = 1
	
	出費 = 出費*(100-減額率)/100
	IF 出費 > リソース:生け簀の予算 && 自動投資
		IF MONEY >= 出費
			投資額 = MAX(出費, MIN(MONEY/10, 1000000))
			IF 自動投資報告簡略化
				SIF !自動投資済
					PRINTL 畜産業への自動投資を行いました
				自動投資済 = 1
			ELSE
				CALL PASELIL, @"魚の育成費用、{投資額}＄をリソース:生け簀の予算に繰り入れました"
			ENDIF
			CALL PAYMENT, -投資額, "魚の育成費用"
			リソース:生け簀の予算 += 投資額
		ELSE
			PRINTL 所持金が足りないため、魚の育成費用への自動投資ができませんでした
		ENDIF
	ENDIF
	IF リソース:生け簀の予算 < 出費
		FOR LCOUNT, 1, 5
			IF 生け簀の養殖:LCOUNT != ""
				IF 生け簀の状態:LCOUNT == 0
					PRINTFORML リソース:生け簀の予算不足のため、%生け簀の養殖:LCOUNT%の収穫ができませんでした
					生け簀の状態:LCOUNT = 1
				ELSE
					PRINTFORML リソース:生け簀の予算不足のため、%生け簀の養殖:LCOUNT%の養殖ができませんでした
				ENDIF
			ENDIF
		NEXT
	ELSE
		FOR LCOUNT, 1, 5
			IF 生け簀の養殖:LCOUNT != ""
				IF 生け簀の状態:LCOUNT > 0
					SIF --生け簀の状態:LCOUNT == 0
						PRINTFORML %生け簀の養殖:LCOUNT%が収穫可能になりました
				ENDIF
			ENDIF
		NEXT
		リソース:生け簀の予算 -= 出費
	ENDIF
ENDIF
$養殖無し

;畜肉の有無
ITEM:牛肉 = 家畜:牛 >= 30 ? 1 # 0
ITEM:馬肉 = 家畜:馬 >= 30 || 家畜:ユニコーン >= 30 || 家畜:バイコーン >= 30 ? 1 # 0
ITEM:羊肉 = 家畜:羊 >= 30 ? 1 # 0
ITEM:豚肉 = 家畜:豚 >= 30 ? 1 # 0
ITEM:鶏肉 = 家畜:鶏 >= 30 ? 1 # 0
ITEM:触手肉 = TALENT:MASTER:触手使い ? 1 # 0

;副産物の有無
ITEM:牛乳 = 家畜:牛 >= 80 ? 1 # 0
ITEM:チーズ = 家畜:羊 >= 80 ? 1 # 0
ITEM:卵 = 家畜:鶏 >= 80 ? 1 # 0

IF リソース:牧場の予算 < 0
	PRINTL リソース:牧場の予算が不足しています。補充しましょう
	リソース:牧場の予算 = 0
ENDIF
IF リソース:畜舎の予算 < 0
	PRINTL リソース:畜舎の予算が不足しています。補充しましょう
	リソース:畜舎の予算 = 0
ENDIF
IF リソース:養蜂場の予算 < 0
	PRINTL リソース:養蜂場の予算が不足しています。補充しましょう
	リソース:養蜂場の予算 = 0
ENDIF

;モチベ計算用にもう一度回す
FOR LCOUNT, 0, CHARANUM
	IF CSTR:LCOUNT:配属 == "畜産業"
		モチベ計算用 = 0
		FOR LCOUNT2, 0, VARSIZE("TALENT")
			SIF !TALENT:LCOUNT:LCOUNT2
				CONTINUE
			SELECTCASE TALENTNAME:LCOUNT2
				CASE "服従", "隷属", "ハイテンション", "世話好き", "好奇心", "楽観的", "恥薄い", "献身的", "幼稚"
					モチベ計算用++
				CASE "臆病", "気丈", "悲観的", "汚臭敏感", "潔癖症", "犬嫌い", "猫嫌い"
					モチベ計算用--
			ENDSELECT
		NEXT
		SELECTCASE CSTR:LCOUNT:種族
			CASE "獣人", "獣", "人魚"
				モチベ計算用++
			CASE "ヴァンパイア"
				モチベ計算用--
		ENDSELECT
		;予算がたくさん(7割以上)あるとモチベも上がる 養蜂場は例外
		SIF リソース:牧場の予算 >= 700000
			モチベ計算用++
		SIF リソース:畜舎の予算 >= 700000
			モチベ計算用++
		SIF リソース:生け簀の予算 >= 700000
			モチベ計算用++
		;動物が死んでるとモチベ激減する
		モチベ計算用 -= 動物の死亡*50
		モチベ合計値 = CFLAG:LCOUNT:モチベーション+モチベ計算用+世話好き人数("畜産")
		SIF TALENT:LCOUNT:世話好き
			モチベ合計値 -= 世話好き人数("畜産")
		;配属先のキャラの相性で計算
		モチベ合計値 += 相性モチベ補正(LCOUNT)
		CFLAG:LCOUNT:モチベーション = LIMIT(モチベ合計値, 1, 100)
		;経験も加算しとく
		EXP:LCOUNT:飼育経験 += (家畜:馬>0)+(家畜:牛>0)+(家畜:羊>0)+(家畜:豚>0)+(家畜:鶏>0)+(家畜:蜂>0)+養殖中
		;習得の加算
		;JUEL:LCOUNT:習得 += CFLAG:LCOUNT:モチベーション*10
	ENDIF
NEXT


CALL CHECKDRAWLINEW

;IF メッセージ表示
;	WAIT
;ELSE
;	PRINTW 畜産業の方は特に変わったことは無かったようだ
;ENDIF

;新婚モード
IF ゲームモード() == "新婚モード" && FINDCHARA(CFLAG:嫁, 1) >= 0
	CSTR:MASTER:配属 = 
	CSTR:FINDCHARA(CFLAG:嫁, 1):配属 = 
	リソース:牧場の予算 = 1000000
	リソース:畜舎の予算 = 1000000
	リソース:養蜂場の予算 = 1000000
	リソース:生け簀の予算 = 1000000
ENDIF

@飼育レベル, 対象
#FUNCTION
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 計算用
#DIM DYNAMIC 対象

FOR LCOUNT, 0, VARSIZE("TALENT")
	SIF !TALENT:対象:LCOUNT
		CONTINUE
	SELECTCASE TALENTNAME:LCOUNT
		CASE "気丈", "冷静", "自制心", "好奇心", "解放", "治療", "汚れ無視"
			計算用++
		CASE "臆病", "衝動的", "弱気", "無関心", "貞操観念", "恥じらい", "汚臭敏感", "潔癖症", "犬嫌い", "猫嫌い"
			計算用--
		CASE "世話好き"
			計算用 += 2
	ENDSELECT
NEXT

SELECTCASE CSTR:対象:種族
	CASE "獣人", "獣"
		計算用 += 3
	CASE "ヴァンパイア"
		計算用 -= 2
	CASE "精霊", "妖精"
		計算用++
ENDSELECT

計算用 += ABL:対象:飼育技能+特質("ワーカホリック", 対象)/10
SIF 統率者("畜産業") && !TALENT:対象:統率
	計算用++

RETURNF MAX(計算用, 0)

@養殖レベル, 対象
#FUNCTION
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 計算用
#DIM DYNAMIC 対象

FOR LCOUNT, 0, VARSIZE("TALENT")
	SIF !TALENT:対象:LCOUNT
		CONTINUE
	SELECTCASE TALENTNAME:LCOUNT
		CASE "ドラゴン使い"
			計算用++
		CASE "猫"
			計算用 -= 2
		CASE "世話好き"
			計算用 += 2
	ENDSELECT
NEXT

SELECTCASE CSTR:対象:種族
	CASE "人魚"
		計算用 += 2
	CASE "精霊", "妖精"
		計算用++
	CASE "鳳凰", "ヴァンパイア"
		計算用--
ENDSELECT
IF 統率者("畜産業") && !TALENT:対象:統率
	計算用 += (ABL:対象:飼育技能+1+(特質("ワーカホリック", 対象)/10))/2
ELSE
	計算用 += ABL:対象:飼育技能+(特質("ワーカホリック", 対象)/10)/2
ENDIF

RETURNF MAX(計算用, 0)

;ユニコーン(+)、バイコーン(-)出現イベント用のポイント
@特殊馬アライメント, 対象
#FUNCTION
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 計算用
#DIM DYNAMIC 対象

FOR LCOUNT, 0, VARSIZE("TALENT")
	SIF !TALENT:対象:LCOUNT
		CONTINUE
	SELECTCASE TALENTNAME:LCOUNT
		CASE "処女", "去勢済み", "童貞"
			計算用 += 20
		;再生処女でもユニコーンは騙せる
		CASE "再生処女", "貞操観念", "快感の否定"
			計算用 += 5
		CASE "既婚者", "淫乱", "貞操無頓着", "快感に素直", "即落ち", "淫核", "淫膣", "淫尻", "淫乳", "両刀", "ふたなり"
			計算用 -= 5
		CASE "淫魔", "ヤンデレ", "性器破損", "狂気", "母性", "サキュバス", "インキュバス"
			計算用 -= 10
		CASE "傷物"
			計算用 -= MAX(TALENT:対象:傷物, 10)
		CASE "素直", "臆病", "気丈", "自制心", "無関心", "保守的", "男嫌い", "女嫌い", "同族嫌悪", "戦士"
			計算用 += 3
		CASE "プライド高い", "好奇心", "濡れにくい"
			計算用 += 1
		CASE "プライド低い", "サボり魔", "浪費癖", "目立ちたがり", "解放", "濡れやすい", "自慰しやすい", "中毒しやすい", "男好き", "女好き", "ネクロマンサー"
			計算用 -= 3
		CASE "舌使い", "おもらし癖", "サド", "マゾ", "遊び人"
			計算用 -= 1
	ENDSELECT
NEXT

計算用 -= (ABL:対象:Ｃ感覚+ABL:対象:Ｖ感覚+ABL:対象:Ａ感覚+ABL:対象:Ｂ感覚)/2
計算用 -= ABL:対象:欲望

;世話好きはプラマイ助長
SIF TALENT:対象:世話好き
	計算用 += 5*SIGN(計算用)

SELECTCASE CSTR:対象:種族
	CASE "天使"
		計算用 += 10
	CASE "悪魔"
		計算用 -= 10
ENDSELECT

RETURNF 計算用

@MANUAL_畜産業
DRAWLINE
PRINTL 畜産業では牧場や畜舎を購入し、牛や豚などの家畜を育てることで食材を得ることができます
PRINTL ここで得た食材は調理室での献立や、飲食店経営で使用することが可能です
PRINTL キャラを配属し、手動もしくは自動で予算を投入することで家畜の健康状態を維持することができ、健康状態が良いほど上位の食材が手に入ります
PRINTL 農業と違い、家畜の維持には多くの人手と大金が必要になるため、予算が少ないうちは注意しましょう。予算が足りないと家畜が飢えるおそれがあります
PRINTL 魚の養殖については予算が足りなくなると養殖がストップし、一時的に魚の補充ができなくなります。予算を再投入することで補充が再開されます
PRINTL キャラクターの能力に応じて出費を大幅に削減できるため、飼育技能は積極的に伸ばしていきましょう
WAIT
