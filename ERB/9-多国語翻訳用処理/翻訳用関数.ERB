;名前表示用関数
;あくまで表示用 内部処理は今まで通り日本語を使う
@NAMEDISP, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

SIF !INRANGE(対象, 0, CHARANUM-1)
	RETURNF ""

IF LANGUAGE == "ENG" && CSTR:対象:英語名 != ""
	RETURNF CSTR:対象:英語名
ELSE
	RETURNF NAME:対象
ENDIF

;呼び名表示用関数 同上
@CALLNAMEDISP, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

SIF !INRANGE(対象, 0, CHARANUM-1)
	RETURNF ""

IF LANGUAGE == "ENG" && CSTR:対象:英語呼び名 != ""
	RETURNF CSTR:対象:英語呼び名
ELSE
	RETURNF CALLNAME:対象
ENDIF

;CSVから対象の英語名を返す
@CSVENGNAME, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

;子供の名前はそのまま返す
SELECTCASE 対象
	CASE 0 TO 9999
		IF EXISTCSV(対象)
			IF CSVCSTR(対象, GETNUM(CSTR, "英語名")) != ""
				RETURNF CSVCSTR(対象, GETNUM(CSTR, "英語名"))
			ELSE
				RETURNF CSVNAME(対象)
			ENDIF
		ENDIF
	CASEELSE
		RETURNF CHILDNAME:(対象-10000)
ENDSELECT

;CSVから対象の英語呼び名を返す
@CSVENGCALLNAME, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

;子供の名前はそのまま返す
SELECTCASE 対象
	CASE 0 TO 9999
		IF EXISTCSV(対象)
			IF CSVCSTR(対象, GETNUM(CSTR, "英語呼び名")) != ""
				RETURNF CSVCSTR(対象, GETNUM(CSTR, "英語呼び名"))
			ELSE
				RETURNF CSVCALLNAME(対象)
			ENDIF
		ENDIF
	CASEELSE
		RETURNF CHILDNAME:(対象-10000)
ENDSELECT

;CSVNAMEFとCSVENGNAMEの統合版
@CSVNAMEDISP, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

IF LANGUAGE == "ENG"
	RETURNF CSVENGNAME(対象)
ELSE
	RETURNF CSVNAMEF(対象)
ENDIF


@CSVCALLNAMEDISP, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

IF LANGUAGE == "ENG"
	RETURNF CSVENGCALLNAME(対象)
ELSE
	RETURNF CSVCALLNAMEF(対象)
ENDIF

;曜日の英語関数
@DOWDISP(曜日)
#FUNCTIONS
#DIM DYNAMIC 曜日
;DOWはday of week(曜日)の略
;「1:日,2:月,3:火,4:水,5:木,6:金,0:土」を出力する
SELECTCASE 曜日
	CASE 1
		RETURNF "Sun"
	CASE 2
		RETURNF "Mon"
	CASE 3
		RETURNF "Tue"
	CASE 4
		RETURNF "Wed"
	CASE 5
		RETURNF "Thu"
	CASE 6
		RETURNF "Fri"
	CASE 0
		RETURNF "Sat"
ENDSELECT

;天気
[SKIPSTART]
@WEATHERDISP(ARG)
#FUNCTIONS

SIF ARG == 0
	ARG = FLAG:天気

SELECTCASE ARG
	CASE 1
		RETURNF "Sunny"
	CASE 2
		RETURNF "Cloudy"
	CASE 3
		RETURNF "Rain"
	CASE 4
		RETURNF "Heavy Rain"
	CASE 5
		RETURNF "Thunderstorm"
	CASE 6
		RETURNF "Snow"
	CASE 7
		RETURNF "Heavy Snow"
ENDSELECT
[SKIPEND]


@I18N, TEXT, TYPE, FORMAT:0, FORMAT:1, FORMAT:2
#FUNCTIONS
#DIM DYNAMIC LCOUNT
#DIMS DYNAMIC TEXT
#DIMS DYNAMIC TYPE
#DIMS DYNAMIC FORMAT, 3
#DIMS DYNAMIC SPLITVAR, 2
#DIMS DYNAMIC TRANSLATED
#DIM DYNAMIC LANG_NUM
#DIMS DYNAMIC LIB_KEY
#DIMS DYNAMIC LDICT, 1000, 5
#DIM DYNAMIC EXISTYOU
#DIM VARCOUNT
#DIMS VARNAME, 100
#DIM DYNAMIC LIBCOUNT

IF !VARCOUNT
	VARCOUNT = ENUMVARBEGINSWITH("I18N_")
	ARRAYCOPY "RESULTS", "VARNAME"
ENDIF

TRANSLATED = %TEXT%

FOR LCOUNT, 1, VARSIZE("LANGDATA")
	IF ERDNAME(LANGDATA, LCOUNT, 1) == LANGUAGE
		LANG_NUM = LCOUNT
		SIF LANG_NUM == 1
			GOTO END
		BREAK
	ENDIF
NEXT

IF TYPE == ""
	LIB_KEY = I18N_COMMON
	FOR LIBCOUNT, 0, VARCOUNT
		ARRAYCOPY VARNAME:LIBCOUNT, "LDICT"

		FOR LCOUNT, 0, VARSIZE(VARNAME:LCOUNT)
			IF TRANSLATED == LDICT:LCOUNT:1
				TRANSLATED = %LDICT:LCOUNT:LANG_NUM%
				GOTO END
			ENDIF
		NEXT
	NEXT
ELSE
	LIB_KEY '= "I18N_" + TYPE
	ARRAYCOPY LIB_KEY, "LDICT"

	FOR LCOUNT, 0, VARSIZE(LIB_KEY)
		IF TRANSLATED == LDICT:LCOUNT:1
			TRANSLATED = %LDICT:LCOUNT:LANG_NUM%
			GOTO END
		ENDIF
	NEXT
	DEBUGPRINTFORML 「%TRANSLATED%」は未翻訳(データベース:%LIB_KEY%)
ENDIF

SIF LIB_KEY != "CLOTHES"
	DEBUGPRINTFORML 「%TRANSLATED%」はデータベース未記載(データベース:%LIB_KEY%)
$END

IF FORMAT != ""
	FOR LCOUNT, 0, VARSIZE("FORMAT")
		SIF FORMAT:LCOUNT == "" || STRFIND(TRANSLATED, "|") == -1
			BREAK
		;REPLACEの様子がおかしいので一旦保留
		;string.Format式に{}を使うと数値型と解釈されるので||で
		SPLIT TRANSLATED, @"|{LCOUNT}|", SPLITVAR
		TRANSLATED = %SPLITVAR:0%%FORMAT:LCOUNT%%SPLITVAR:1%
	NEXT
	;REPLACE TRANSLATED, "|1|", FORMAT
ENDIF

;暫定処置
EXISTYOU = GETCHARA(0)
IF LANGUAGE != "JP" && EXISTYOU >= 0 && NAME:EXISTYOU == "あなた"
	IF STRFIND(TRANSLATED, "You's") >= 0
		SPLIT TRANSLATED, "You's", SPLITVAR
		TRANSLATED = %SPLITVAR:0%Your%SPLITVAR:1%
	ENDIF
	IF STRFIND(TRANSLATED, "You is") >= 0
		SPLIT TRANSLATED, "You is", SPLITVAR
		TRANSLATED = %SPLITVAR:0%You are%SPLITVAR:1%
	ENDIF
ENDIF

RETURNF TRANSLATED
