;調教時キャラ別口上を一括管理

;-----------------------------------------------------------------------------------
;口上表示ファイル
;地の文、キャラ専用口上の表示をここで管理する
;OPTION:地の文表示 = 地の文表示するかどうか OPTION:口上表示 = 口上表示するかどうか
;-----------------------------------------------------------------------------------

;--------------------------------------------------
;@KOJO_MESSAGE_COM
;コマンド実行時に出力されます
;--------------------------------------------------
@KOJO_MESSAGE_COM
#DIMS DYNAMIC ゲームセンター口上あり
#DIM DYNAMIC 店長
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

;口上の優先度 TARGETの口上→MASTERの口上→ゲームセンターコマンド口上→地の文
IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_COM_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_COM_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_COM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_COM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_COM_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_COM_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_COM_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_COM_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_COM_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_COM_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_COM_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_COM_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

;ゲームセンターコマンドなら店長の判定
IF OPTION:口上表示
	店長 = FINDCHARA(CFLAG:ゲーセン店長, 1)
	IF SELECTCOMS == "ゲームセンター" && 店長 > 0 && !CFLAG:店長:口上非表示
		IF CFLAG:店長:複製
			ゲームセンター口上あり = CLONE_ゲームセンター_COM_%CSVNAMERPS(CFLAG:店長:複製)%
		ELSEIF CFLAG:店長:血縁コード
			ゲームセンター口上あり = CHILD_ゲームセンター_COM_%CSVNAMERPS(CFLAG:店長:血縁コード/100000)%×%CSVNAMERPS(CFLAG:店長:血縁コード%100000)%
		ELSE
			ゲームセンター口上あり = ゲームセンター_COM_%CSVNAMERPS(NOF(店長))%
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_COM"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_COM"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE

;各口上に飛んでいないならゲーセン店長の口上
SIF ゲームセンター口上あり != ""
	JUMPFORM %ゲームセンター口上あり%
SIF OPTION:口上表示
	CALL 汎用喘ぎ口上
SIF OPTION:地の文表示
	TRYCALLFORM MESSAGE_COM_%SELECTCOMS%

;--------------------------------------------------
;@KOJO_MESSAGE_USERCOM
;TRAIN外のコマンド実行時に出力されます
;--------------------------------------------------
@KOJO_MESSAGE_USERCOM, コマンド番号
#DIM DYNAMIC コマンド番号
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_USERCOM_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_USERCOM_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_USERCOM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_USERCOM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_USERCOM_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_USERCOM_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_USERCOM_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_USERCOM_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_USERCOM_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_USERCOM_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_USERCOM_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_USERCOM_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_MESSAGE_USERCOM"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_MESSAGE_USERCOM"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE
SIF OPTION:地の文表示
	TRYCALLFORM MESSAGE_USERCOM_{コマンド番号}

;-------------------------------------------------
;@KOJO_MESSAGE_SHOOT
;調教者の射精をトリガーにした口上
;-------------------------------------------------
@KOJO_MESSAGE_SHOOT
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_SHOOT_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_SHOOT_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_SHOOT_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_SHOOT_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_SHOOT_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_SHOOT_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_SHOOT_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_SHOOT_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_SHOOT_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_SHOOT_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_SHOOT_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_SHOOT_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_MESSAGE_SHOOT"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_MESSAGE_SHOOT"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE
SIF OPTION:地の文表示
	CALL SHOOT_MESSAGE

;-------------------------------------------------
;@KOJO_MESSAGE_EX
;奴隷の絶頂をトリガーにした口上
;-------------------------------------------------
@KOJO_MESSAGE_EX
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_EX_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_EX_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_EX_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_EX_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_EX_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_EX_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_EX_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_EX_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_EX_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_EX_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_EX_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_EX_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_MESSAGE_EX"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_MESSAGE_EX"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE
IF OPTION:地の文表示
	CALL EX_MESSAGE
	;PLAYERの射精もまとめてここでウェイトする
	SIF NOWEX:Ｃ絶頂 || NOWEX:Ｖ絶頂 || NOWEX:Ａ絶頂 || NOWEX:Ｂ絶頂 || NOWEX:射精 || NOWEX:放尿 || NOWEX:噴乳 || NOWEX:潮噴き || NOWEX:MASTER:射精 || (ASSI > 0 && NOWEX:ASSI:射精) || NOWEX:MASTER:触手射精
		WAIT
ENDIF

;-------------------------------------------------
;@KOJO_MESSAGE_AFTER
;コマンド実行後に表示する口上（処女喪失時など）
;-------------------------------------------------
@KOJO_MESSAGE_AFTER
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_AFTER_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_AFTER_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_AFTER_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_AFTER_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_AFTER_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_AFTER_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_AFTER_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_AFTER_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_AFTER_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_AFTER_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_AFTER_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_AFTER_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_MESSAGE_AFTER"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_MESSAGE_AFTER"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE
SIF OPTION:地の文表示
	CALL AFTER_MESSAGE

;-------------------------------------------------
;@KOJO_MESSAGE_PALAM
;パラメータ変動をトリガーにした口上
;-------------------------------------------------
@KOJO_MESSAGE_PALAM
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_PALAM_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_PALAM_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_PALAM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_PALAM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_PALAM_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_PALAM_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_PALAM_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_PALAM_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_PALAM_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_PALAM_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_PALAM_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_PALAM_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_MESSAGE_PALAM"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_MESSAGE_PALAM"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE
SIF OPTION:地の文表示
	CALL PALAM_MESSAGE

;-------------------------------------------------
;@KOJO_MESSAGE_TSHOOT
;触手の射精をトリガーにした口上
;-------------------------------------------------
@KOJO_MESSAGE_TSHOOT
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_TSHOOT_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_TSHOOT_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_TSHOOT_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_TSHOOT_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_TSHOOT_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_TSHOOT_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_TSHOOT_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_TSHOOT_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_TSHOOT_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_TSHOOT_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_TSHOOT_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_TSHOOT_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_MESSAGE_TSHOOT"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_MESSAGE_TSHOOT"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE
SIF OPTION:地の文表示
	CALL TSHOOT_MESSAGE

;-------------------------------------------------
;@KOJO_MESSAGE_MARK
;刻印変動をトリガーにした口上
;-------------------------------------------------
@KOJO_MESSAGE_MARK, 取得刻印
#DIMS DYNAMIC 取得刻印
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_MARK_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_MARK_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_MARK_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_MARK_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_MARK_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_MARK_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_MARK_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_MARK_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_MARK_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_MARK_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_MARK_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_MARK_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_MESSAGE_MARK"
	SIF RESULT
		GOTO WIDEDISABLE
	CALL WIDEDISABLE, "ボールギャグ時口上表示", TARGET, "KOJO_MESSAGE_MARK"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF
SIF 口上関数 != ""
	JUMPFORM %口上関数%

$WIDEDISABLE
SIF OPTION:地の文表示
	TRYCALLFORM MARK_MESSAGE_%取得刻印%

;-------------------------------------------------
;@KOJO_MESSAGE_EVENT
;イベント時の口上、イベント開始時に出力します
;-------------------------------------------------
@KOJO_MESSAGE_EVENT, イベント名, 対象 = -1
#DIM DYNAMIC LTARGET
#DIMS DYNAMIC イベント名
#DIM DYNAMIC 対象
#DIMS DYNAMIC 口上関数
#DIMS DYNAMIC 地の文関数
#DIM DYNAMIC 調教対象口上フラグ = 1

SIF 対象 == -1
	対象 = TARGET
SIF 対象 == -1
	RETURN

;口上呼び出す時のみ、対象をTARGETにする
LTARGET = TARGET
TARGET = 対象

;上記の仕様上JUMPは使えないので工夫
IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_EVENT_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_EVENT_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_EVENT_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_EVENT_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_EVENT_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_EVENT_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		;学園モードでは別口上
		IF ゲームモード() == "学園モード"
			SIF EXISTFUNCTION(@"SCHOOL_KOJO_EVENT_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = SCHOOL_KOJO_EVENT_%CSVNAMERPS(NOF(TARGET))%
		ELSE
			IF EXISTFUNCTION(@"KOJO_EVENT_%CSVNAMERPS(NOF(TARGET))%")
				口上関数 = KOJO_EVENT_%CSVNAMERPS(NOF(TARGET))%
			ELSEIF EXISTFUNCTION(@"MASTER_EVENT_%CSVNAMERPS(NOF(MASTER))%")
				口上関数 = MASTER_EVENT_%CSVNAMERPS(NOF(MASTER))%
				調教対象口上フラグ = 0
			ENDIF
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_EVENT"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF

IF 口上関数 != ""
	CALLFORM %口上関数%
ELSE
	$WIDEDISABLE
	SIF OPTION:地の文表示
		TRYCALLFORM EVENT_MESSAGE_%イベント名%
ENDIF

TARGET = LTARGET
RETURN RESULT

;-------------------------------------------------
;@KOJO_USE_ITEM
;アイテム使用時の口上
;-------------------------------------------------
@KOJO_USE_ITEM, アイテム名, 対象
#DIMS DYNAMIC 地の文関数
#DIM DYNAMIC LTARGET
#DIMS DYNAMIC アイテム名
#DIM DYNAMIC 対象
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

SIF 対象 == -1
	対象 = TARGET
SIF 対象 == -1
	RETURN

;口上呼び出す時のみ、対象をTARGETにする
LTARGET = TARGET
TARGET = 対象

;アイテム使用時の地の文は無い
IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_USE_ITEM_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_USE_ITEM_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_USE_ITEM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_USE_ITEM_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_USE_ITEM_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_USE_ITEM_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		IF EXISTFUNCTION(@"KOJO_USE_ITEM_%CSVNAMERPS(NOF(TARGET))%")
			口上関数 = KOJO_USE_ITEM_%CSVNAMERPS(NOF(TARGET))%
		ELSEIF EXISTFUNCTION(@"MASTER_USE_ITEM_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_USE_ITEM_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_USE_ITEM"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF

SIF 口上関数 != ""
	CALLFORM %口上関数%

$WIDEDISABLE
TARGET = LTARGET

;-------------------------------------------------
;@KOJO_MESSAGE_SPELL
;魔法詠唱時に出力します
;-------------------------------------------------
@KOJO_MESSAGE_SPELL, 詠唱者, 対象:0, 対象:1
#DIM DYNAMIC 詠唱者
#DIM DYNAMIC 対象, 2

;優先度は詠唱者の口上→対象の口上→地の文
;ただし地の文は口上側で管理するようになる
IF OPTION:口上表示
	IF !CFLAG:詠唱者:口上非表示
		IF NOF(詠唱者) > 10000
			TRYCCALLFORM CLONE_SPELLCAST_%CSVNAMERPS(CFLAG:詠唱者:複製)%
			CATCH
				TRYCCALLFORM CHILD_SPELLCAST_%CSVNAMERPS(CFLAG:詠唱者:血縁コード/100000)%×%CSVNAMERPS(CFLAG:詠唱者:血縁コード%100000)%
				CATCH
					GOTO 対象口上
				ENDCATCH
			ENDCATCH
		ELSE
			TRYCCALLFORM SPELLCAST_%CSVNAMERPS(NOF(詠唱者))%, 詠唱者, 対象:0, 対象:1
			CATCH
				GOTO 対象口上
			ENDCATCH
		ENDIF
	ELSE
		$対象口上
		IF 対象:0 >= 0
			IF !CFLAG:(対象:0):口上非表示
				IF NOF(対象:0) > 10000
					TRYCCALLFORM CLONE_RECIEVE_SPELLCAST_%CSVNAMERPS(CFLAG:(対象:0):複製)%
					CATCH
						TRYCCALLFORM CHILD_RECIEVE_SPELLCAST_%CSVNAMERPS(CFLAG:(対象:0):血縁コード/100000)%×%CSVNAMERPS(CFLAG:(対象:0):血縁コード%100000)%
						CATCH
							GOTO 対象口上2
						ENDCATCH
					ENDCATCH
				ELSE
					TRYCCALLFORM RECIEVE_SPELLCAST_%CSVNAMERPS(NOF(対象:0))%, 詠唱者, 対象:0, 対象:1
					CATCH
						GOTO 対象口上2
					ENDCATCH
				ENDIF
			ELSE
				$対象口上2
				IF 対象:1 >= 0
					IF !CFLAG:(対象:1):口上非表示
						IF NOF(対象:1) > 10000
							TRYCCALLFORM CLONE_RECIEVE_SPELLCAST_%CSVNAMERPS(CFLAG:(対象:1):複製)%
							CATCH
								TRYCCALLFORM CHILD_RECIEVE_SPELLCAST_%CSVNAMERPS(CFLAG:(対象:1):血縁コード/100000)%×%CSVNAMERPS(CFLAG:(対象:1):血縁コード%100000)%
								CATCH
									GOTO 地の文
								ENDCATCH
							ENDCATCH
						ELSE
							TRYCCALLFORM RECIEVE_SPELLCAST_%CSVNAMERPS(NOF(対象:1))%, 詠唱者, 対象:0, 対象:1
							CATCH
								GOTO 地の文
							ENDCATCH
						ENDIF
					ELSE
						GOTO 地の文
					ENDIF
				ELSE
					GOTO 地の文
				ENDIF
			ENDIF
		ELSE
			GOTO 地の文
		ENDIF
	ENDIF
ELSE
	$地の文
	SIF OPTION:地の文表示
		CALL SPELLCAST_地の文, 詠唱者, 対象:0, 対象:1
ENDIF

;-------------------------------------------------
;@KOJO_MESSAGE_SPELLEND
;魔法の効果が切れた時に出力します
;-------------------------------------------------
@KOJO_MESSAGE_SPELLEND, 魔法名, 対象 = -1
#DIM DYNAMIC LTARGET
#DIMS DYNAMIC 魔法名
#DIM DYNAMIC 対象
#DIMS DYNAMIC 口上関数
#DIM DYNAMIC 調教対象口上フラグ = 1

SIF 対象 == -1
	対象 = TARGET
SIF 対象 == -1
	RETURN

;口上呼び出す時のみ、対象をTARGETにする
LTARGET = TARGET
TARGET = 対象

IF OPTION:口上表示 && !CFLAG:口上非表示
	;子供の場合はNO:父親×NO:母親の関数を呼び出す
	IF NOF(TARGET) > 10000
		IF EXISTFUNCTION(@"CLONE_SPELLEND_%魔法名%_%CSVNAMERPS(CFLAG:TARGET:複製)%")
			口上関数 = CLONE_SPELLEND_%魔法名%_%CSVNAMERPS(CFLAG:TARGET:複製)%
		ELSEIF EXISTFUNCTION(@"CHILD_SPELLEND_%魔法名%_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%")
			口上関数 = CHILD_SPELLEND_%魔法名%_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ELSEIF EXISTFUNCTION(@"MASTER_SPELLEND_%魔法名%_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_SPELLEND_%魔法名%_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ELSE
		IF EXISTFUNCTION(@"KOJO_SPELLEND_%魔法名%_%CSVNAMERPS(NOF(TARGET))%")
			口上関数 = KOJO_SPELLEND_%魔法名%_%CSVNAMERPS(NOF(TARGET))%
		ELSEIF EXISTFUNCTION(@"MASTER_SPELLEND_%魔法名%_%CSVNAMERPS(NOF(MASTER))%")
			口上関数 = MASTER_SPELLEND_%魔法名%_%CSVNAMERPS(NOF(MASTER))%
			調教対象口上フラグ = 0
		ENDIF
	ENDIF
ENDIF

IF 調教対象口上フラグ
	;WIDEDISABLEの判定
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, @"KOJO_SPELLEND_%魔法名%"
	SIF RESULT
		GOTO WIDEDISABLE
ENDIF

SIF 口上関数 != ""
	CALLFORM %口上関数%

$WIDEDISABLE
TARGET = LTARGET
RETURN RESULT

;-------------------------------------------------
;@KOJO_MASTER_EVENT
;MASTER口上専用のイベント
;-------------------------------------------------
@KOJO_MASTER_EVENT, イベント名
#DIMS DYNAMIC イベント名

IF OPTION:口上表示 && !CFLAG:MASTER:口上非表示
	TRYCALLFORM KOJO_MASTER_EVENT_%CSVNAMERPS(NOF(MASTER))%, イベント名
ELSEIF OPTION:地の文表示
	TRYCALLFORM EVENT_MASTER_MESSAGE_%イベント名%
ENDIF

;--------------------------------------------------
;@KOJO_START
;調教開始時に呼び出す
;--------------------------------------------------
@KOJO_START
IF OPTION:口上表示 && !CFLAG:口上非表示
	;WIDEDISABLEの判定（暫定）
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_START"
	SIF RESULT
		RETURN
	;学園モードはロケーションごとに行為前と行為後を呼び出してるので不要
	IF ゲームモード() != "学園モード"
		;子供の場合はNO:父親×NO:母親の関数を呼び出す
		IF NOF(TARGET) > 10000
			TRYCALLLIST
				FUNC CLONE_START_%CSVNAMERPS(CFLAG:TARGET:複製)%
				FUNC CHILD_START_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
				FUNC MASTER_START_%CSVNAMERPS(NOF(MASTER))%
			ENDFUNC
		ELSE
			TRYCALLLIST
				FUNC KOJO_START_%CSVNAMERPS(NOF(TARGET))%
				FUNC MASTER_START_%CSVNAMERPS(NOF(MASTER))%
			ENDFUNC
		ENDIF
	ENDIF
ENDIF

;--------------------------------------------------
;@KOJO_TURNEND
;調教終了時に呼び出す
;--------------------------------------------------
@KOJO_TURNEND
IF OPTION:口上表示 && !CFLAG:口上非表示
	;WIDEDISABLEの判定（暫定）
	CALL WIDEDISABLE, "憑依時口上表示", TARGET, "KOJO_TURNEND"
	SIF RESULT
		RETURN
	;学園モードはロケーションごとに行為前と行為後を呼び出してるので不要
	IF ゲームモード() != "学園モード"
		;子供の場合はNO:父親×NO:母親の関数を呼び出す
		IF NOF(TARGET) > 10000
			TRYCALLLIST
				FUNC CLONE_TURNEND_%CSVNAMERPS(CFLAG:TARGET:複製)%
				FUNC CHILD_TURNEND_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
				FUNC MASTER_TURNEND_%CSVNAMERPS(NOF(MASTER))%
			ENDFUNC
		ELSE
			TRYCALLLIST
				FUNC KOJO_TURNEND_%CSVNAMERPS(NOF(TARGET))%
				FUNC MASTER_TURNEND_%CSVNAMERPS(NOF(MASTER))%
			ENDFUNC
		ENDIF
	ENDIF
ENDIF

;-------------------------------------------------
;@KOJO_MESSAGE_ENDING
;エンディング口上
;-------------------------------------------------
@KOJO_MESSAGE_ENDING, エンディング名
#DIMS DYNAMIC エンディング名

SIF OPTION:口上表示 && !CFLAG:口上非表示
	TRYCALLFORM KOJO_MESSAGE_ENDING_%CSVNAMERPS(NOF(TARGET))%, エンディング名

;-------------------------------------------------
;@KOJO_STRATEGY
;経営用口上の管理用関数 パートナー限定口上やその他挙動が特殊なものはこの関数を通さず直接呼ぶ
;-------------------------------------------------
@KOJO_STRATEGY, 対象, 施設名, イベント名, 付帯情報:0, 付帯情報:1, 付帯情報:2
#DIM DYNAMIC 対象
#DIMS DYNAMIC 施設名
#DIMS DYNAMIC イベント名
#DIM DYNAMIC LTARGET
#DIM DYNAMIC 付帯情報, 3

SIF !OPTION:口上表示 || CFLAG:対象:口上非表示
	RETURN

LTARGET = TARGET
TARGET = 対象
RESULT = 0

;付帯情報が発生する口上を分ける
IF (GROUPMATCH(施設名, "ゲームセンター", "飲食店") && イベント名 == "ASSIGNLEADER") || (施設名 == "ゲームセンター" && イベント名 == "TURNEND")
	;ASSIGNLEADERは0に現店長の番号、1に元店長の番号 ゲーセンのTURNENDは収入と支出
	IF NOF(TARGET) > 10000
		TRYCALLLIST
			FUNC CLONE_%施設名%_%イベント名%_%CSVNAMERPS(CFLAG:TARGET:複製)%, 付帯情報:0, 付帯情報:1
			FUNC CHILD_%施設名%_%イベント名%_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%, 付帯情報:0, 付帯情報:1
		ENDFUNC
	ELSE
		TRYCALLFORM %施設名%_%イベント名%_%CSVNAMERPS(NOF(TARGET))%, 付帯情報:0, 付帯情報:1
	ENDIF
ELSEIF 施設名 == "飲食店" && イベント名 == "TURNEND"
	;飲食店のTURNENDは収入支出に加えて来客数が入る
	IF NOF(TARGET) > 10000
		TRYCALLLIST
			FUNC CLONE_%施設名%_%イベント名%_%CSVNAMERPS(CFLAG:TARGET:複製)%, 付帯情報:0, 付帯情報:1, 付帯情報:2
			FUNC CHILD_%施設名%_%イベント名%_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%, 付帯情報:0, 付帯情報:1, 付帯情報:2
		ENDFUNC
	ELSE
		TRYCALLFORM %施設名%_%イベント名%_%CSVNAMERPS(NOF(TARGET))%, 付帯情報:0, 付帯情報:1, 付帯情報:2
	ENDIF
ELSE
	IF NOF(TARGET) > 10000
		TRYCALLLIST
			FUNC CLONE_%施設名%_%イベント名%_%CSVNAMERPS(CFLAG:TARGET:複製)%
			FUNC CHILD_%施設名%_%イベント名%_%CSVNAMERPS(CFLAG:血縁コード/100000)%×%CSVNAMERPS(CFLAG:血縁コード%100000)%
		ENDFUNC
	ELSE
		TRYCALLFORM %施設名%_%イベント名%_%CSVNAMERPS(NOF(TARGET))%
	ENDIF
ENDIF

TARGET = LTARGET
RETURN RESULT

;-------------------------------------------------
;@DISABLE
;コマンドやイベントを弾く関数
;-------------------------------------------------
@DISABLE, 対象項目, 対象 = -1
#DIM DYNAMIC CSV番号フラグ = 0
#DIMS DYNAMIC 対象項目
#DIM DYNAMIC 対象

RESULT = 0
SIF GROUPMATCH(対象項目, "EVENT_クローン生成")
	CSV番号フラグ = 1
SIF 対象 == -1 && !CSV番号フラグ
	RETURN 0

IF OPTION:口上表示
	IF CSV番号フラグ
		GETCHARA 対象
		IF RESULT >= 0
			対象 = RESULT
			RESULT = 0
			GOTO 登録番号判定
		ENDIF
		TRYCALLFORM DISABLE_%対象項目%_%CSVNAMERPS(対象)%
	ELSE
		$登録番号判定
		IF !CFLAG:対象:口上非表示
			IF NOF(対象) > 10000
				TRYCALLLIST
					FUNC DISABLE_%対象項目%_CLONE_%CSVNAMERPS(CFLAG:対象:複製)%
					FUNC DISABLE_%対象項目%_%CSVNAMERPS(CFLAG:対象:血縁コード/100000)%×%CSVNAMERPS(CFLAG:対象:血縁コード%100000)%
				ENDFUNC
			ELSE
				TRYCALLFORM DISABLE_%対象項目%_%CSVNAMERPS(NOF(対象))%
			ENDIF
		ENDIF
	ENDIF
ENDIF

RETURN RESULT

;-------------------------------------------------
;@DISABLECOM
;コマンド専用 返り値で判定可能
;-------------------------------------------------
@DISABLECOM, 対象 = -1, コマンド名
#DIM DYNAMIC 対象
#DIMS DYNAMIC コマンド名

RESULT = 0
SIF 対象 == -1
	RETURN 0

IF OPTION:口上表示
	IF !CFLAG:対象:口上非表示
		IF NOF(対象) > 10000
			TRYCALLLIST
				FUNC DISABLECOM_CLONE_%CSVNAMERPS(CFLAG:対象:複製)%, コマンド名
				FUNC DISABLECOM_%CSVNAMERPS(CFLAG:対象:血縁コード/100000)%×%CSVNAMERPS(CFLAG:対象:血縁コード%100000)%, コマンド名
			ENDFUNC
		ELSE
			TRYCALLFORM DISABLECOM_%CSVNAMERPS(NOF(対象))%, コマンド名
		ENDIF
	ENDIF
ENDIF

RETURN RESULT

;-------------------------------------------------
;@WIDEDISABLE
;影響範囲が大きいものはこの関数で処理
;-------------------------------------------------
@WIDEDISABLE, 対象項目, 対象 = -1, 対象関数
#DIMS DYNAMIC 対象項目
#DIM DYNAMIC 対象
#DIMS DYNAMIC 対象関数

RESULT = 0
SIF 対象 == -1
	RETURN 0

SELECTCASE 対象項目
	CASE "憑依時口上表示"
		SIF CFLAG:対象:憑依 == -1
			RETURN 0
	CASE "ボールギャグ時口上表示"
		SIF !TEQUIP:対象:ボールギャグ || SELECTCOMS == "ボールギャグ"
			RETURN 0
ENDSELECT

IF OPTION:口上表示
	IF !CFLAG:対象:口上非表示
		IF NOF(対象) > 10000
			TRYCALLLIST
				FUNC WIDEDISABLE_%対象項目%_CLONE_%CSVNAMERPS(CFLAG:対象:複製)%, 対象関数
				FUNC WIDEDISABLE_%対象項目%_%CSVNAMERPS(CFLAG:対象:血縁コード/100000)%×%CSVNAMERPS(CFLAG:対象:血縁コード%100000)%, 対象関数
			ENDFUNC
		ELSE
			TRYCALLFORM WIDEDISABLE_%対象項目%_%CSVNAMERPS(NOF(対象))%, 対象関数
		ENDIF
	ENDIF
ENDIF

RETURN RESULT

;;;CSVNAMERPS(RePlace Space) 名前の空白をハイフンに置換して返す
@CSVNAMERPS, 対象
#FUNCTIONS
#DIM DYNAMIC 対象

RETURNF REPLACE(CSVNAMEF(対象), (" |-|\\*"), "_")
