@モンテカルロ, ゲーセンの種類

#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC LNO
#DIM DYNAMIC LNO2
#DIM DYNAMIC LNO3
#DIM DYNAMIC SELECTED = -1
#DIM DYNAMIC C_COUNT
#DIM DYNAMIC TIME_START
#DIM DYNAMIC TIME_NOW
#DIM DYNAMIC TIME_REMAIN = 300000
#DIM DYNAMIC ゲーセンの種類




GETMILLISECOND
TIME_START = RESULT

$MC_START

;PLAYSOUND トランプ配布

C_COUNT = 0
CALL SHUFFLE, 52
FOR LCOUNT, 52, 99
	CARD:LCOUNT = -1
NEXT

VARLINE = 0
DO
	SIF VARLINE
		CLEARLINE LINECOUNT-VARLINE
	VARLINE = LINECOUNT
	PRINTL   | 0 | 1 | 2 | 3 | 4 |
	FOR LCOUNT, 0, 5
		PRINTFORM {10*LCOUNT,2}
		FOR LCOUNT2, 0, 5
			LNO = 5*LCOUNT + LCOUNT2
			PRINT |
			IF CARD:LNO != -1
				IF SELECTED == LNO
					CALL PRTCARD, CARD:LNO, "yellow"
				ELSE
					CALL PRTCARDBUTTON, CARD:LNO, 10*LCOUNT+LCOUNT2
				ENDIF
			ELSE
				PRINT    
			ENDIF
		NEXT
		PRINTL |
	NEXT
	;FOR LCOUNT, 0, 5
	;	PRINT    
	;	FOR LCOUNT2, 0, 5
	;		LNO = 10*LCOUNT+LCOUNT2
	;		LNO2 = 5*LCOUNT+LCOUNT2
	;		IF CARD:LNO2 != -1
	;			IF SELECTED == -1 || IS_NBH(SELECTED, LNO2)
	;				PRINTFORM [{LNO, 2}]
	;			ELSE
	;				PRINTPLAINFORM [{LNO, 2}]
	;			ENDIF
	;		ENDIF
	;	NEXT
	;	PRINTL
	;NEXT
	IF SELECTED != -1
		PRINT    [-1]戻る　　　　　　
	ELSE
		PRINT    　　　　　　　　　　
	ENDIF
	PRINTL [77]最初からやり直す　　　　　[99]諦める
	GETMILLISECOND
	TIME_NOW = RESULT
	TINPUT (TIME_REMAIN - (TIME_NOW-TIME_START)), 99
	SELECTCASE RESULT
		CASE -1
			SELECTED = -1
		CASE 0 TO 44
			IF INRANGE(RESULT/10, 0, 4) && INRANGE(RESULT%10, 0, 4)
				LNO = RESULT%10 + (RESULT/10)*5
				IF CARD:LNO != -1
					IF SELECTED == -1
						SELECTED = LNO
					ELSEIF IS_NBH(SELECTED, LNO)
						;カードのランクが一緒なら取り除く
						IF (CARD:SELECTED - CARD:LNO)%13 == 0
							;PLAYSOUND トランプドロー
							C_COUNT += 2
							CARD:SELECTED = -1
							CARD:LNO = -1
							SELECTED = -1
							FOR LCOUNT2, 0, 2
								FOR LCOUNT, 0, 51
									SIF CARD:LCOUNT == -1
										SWAP CARD:LCOUNT, CARD:(LCOUNT+1)
								NEXT
							NEXT
						ENDIF
					ENDIF
				ENDIF
			ENDIF
		CASE 77
			GOTO MC_START
		CASE 99
			RETURN 0
	ENDSELECT
LOOP C_COUNT < 52
RETURN 1


;IS NEIGHBORHOOD関数
;カードが隣り合わせなら1を返す
@IS_NBH(ARG, ARG:1)
#FUNCTION

SELECTCASE ARG%5
	CASE 0
		;カードが列の左端のとき
		SELECTCASE ARG:1-ARG
			CASE -5, -4, 1, 5, 6
				RETURNF 1
		ENDSELECT
	CASE 4
		;カードが列の右端のとき
		SELECTCASE ARG:1-ARG
			CASE -6, -5, -1, 4, 5
				RETURNF 1
		ENDSELECT
	CASEELSE
		;残りの場合
		SELECTCASE ARG:1-ARG
			CASE -6, -5, -4, -1, 1, 4, 5, 6
				RETURNF 1
		ENDSELECT
ENDSELECT
RETURNF 0
