@BINGO_PINBALL
;現時点では保留
[SKIPSTART]
#DIM BALL_CX;ボールのX座標
#DIM BALL_CY;ボールのY座標
#DIM BALL_VX;ボールの速度ベクトルのX成分
#DIM BALL_VY;ボールの速度ベクトルのY成分

#DIM REFLEC;反射板のカウンター
#DIM BINGO;ビンゴ数
#DIM SCORE;得点

#DIM S_BINGO;1ビンゴあたりのスコア
#DIM S_REFLEC;反射板のボーナス

;全体図(縦18マス,横32マス)
;ただし、座標の値は1000倍して扱う
;例えば、左下のブロックは(0<=X<=999 ∧ 0<=Y<=999)
;　00　　　　05　　　　10　　　　15　　　　20　　　　25　　　　3031
;17■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■17
;16■　　　／／　　　　　　　　　　　　　　　　　　　　　　　　＼■16
;15■１０／／　　　　　　　　　　　　　　　　　　　　　　　　　　■15
;14■　／／　　　　　　■　　　　　■　　　　　■　　　　　■　　■14
;13■／／　　　　　　　　　　　　　　　　　　　　　　　　　　　　■13
;12■／　　　　　　　　　　　■　　○　　■　　○　　■　　○　　■12
;11■　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　■11
;10■　　　　　　　　　■　　　　　■　　　　　■　　　　　■　　■10
;09■　↑　　↑　　↑　　　　　　　　　　　　　　　　　　　　　　■09
;08■　　　　　　　　　　　　■　　○　　■　　○　　■　　○　　■08
;07■　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　■07
;06■　　　　　　　　　■　　　　　■　　　　　■　　　　　■　　■06
;05■　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　■05
;04■　　　　　　　　　　　　■　　○　　■　　○　　■　　○　　■04
;03■　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　■03
;02■　　　　　　　　　■　　　　　■　　　　　■　　　　　■　　■02
;01■＼　　　　　　　　　　　　　　　　　　　　　　　　　　　　／■01
;00■■■■■■＝＝＝＝＝＝＝＝＝＝＝LOST＝＝＝＝＝＝＝＝＝＝＝＝■00
;　00　　　　05　　　　10　　　　15　　　　20　　　　25　　　　3031

LOCAL = 12;残りボール数
;1-9はビンゴの穴に入ったか否か
LOCAL:1 = 0
LOCAL:2 = 0
LOCAL:3 = 0
LOCAL:4 = 0
LOCAL:5 = 0
LOCAL:6 = 0
LOCAL:7 = 0
LOCAL:8 = 0
LOCAL:9 = 0

REFLEC = -RAND:16
BINGO = 0

PRINTL
PRINTL ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
PRINT ■　　　
SETCOLOR 0x80AA80
PRINT ／／　　　　　　　　　　　　　　　　　　　　　　　　＼
RESETCOLOR
PRINTL ■
PRINT ■
SETCOLOR 0x44AA44
SIF ABS(REFLEC) < 10
	PRINT ０
PRINTFORMS TOFULL(TOSTR(ABS(REFLEC)))
SETCOLOR 0x80AA80
PRINT ／／
RESETCOLOR
PRINTL 　　　　　　　　　　　　　　　　　　　　　　　　　　■
PRINT ■　
SETCOLOR 0x80AA80
PRINT ／／
RESETCOLOR
PRINTL 　　　　　　■　　　　　■　　　　　■　　　　　■　　■
PRINT ■
SETCOLOR 0x80AA80
PRINT ／／
RESETCOLOR
PRINTL 　　　　　　　　　　　　　　　　　　　　　　　　　　　　■
PRINT ■
SETCOLOR 0x80AA80
PRINT ／
RESETCOLOR
PRINTL 　　　　　　　　　　　■　　○　　■　　○　　■　　○　　■
PRINTL ■　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　■
PRINTL ■　　　　　　　　　■　　　　　■　　　　　■　　　　　■　　■
PRINT ■　
SETCOLOR 0x80AA80
PRINT ↑　　↑　　↑
RESETCOLOR
PRINTL 　　　　　　　　　　　　　　　　　　　　　　■
PRINTL ■　　　　　　　　　　　　■　　○　　■　　○　　■　　○　　■
PRINTL ■　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　■
PRINTL ■　　　　　　　　　■　　　　　■　　　　　■　　　　　■　　■
PRINTL ■　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　■
PRINTL ■　ここからボールが発射　■　　○　　■　　○　　■　　○　　■
PRINTL ■　↓　　　　　　　　　　　　　　　　　　　　　　　　　　　　■
PRINTL ■　☆　　　　　　　■　　　　　■　　　　　■　　　　　■　　■
PRINT ■
SETCOLOR 0x80AA80
PRINT ＼　　　　　　　　　　　　　　　　　　　　　　　　　　　　／
RESETCOLOR
PRINTL ■
PRINT ■■■■■■
SETCOLOR 0x8080AA
PRINT ＝＝＝＝＝＝＝＝＝＝＝LOST＝＝＝＝＝＝＝＝＝＝＝＝
RESETCOLOR
PRINTL ■
PRINTL
PRINTFORMW このゲームは{LOCAL}個の玉を1つずつ打ち込みビンゴを作っていくゲームです。
 
;スコアの基準点を設定
S_BINGO = 200
S_REFLEC = 50
 
DO
	PRINTL
	DRAWLINE
	PRINTFORML <残り{LOCAL}球 / {BINGO}ビンゴ>
	PRINTFORML 1ビンゴあたり：{S_BINGO}点
	PRINTFORML 反射板のボーナス(1発あたり)：{S_REFLEC}点
	SCORE = BINGO * S_BINGO
	PRINTFORM 現在のスコア：{BINGO}×{S_BINGO}
	IF REFLEC > 0
		SCORE += REFLEC * S_REFLEC
		PRINTFORM ＋{REFLEC}×{S_REFLEC}
	ENDIF
	PRINTFORML ＝{SCORE}点
	$BP_START
	PRINTL
	PRINTL [0]ボールを発射する [1]もうやめる
	INPUT
	IF RESULT != 0 && RESULT != 1
		GOTO BP_START
	ELSEIF RESULT == 1
		PRINTL 本当にやめますか？
		PRINTL [0]やっぱり続ける
		PRINTL [1]本当にやめる
		INPUT
		SIF RESULT == 1
			BREAK
		GOTO BP_START
	ENDIF
	
	PRINTL
	PRINTL ボールの発射角度を決めます。
	PRINTL 次のクリック・Enterキーでチャージを開始し、
	PRINTL さらにその次のクリック・Enterキーでチャージを完了します。
	PRINTL なお、発射角度はチャージ時間に正比例し、
	PRINTL 1秒ちょうどのチャージで45°の角度で発射されます。
	PRINTL ただし、発射できる最大角度は75°です。
	FORCEWAIT
	GETMILLISECOND
	LOCAL:18 = RESULT
	PRINTL
	PRINTL チャージ中……
	FORCEWAIT
	GETMILLISECOND
	LOCAL:19 = RESULT
	LOCAL:14 = (LOCAL:19 - LOCAL:18)*785/1000;発射角度(ラジアンの1000倍)
	SIF LOCAL:14 > 1309
		LOCAL:14 = 1309
	LOCAL:20 = LOCAL:14 * 180 / 314;発射角度(ディグリーの10倍)
	PRINTL 
	PRINT チャージが完了しました。
	PRINTFORMW 発射角度は{LOCAL:20/10}.{LOCAL:20%10}°です。
	
	BALL_CX = 2000+RAND:1000
	BALL_CY = 2000+RAND:1000
	BALL_VX = KCOS(LOCAL:14)
	BALL_VY = KSIN(LOCAL:14)
	
	;約0.1秒の描写を1200回繰り返す
	;1200回(約2分)で終わらなかったら強制終了
	REPEAT 1200
		SIF COUNT != 0
			CLEARLINE 19
		LOCAL:11 = BALL_CX + BALL_VX;移動予定地(X座標)
		LOCAL:12 = BALL_CY + BALL_VY;移動予定地(Y座標)
		;壁に左からぶつかるとき
		IF LOCAL:11/1000 >= 31
			LOCAL:11 = 61999 - LOCAL:11
			BALL_VX *= -1
		;壁に右からぶつかるとき
		ELSEIF LOCAL:11/1000 < 1
			LOCAL:11 = 2000 - LOCAL:11
			BALL_VX *= -1
		ENDIF
		;壁に下からぶつかるとき
		IF LOCAL:12/1000 >= 17
			LOCAL:12 = 33999 - LOCAL:12
			BALL_VY *= -1
		;壁に上からぶつかるとき
		ELSEIF LOCAL:12/1000 < 1 && LOCAL:11/1000 < 6
			LOCAL:12 = 2000 - LOCAL:12
			BALL_VY *= -1
		ENDIF
		;ブロックに関する判定
		FOR Y, 2, 18, 4
			FOR X, 10, 34, 6
				IF X == LOCAL:11/1000 && Y == LOCAL:12/1000;移動予定地がブロックのとき
					;左からぶつかるとき
					IF X > BALL_CX/1000 && Y == (BALL_CY + (1000*X - BALL_CX)*BALL_VY/BALL_VX) /1000
						LOCAL:11 = X*2000 - 1 - LOCAL:11
						BALL_VX *= -1
					;右からぶつかるとき
					ELSEIF X < BALL_CX/1000 && Y == (BALL_CY - (BALL_CX - 999 -1000*X)*BALL_VY/BALL_VX) /1000
						LOCAL:11 = (X+1)*2000 + 1 - LOCAL:11
						BALL_VX *= -1
					;下からぶつかるとき
					ELSEIF Y > BALL_CY/1000 && X == (BALL_CX + (1000*Y - BALL_CY)*BALL_VX/BALL_VY) /1000
						LOCAL:12 = Y*2000 - 1 - LOCAL:12
						BALL_VY *= -1
					;上からぶつかるとき
					ELSEIF Y < BALL_CY/1000 && X == (BALL_CX - (BALL_CY - 999 -1000*Y)*BALL_VX/BALL_VY) /1000
						LOCAL:12 = (Y+1)*2000 + 1 - LOCAL:12
						BALL_VY *= -1
					ENDIF
				ENDIF
			NEXT
		NEXT
		FOR Y, 4, 16, 4
			FOR X, 13, 31, 6
				IF X == LOCAL:11/1000 && Y == LOCAL:12/1000;移動予定地がブロックのとき
					;左からぶつかるとき
					IF X > BALL_CX/1000 && Y == (BALL_CY + (1000*X - BALL_CX)*BALL_VY/BALL_VX) /1000
						LOCAL:11 = X*2000 - 1 - LOCAL:11
						BALL_VX *= -1
					;右からぶつかるとき
					ELSEIF X < BALL_CX/1000 && Y == (BALL_CY - (BALL_CX - 999 -1000*X)*BALL_VY/BALL_VX) /1000
						LOCAL:11 = (X+1)*2000 + 1 - LOCAL:11
						BALL_VX *= -1
					;下からぶつかるとき
					ELSEIF Y > BALL_CY/1000 && X == (BALL_CX + (1000*Y - BALL_CY)*BALL_VX/BALL_VY) /1000
						LOCAL:12 = Y*2000 - 1 - LOCAL:12
						BALL_VY *= -1
					;上からぶつかるとき
					ELSEIF Y < BALL_CY/1000 && X == (BALL_CX - (BALL_CY - 999 -1000*Y)*BALL_VX/BALL_VY) /1000
						LOCAL:12 = (Y+1)*2000 + 1 - LOCAL:12
						BALL_VY *= -1
					ENDIF
				ENDIF
			NEXT
		NEXT
		BALL_CX = LOCAL:11
		BALL_CY = LOCAL:12
		;斜めの反射板の判定(Tは交換用)
		IF (1 <= LOCAL:11/1000 && LOCAL:11/1000 <= 5) && (LOCAL:12/1000 == 11+LOCAL:11/1000 || LOCAL:12/1000 == 12+LOCAL:11/1000)
			REFLEC += 1
			IF (BALL_VX > 0 && BALL_VY/BALL_VX > 1) || (BALL_VX < 0 && BALL_VY/BALL_VX < 1);左斜め上からの場合はスルー
				T = BALL_VX
				BALL_VX = BALL_VY
				BALL_VY = T
			ENDIF
		ELSEIF LOCAL:11/1000 == 1 && LOCAL:12/1000 == 1
			REFLEC += 1
			IF (BALL_VX > 0 && BALL_VY/BALL_VX < -1) || (BALL_VX < 0 && BALL_VY/BALL_VX > -1);左斜め下からの場合はスルー
				T = BALL_VX
				BALL_VX = -BALL_VY
				BALL_VY = -T
			ENDIF
		ELSEIF LOCAL:11/1000 == 30 && LOCAL:12/1000 == 16
			REFLEC += 1
			IF (BALL_VX > 0 && BALL_VY/BALL_VX > -1) || (BALL_VX < 0 && BALL_VY/BALL_VX < -1);右斜め上からの場合はスルー
				T = BALL_VX
				BALL_VX = -BALL_VY
				BALL_VY = -T
			ENDIF
		ELSEIF LOCAL:11/1000 == 30 && LOCAL:12/1000 == 1
			REFLEC += 1
			IF (BALL_VX > 0 && BALL_VY/BALL_VX < 1) || (BALL_VX < 0 && BALL_VY/BALL_VX > 1);右斜め下からの場合はスルー
				T = BALL_VX
				BALL_VX = BALL_VY
				BALL_VY = T
			ENDIF
		ENDIF
		SIF REFLEC > 99
			REFLEC = 99
		;上向き矢印の判定
		IF (BALL_CX/1000 == 2 || BALL_CX/1000 == 5 || BALL_CX/1000 == 8 ) && BALL_CY/1000 == 9
			BALL_VY = ABS(BALL_VY)
		ENDIF
		
		PRINTL
		;#;PRINTFORML ({BALL_CX}, {BALL_CY}) ({BALL_VX}, {BALL_VY})
		Y=17;------------------------------------------------------------------------------------------------
		PRINTL ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		Y=16;------------------------------------------------------------------------------------------------
		PRINT ■
		IF REFLEC > 0
			SETCOLOR 0x00CC00
			PRINT BONUS!
		ELSE
			PRINT 　　　
		ENDIF
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 4 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		IF BALL_CX/1000 == 5 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		RESETCOLOR
		FOR X, 6, 30
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 30 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ＼
		ENDIF
		RESETCOLOR
		PRINTL ■
		Y=15;------------------------------------------------------------------------------------------------
		PRINT ■
		IF REFLEC > 0
			SETCOLOR 0x00CC00
		ELSE
			SETCOLOR 0x44AA44
		ENDIF
		SIF ABS(REFLEC) < 10
			PRINT ０
		PRINTFORMS TOFULL(TOSTR(ABS(REFLEC)))
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 3 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		IF BALL_CX/1000 == 4 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		RESETCOLOR
		FOR X, 5, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=14;------------------------------------------------------------------------------------------------
		PRINT ■　
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 2 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		IF BALL_CX/1000 == 3 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		RESETCOLOR
		FOR X, 4, 10
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 11, 16
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 17, 22
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 23, 28
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 29, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=13;------------------------------------------------------------------------------------------------
		PRINT ■
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 1 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		IF BALL_CX/1000 == 2 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		RESETCOLOR
		FOR X, 3, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=12;------------------------------------------------------------------------------------------------
		PRINT ■
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 1 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		RESETCOLOR
		FOR X, 2, 13
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 14, 16
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 16 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:1
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 17, 19
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 20, 22
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 22 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:2
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 23, 25
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 26, 28
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 28 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:3
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 29, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=11;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=10;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 10
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 11, 16
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 17, 22
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 23, 28
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 29, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=9;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 10, 3
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
			SETCOLOR 0x80AA80
			IF BALL_CX/1000 == X+1 && BALL_CY/1000 == Y
				PRINT ●
			ELSE
				PRINT ↑
			ENDIF
			RESETCOLOR
			IF BALL_CX/1000 == X+2 && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		FOR X, 10, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=8;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 13
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 14, 16
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 16 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:4
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 17, 19
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 20, 22
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 22 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:5
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 23, 25
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 26, 28
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 28 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:6
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 29, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=7;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=6;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 10
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 11, 16
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 17, 22
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 23, 28
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 29, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=5;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=4;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 13
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 14, 16
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 16 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:7
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 17, 19
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 20, 22
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 22 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:8
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 23, 25
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 26, 28
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		IF BALL_CX/1000 == 28 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ●
			RESETCOLOR
		ELSEIF LOCAL:9
			SETCOLOR 0x993333
			PRINT ★
			RESETCOLOR
		ELSE
			PRINT ○
		ENDIF
		FOR X, 29, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=3;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=2;------------------------------------------------------------------------------------------------
		PRINT ■
		FOR X, 1, 10
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 11, 16
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 17, 22
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 23, 28
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINT ■
		FOR X, 29, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		PRINTL ■
		Y=1;------------------------------------------------------------------------------------------------
		PRINT ■
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 1 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ＼
		ENDIF
		RESETCOLOR
		FOR X, 2, 30
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ●
				RESETCOLOR
			ELSE
				PRINT 　
			ENDIF
		NEXT
		SETCOLOR 0x80AA80
		IF BALL_CX/1000 == 30 && BALL_CY/1000 == Y
			PRINT ●
		ELSE
			PRINT ／
		ENDIF
		RESETCOLOR
		PRINTL ■
		Y=0;------------------------------------------------------------------------------------------------
		PRINT ■■■■■■
		IF BALL_CX/1000 <= 6 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ※
		ELSE
			SETCOLOR 0x8080AA
			PRINT ＝
		ENDIF
		FOR X, 7, 17
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ※
			ELSE
				SETCOLOR 0x8080AA
				PRINT ＝
			ENDIF
		NEXT
		IF BALL_CX/1000 == 17 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ※
		ELSE
			SETCOLOR 0x8080AA
			PRINT LO
		ENDIF
		IF BALL_CX/1000 == 18 && BALL_CY/1000 == Y
			SETCOLOR 0x808000
			PRINT ※
		ELSE
			SETCOLOR 0x8080AA
			PRINT ST
		ENDIF
		FOR X, 19, 31
			IF BALL_CX/1000 == X && BALL_CY/1000 == Y
				SETCOLOR 0x808000
				PRINT ※
			ELSE
				SETCOLOR 0x8080AA
				PRINT ＝
			ENDIF
		NEXT
		RESETCOLOR
		PRINTL ■
		
		SIF BALL_CY/1000 < 1
			GOTO BALL_STOP
		FOR X, 16, 34, 6
			FOR Y, 4, 16, 4
				IF BALL_CX/1000 == X && BALL_CY/1000 == Y
					IF LOCAL:((X-10)/6+3*(12-Y)/4) == 0
						LOCAL:((X-10)/6+3*(12-Y)/4) = 1
						GOTO BALL_STOP
					ENDIF
				ENDIF
			NEXT
		NEXT
		TWAIT 100, 1
	REND
	PRINTW 2分経ってもゲームが終わらないため強制終了しました。
	$BALL_STOP
	WAIT
	LOCAL -= 1
	
	BINGO = 0
	SIF LOCAL:1 && LOCAL:2 && LOCAL:3
		BINGO += 1
	SIF LOCAL:4 && LOCAL:5 && LOCAL:6
		BINGO += 1
	SIF LOCAL:7 && LOCAL:8 && LOCAL:9
		BINGO += 1
	SIF LOCAL:1 && LOCAL:4 && LOCAL:7
		BINGO += 1
	SIF LOCAL:2 && LOCAL:5 && LOCAL:8
		BINGO += 1
	SIF LOCAL:3 && LOCAL:6 && LOCAL:9
		BINGO += 1
	SIF LOCAL:1 && LOCAL:5 && LOCAL:9
		BINGO += 1
	SIF LOCAL:3 && LOCAL:5 && LOCAL:7
		BINGO += 1
	
LOOP LOCAL > 0

SCORE = 0

PRINTL
PRINTL <ゲーム終了>
IF BINGO
	PRINTFORML ビンゴボーナス：{BINGO * S_BINGO}点
	SCORE += BINGO * S_BINGO
ENDIF
IF REFLEC > 0
	PRINTFORML 反射板ボーナス：{REFLEC * S_REFLEC}点
	SCORE += REFLEC * S_REFLEC
ENDIF
PRINTFORML トータルスコア：{SCORE}点
PRINTW

RETURN SCORE
[SKIPEND]