;フィッシャー・イェーツのシャッフル
;SFL:0からSFL:{ARG-1}までの配列にシャッフルした順列を返す
;TRDは交換用
@SHUFFLE, ARG
#DIM DYNAMIC SFL, 104
#DIM DYNAMIC TRD

FOR N, 0, ARG
	SFL:N = N
NEXT

FOR N, 0, ARG
	M = RAND:(ARG-N);0以上(ARG-N)未満の数を決める
	TRD = SFL:(ARG-N-1)
	SFL:(ARG-N-1) = SFL:M
	SFL:M = TRD
NEXT

;今回は配列YAMAに代入
FOR N, 0, ARG
	YAMA:N = SFL:N
NEXT


;バブルソートにより牌を並べ替える
;引数はプレイヤーの番号
;赤の位置は不定
@SORTPAI, ARG
FOR M, 6, 0, -1
	FOR N, 0, M
		IF TEHAI:ARG:N%25 > TEHAI:ARG:(N+1)%25
			T = TEHAI:ARG:N;Tは交換用
			TEHAI:ARG:N = TEHAI:ARG:(N+1)
			TEHAI:ARG:(N+1) = T
		ENDIF
	NEXT
NEXT


;引数に対し、牌を表示する
@PRTPAI, ARG
RESETCOLOR
IF ARG >= 100
	SETCOLOR 0xFFCC00
	IF ARG == 100
		PRINT 春
	ELSEIF ARG == 101
		PRINT 夏
	ELSEIF ARG == 102
		PRINT 秋
	ELSEIF ARG == 103
		PRINT 冬
	ENDIF
ELSE
	;赤五萬
	IF (ARG == 79 && P8RED%4) || (ARG == 54 && P8RED%4 >= 2) || (ARG%25 == 4 && P8RED%4 == 3)
		SETCOLOR 0xFF0000
	;赤五筒
	ELSEIF (ARG == 88 && P8RED/4%4) || (ARG == 63 && P8RED/4%4 >= 2) || (ARG%25 == 13 && P8RED/4%4 == 3)
		SETCOLOR 0xFF0000
	;赤三筒
	ELSEIF (ARG == 86 && P8RED/16%4) || (ARG == 61 && P8RED/16%4 == 2)
		SETCOLOR 0xFF0000
	;金三筒もといスーパー赤三筒
	ELSEIF (ARG == 61 && P8RED/16%4 == 3)
		SETCOLOR 0xFFFF00
	;赤北
	ELSEIF (ARG == 96 && P8RED/64%2)
		SETCOLOR 0xFF0000
	;萬子
	ELSEIF ARG%25/9 == 0
		SETCOLOR 0xFF00FF
	;筒子
	ELSEIF ARG%25/9 == 1
		SETCOLOR 0x33DDDD
	;風牌
	ELSEIF ARG%25 <= 21
		SETCOLOR 0xDDDDDD
	ENDIF
	IF ARG%25 == 0
		PRINT 一
	ELSEIF ARG%25 == 1
		PRINT 二
	ELSEIF ARG%25 == 2
		PRINT 三
	ELSEIF ARG%25 == 3
		PRINT 四
	ELSEIF ARG%25 == 4
		PRINT 五
	ELSEIF ARG%25 == 5
		PRINT 六
	ELSEIF ARG%25 == 6
		PRINT 七
	ELSEIF ARG%25 == 7
		PRINT 八
	ELSEIF ARG%25 == 8
		PRINT 九
	ELSEIF ARG%25 == 9
		PRINT ①
	ELSEIF ARG%25 == 10
		PRINT ②
	ELSEIF ARG%25 == 11
		PRINT ③
	ELSEIF ARG%25 == 12
		PRINT ④
	ELSEIF ARG%25 == 13
		PRINT ⑤
	ELSEIF ARG%25 == 14
		PRINT ⑥
	ELSEIF ARG%25 == 15
		PRINT ⑦
	ELSEIF ARG%25 == 16
		PRINT ⑧
	ELSEIF ARG%25 == 17
		PRINT ⑨
	ELSEIF ARG%25 == 18
		PRINT 東
	ELSEIF ARG%25 == 19
		PRINT 南
	ELSEIF ARG%25 == 20
		PRINT 西
	ELSEIF ARG%25 == 21
		PRINT 北
	ELSEIF ARG%25 == 22
		SETCOLOR 0xFFFFFF
		PRINT 白
	ELSEIF ARG%25 == 23
		SETCOLOR 0x22AA22
		PRINT 發
	ELSE
		SETCOLOR 0xEE2222
		PRINT 中
	ENDIF
ENDIF
RESETCOLOR


@SHANTEN8(ARG:0, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARG:7, ARG:8)
#FUNCTION
;シャンテン数を返す式中関数
;0シャンテンをテンパイ、-1シャンテンをアガリとみなす
;[シャンテン数] = 4 - [メンツ数]*2 - [ターツor対子数] - [ヘッド数]
;ただし、[メンツ数]+[ターツor対子数]の最大は2、[ヘッド数]の最大は1
#DIM DYNAMIC SHANTEN
#DIM DYNAMIC PAI, 25;種類別の牌の枚数(最初に固定)
#DIM DYNAMIC PAI2, 25;種類別の牌の枚数(計算用 メンツ切り出しによって減っていく)
#DIM DYNAMIC MENTSU
#DIM DYNAMIC TOITSU
#DIM DYNAMIC TATSU
#DIM DYNAMIC MT;[メンツ数]+[ターツor対子数]のカウントに利用
#DIM DYNAMIC KOUHO
#DIM DYNAMIC HEAD

;ARG:0～ARG:7の引数を-1にするか、ARG:8で除外する番号を指定しているとカウントしない
FOR M, 0, 25
	FOR N, 0, 8
		SIF ARG:N != -1 && ARG:N%25 == M && N != ARG:8
			PAI:M++
	NEXT
NEXT

;メンツを4通りの方法で切り出す
;順子と刻子の組み合わせで2*2=4通り

;刻子+刻子
FOR M, 0, 25
	PAI2:M = PAI:M
NEXT
FOR N, 0, 25
	IF PAI2:N >= 3
		PAI2:N -= 3
		MENTSU++
	ENDIF
NEXT
FOR N, 0, 25
	IF PAI2:N >= 2
		PAI2:N -= 2
		TOITSU++
	ENDIF
NEXT
FOR N, 0, 8
	IF PAI2:N && PAI2:(N+1)
		PAI2:N--
		PAI2:(N+1)--
		TATSU++
	ENDIF
NEXT
FOR N, 9, 17
	IF PAI2:N && PAI2:(N+1)
		PAI2:N--
		PAI2:(N+1)--
		TATSU++
	ENDIF
NEXT
FOR N, 0, 7
	IF PAI2:N && PAI2:(N+2)
		PAI2:N--
		PAI2:(N+2)--
		TATSU++
	ENDIF
NEXT
FOR N, 9, 16
	IF PAI2:N && PAI2:(N+2)
		PAI2:N--
		PAI2:(N+2)--
		TATSU++
	ENDIF
NEXT
MT = MENTSU
IF MT == 0 && TATSU >= 2
	MT = 2
	KOUHO += 2
	TATSU -= 2
ELSEIF MT < 2 && TATSU >= 1
	MT++
	KOUHO++
	TATSU--
ENDIF
IF MT == 0 && TOITSU >= 2
	MT = 2
	KOUHO += 2
	TOITSU -= 2
ELSEIF MT < 2 && TOITSU >= 1
	MT++
	KOUHO++
	TOITSU--
ENDIF
SIF TOITSU
	HEAD++
SHANTEN = 4 - 2*MENTSU - KOUHO - HEAD

FOR L, 0, 16
	IF L%9 < 7
		;順子+順子
		VARSET MENTSU
		VARSET TOITSU
		VARSET TATSU
		VARSET MT
		VARSET KOUHO
		VARSET HEAD
		FOR M, 0, 25
			PAI2:M = PAI:M
		NEXT
		FOR N, L, L+18
			IF N%9 < 7
				DO
					IF PAI2:(N%18) && PAI2:(N%18+1) && PAI2:(N%18+2)
						PAI2:(N%18)--
						PAI2:(N%18+1)--
						PAI2:(N%18+2)--
						MENTSU++
					ENDIF
				LOOP PAI2:(N%18) && PAI2:(N%18+1) && PAI2:(N%18+2)
			ENDIF
		NEXT
		FOR N, 0, 25
			IF PAI2:N >= 2
				PAI2:N -= 2
				TOITSU++
			ENDIF
		NEXT
		FOR N, 0, 8
			IF PAI2:N && PAI2:(N+1)
				PAI2:N--
				PAI2:(N+1)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 9, 17
			IF PAI2:N && PAI2:(N+1)
				PAI2:N--
				PAI2:(N+1)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 0, 7
			IF PAI2:N && PAI2:(N+2)
				PAI2:N--
				PAI2:(N+2)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 9, 16
			IF PAI2:N && PAI2:(N+2)
				PAI2:N--
				PAI2:(N+2)--
				TATSU++
			ENDIF
		NEXT
		MT = MENTSU
		IF MT == 0 && TATSU >= 2
			MT = 2
			KOUHO += 2
			TATSU -= 2
		ELSEIF MT < 2 && TATSU >= 1
			MT++
			KOUHO++
			TATSU--
		ENDIF
		IF MT == 0 && TOITSU >= 2
			MT = 2
			KOUHO += 2
			TOITSU -= 2
		ELSEIF MT < 2 && TOITSU >= 1
			MT++
			KOUHO++
			TOITSU--
		ENDIF
		SIF TOITSU
			HEAD++
		SIF SHANTEN > 4 - 2*MENTSU - KOUHO - HEAD
			SHANTEN = 4 - 2*MENTSU - KOUHO - HEAD
			
		;順子+刻子
		VARSET MENTSU
		VARSET TOITSU
		VARSET TATSU
		VARSET MT
		VARSET KOUHO
		VARSET HEAD
		FOR M, 0, 25
			PAI2:M = PAI:M
		NEXT
		FOR N, L, L+18
			IF N%9 < 7
				IF PAI2:(N%18) && PAI2:(N%18+1) && PAI2:(N%18+2)
					PAI2:(N%18)--
					PAI2:(N%18+1)--
					PAI2:(N%18+2)--
					MENTSU++
					BREAK
				ENDIF
			ENDIF
		NEXT
		FOR N, 0, 25
			IF PAI2:N >= 3
				PAI2:N -= 3
				MENTSU++
				BREAK
			ENDIF
		NEXT
		FOR N, 0, 25
			IF PAI2:N >= 2
				PAI2:N -= 2
				TOITSU++
			ENDIF
		NEXT
		FOR N, 0, 8
			IF PAI2:N && PAI2:(N+1)
				PAI2:N--
				PAI2:(N+1)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 9, 17
			IF PAI2:N && PAI2:(N+1)
				PAI2:N--
				PAI2:(N+1)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 0, 7
			IF PAI2:N && PAI2:(N+2)
				PAI2:N--
				PAI2:(N+2)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 9, 16
			IF PAI2:N && PAI2:(N+2)
				PAI2:N--
				PAI2:(N+2)--
				TATSU++
			ENDIF
		NEXT
		MT = MENTSU
		IF MT == 0 && TATSU >= 2
			MT = 2
			KOUHO += 2
			TATSU -= 2
		ELSEIF MT < 2 && TATSU >= 1
			MT++
			KOUHO++
			TATSU--
		ENDIF
		IF MT == 0 && TOITSU >= 2
			MT = 2
			KOUHO += 2
			TOITSU -= 2
		ELSEIF MT < 2 && TOITSU >= 1
			MT++
			KOUHO++
			TOITSU--
		ENDIF
		SIF TOITSU
			HEAD++
		SIF SHANTEN > 4 - 2*MENTSU - KOUHO - HEAD
			SHANTEN = 4 - 2*MENTSU - KOUHO - HEAD

		;刻子+順子
		VARSET MENTSU
		VARSET TOITSU
		VARSET TATSU
		VARSET MT
		VARSET KOUHO
		VARSET HEAD
		FOR M, 0, 25
			PAI2:M = PAI:M
		NEXT
		FOR N, 0, 25
			IF PAI2:N >= 3
				PAI2:N -= 3
				MENTSU++
				BREAK
			ENDIF
		NEXT
		FOR N, L, L+18
			IF N%9 < 7
				IF PAI2:(N%18) && PAI2:(N%18+1) && PAI2:(N%18+2)
					PAI2:(N%18)--
					PAI2:(N%18+1)--
					PAI2:(N%18+2)--
					MENTSU++
					BREAK
				ENDIF
			ENDIF
		NEXT
		FOR N, 0, 25
			IF PAI2:N >= 2
				PAI2:N -= 2
				TOITSU++
			ENDIF
		NEXT
		FOR N, 0, 8
			IF PAI2:N && PAI2:(N+1)
				PAI2:N--
				PAI2:(N+1)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 9, 17
			IF PAI2:N && PAI2:(N+1)
				PAI2:N--
				PAI2:(N+1)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 0, 7
			IF PAI2:N && PAI2:(N+2)
				PAI2:N--
				PAI2:(N+2)--
				TATSU++
			ENDIF
		NEXT
		FOR N, 9, 16
			IF PAI2:N && PAI2:(N+2)
				PAI2:N--
				PAI2:(N+2)--
				TATSU++
			ENDIF
		NEXT
		MT = MENTSU
		IF MT == 0 && TATSU >= 2
			MT = 2
			KOUHO += 2
			TATSU -= 2
		ELSEIF MT < 2 && TATSU >= 1
			MT++
			KOUHO++
			TATSU--
		ENDIF
		IF MT == 0 && TOITSU >= 2
			MT = 2
			KOUHO += 2
			TOITSU -= 2
		ELSEIF MT < 2 && TOITSU >= 1
			MT++
			KOUHO++
			TOITSU--
		ENDIF
		SIF TOITSU
			HEAD++
		SIF SHANTEN > 4 - 2*MENTSU - KOUHO - HEAD
			SHANTEN = 4 - 2*MENTSU - KOUHO - HEAD
	ENDIF
NEXT

RETURNF SHANTEN


@SHANTEN(ARG:0, ARG:1)
#FUNCTION
;シャンテン数を返す式中関数の簡易版
;ARG:0はプレイヤー番号、ARG:1は除外する番号
RETURNF SHANTEN8(TEHAI:(ARG:0):0, TEHAI:(ARG:0):1, TEHAI:(ARG:0):2, TEHAI:(ARG:0):3, TEHAI:(ARG:0):4, TEHAI:(ARG:0):5, TEHAI:(ARG:0):6, TSUMO, ARG:1)


@MACHI(ARG:0, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6)
#FUNCTIONS
;待ちを文字列で返す式中関数
LOCAL:1 = 0
VARSET LOCALS
FOR LOCAL, 0, 25
	IF SHANTEN8(ARG:0, ARG:1, ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, LOCAL, -1) == -1
		SIF LOCAL:1
			LOCALS += " "
		IF LOCAL < 18
			SELECTCASE LOCAL%9
				CASE 0
					LOCALS += "一"
				CASE 1
					LOCALS += "二"
				CASE 2
					LOCALS += "三"
				CASE 3
					LOCALS += "四"
				CASE 4
					LOCALS += "五"
				CASE 5
					LOCALS += "六"
				CASE 6
					LOCALS += "七"
				CASE 7
					LOCALS += "八"
				CASE 8
					LOCALS += "九"
			ENDSELECT
			SIF LOCAL < 9
				LOCALS += "萬"
			SIF LOCAL >= 9
				LOCALS += "筒"
		ELSEIF LOCAL == 18
			LOCALS += "東"
		ELSEIF LOCAL == 19
			LOCALS += "南"
		ELSEIF LOCAL == 20
			LOCALS += "西"
		ELSEIF LOCAL == 21
			LOCALS += "北"
		ELSEIF LOCAL == 22
			LOCALS += "白"
		ELSEIF LOCAL == 23
			LOCALS += "發"
		ELSEIF LOCAL == 24
			LOCALS += "中"
		ENDIF
		LOCAL:1++
	ENDIF
NEXT

RETURNF LOCALS


;何もない行を30行追加する
@LINEPLUS
REPEAT 30
	PRINTL
REND
