@口上エディタ_プロジェクト選択
#DIM DYNAMIC LCOUNT
TARGET = -1

PRINTL □プロジェクトを選択してください
FOR LCOUNT, 100, 130
	SELECTCASE CHKDATA(LCOUNT)
		CASE 0
			PRINTFORML 　[{LCOUNT, 3}] %RESULTS%
		CASE 1
			PRINTFORML 　[{LCOUNT, 3}] 未使用のプロジェクト
		CASE 2
			PRINTFORML 　[{LCOUNT, 3}] 別バリアントのセーブデータです プロジェクト番号使用可能
		CASE 3
			PRINTFORML 　[{LCOUNT, 3}] 互換性の無いセーブデータです プロジェクト番号使用可能
		CASE 4
			PRINTFORML 　[{LCOUNT, 3}] ロードできないセーブデータです プロジェクト番号使用可能
	ENDSELECT
NEXT
DRAWLINE
PRINTL 　[100] 戻る

INPUT
SELECTCASE RESULT
	CASE 100 TO 130
		IF CHKDATA(RESULT) == 0
			LOADDATA RESULT
		ELSE
			JUMP 口上エディタ_COM, RESULT
		ENDIF
ENDSELECT

@口上エディタ_COM, SAVENO
#DIM SAVENO
#DIM DYNAMIC LRESULT
#DIM DYNAMIC PAGE
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC 処理数
#DIM DYNAMIC 表示数 = 80
#DIM DYNAMIC 次ページあり
#DIM DYNAMIC 執筆行数
#DIM DYNAMIC 表示行数
#DIM DYNAMIC コマンド
#DIMS DYNAMIC SPLITVAR, 3

IF TARGET == -1
	PRINTL □口上を書くキャラを選んでください
	VARLINE = LINECOUNT
	CALL CHARA_ADD, 0
	CALL CHARA_LIST, 1
	CALL CHARA_ADD, RESULT
	口上プロジェクト = SAVENO
	SAVEDATA 口上プロジェクト, @"保存日時:%GETTIMES()% %NAME:TARGET%の口上"
ENDIF

SIF LINECOUNT > VARLINE
	CLEARLINE LINECOUNT-VARLINE
VARLINE = LINECOUNT
DRAWLINE
PRINTFORML □%NAME:TARGET%口上執筆中 コマンドを選んでください
処理数 = 0
次ページあり = 0
FOR LCOUNT, 0, VARSIZE("TRAINNAME")
	SIF TRAINNAME:LCOUNT == ""
		CONTINUE
	IF INRANGE(処理数, PAGE*表示数, PAGE*表示数+表示数-1)
		執筆行数 = 0
		FOR LCOUNT2, 0, 1000000
			SIF COMD:LCOUNT2 == ""
				BREAK
			SPLIT COMD:LCOUNT2, "/", SPLITVAR
			SIF SPLITVAR:0 == TRAINNAME:LCOUNT && SPLITVAR:2 != "乱数分岐"
				執筆行数++
		NEXT
		SIF 執筆行数
			SETCOLORBYNAME deepskyblue
		PRINTFORMLC 　[{LCOUNT, 3}]%TRAINNAME:LCOUNT%\@ 執筆行数 > 0 ? (総執筆行数:{執筆行数}行) #\@
		RESETCOLOR
	ENDIF
	処理数++
	IF 処理数 > PAGE*表示数+表示数 && TRAINNAME:LCOUNT != ""
		次ページあり = 1
		BREAK
	ENDIF
NEXT
SIF !LINEISEMPTY()
	PRINTL 
DRAWLINE
PRINTPLAIN 　COM　
IF PAGE > 0
	PRINT [-1] 前ページ 
ELSE
	PRINTPLAINFORM %SPACESLENS("[-1] 前ページ ")%
ENDIF
PRINT [1000] 保存して終了する 
IF 次ページあり
	PRINT [-9] 次ページ 
ELSE
	PRINTPLAINFORM %SPACESLENS("[-9] 次ページ ")%
ENDIF
PRINT [-10] イベント口上に切り替え 
IF 自動保存
	PRINT [-11] 自動保存(現在:オン)
ELSE
	SETCOLORBYNAME red
	PRINT [-11] 自動保存(現在:オフ)
	RESETCOLOR
ENDIF
PRINTL 
PRINTPLAINFORM %SPACESLENS("　COM　")%
PRINTL [-20] 口上を出力する

DO
	INPUT
	SELECTCASE RESULT
		CASE 1000
			CALL 口上プロジェクトセーブ, 口上プロジェクト
			RETURN
		CASE -1
			SIF PAGE > 0
				PAGE--
			RESTART
		CASE -9
			SIF 次ページあり
				PAGE++
			RESTART
		CASE -10
			;CALL 口上エディタ_EVENT
		CASE -11
			INVERTBIT 自動保存, 0
			RESTART
		CASE -20
			PRINTL 口上を出力します。よろしいですか？(古いファイルは上書きされます。バックアップ推奨)
			PRINTL [0] - はい
			PRINTL [1] - いいえ
			CALL INPUTF, 0, 1
			SIF RESULT == 0
				CALL 口上出力
			RESTART
		CASEELSE
			コマンド = RESULT
			SIF !INRANGE(コマンド, 0, VARSIZE("TRAINNAME")-1)
				RESTART
			SIF TRAINNAME:コマンド == ""
				RESTART
			CALL 口上エディタ_コマンド, コマンド
			RESTART
	ENDSELECT
LOOP 1

@口上エディタ_コマンド, コマンド
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC コマンド
#DIM DYNAMIC LRESULT
#DIM DYNAMIC 段落
#DIM DYNAMIC 選択分岐
#DIM DYNAMIC 分岐数
#DIMS DYNAMIC 本文
#DIM DYNAMIC 表示行数
#DIM DYNAMIC 執筆行数
#DIMS DYNAMIC COMVAR
#DIMS DYNAMIC SPLITVAR, 3
#DIMS DYNAMIC SPLITVARTEQUIP, 2
#DIM DYNAMIC 着脱コマンド, VARSIZE("TRAINNAME")
#DIM DYNAMIC 着脱切り替え
{
#DIMS DYNAMIC 分岐 =
"初実行時",
"陥落済み",
"恋慕",
"親愛",
"淫乱",
"娼婦",
"服従",
"隷属",
"屈服刻印LV3",
"反発刻印LV3",
"屈服刻印LV2",
"反発刻印LV2",
"屈服刻印LV1",
"反発刻印LV1",
"通常時",
}

;着脱系コマンドを登録しておく
VARSET 着脱コマンド
FOR LCOUNT, 0, VARSIZE("TRAINNAME")
	SELECTCASE TRAINNAME:LCOUNT
		{
		CASE "クリキャップ", "バイブ", "ペニスバンド", "オナホール", "搾精コンドーム", "コンドーム",
			 "搾精器", "貞操帯", "アナルバイブ", "アナルビーズ", "浣腸器", "拡張バルーン",
			 "アナル電極", "電動エネマグラ", "ニプルキャップ", "搾乳器", "乳房電極",
			 "ビデオカメラ", "ライブ配信", "アイマスク", "縄", "ボールギャグ", "尿道カテーテル",
			 "尿道ポッキー", "触手挿入", "アナル触手", "触手クリ責め", "触手乳首責め", "触手搾乳",
			 "触手緊縛", "触手浣腸", "触手口辱", "触手搾精", "触手射精止め", "野外プレイ", "羞恥プレイ",
			 "お風呂場プレイ", "シャワー", "ゲームセンター", "トイレに行く", "女装させる", "新妻プレイ",
		}
			着脱コマンド:LCOUNT = 1
	ENDSELECT
NEXT

;分岐番号の表示は上から優先される

DRAWLINE
PRINTFORML □コマンド「%TRAINNAME:コマンド%」の口上

FOR LCOUNT, 0, VARSIZE("分岐")
	執筆行数 = 0
	FOR LCOUNT2, 0, VARSIZE("COMD")
		SIF COMD:LCOUNT2 == ""
			BREAK
		SPLIT COMD:LCOUNT2, "/", SPLITVAR
		SIF SPLITVAR:0 == TRAINNAME:コマンド && SPLITVAR:1 == 分岐:LCOUNT && SPLITVAR:2 != "乱数分岐"
			執筆行数++
	NEXT
	SELECTCASE 分岐:LCOUNT
		CASE "陥落済み"
			SIF 陥落分岐簡易化
				PRINTFORML 　[{LCOUNT, 2}] %分岐:LCOUNT%の分岐を書く\@ 執筆行数 ? (総執筆行数:{執筆行数}行)#\@
		CASE "恋慕", "親愛", "淫乱", "娼婦", "服従", "隷属"
			SIF !陥落分岐簡易化
				PRINTFORML 　[{LCOUNT, 2}] %分岐:LCOUNT%の分岐を書く\@ 執筆行数 ? (総執筆行数:{執筆行数}行)#\@
		CASEELSE
			SIF 分岐:LCOUNT != ""
				PRINTFORML 　[{LCOUNT, 2}] %分岐:LCOUNT%の分岐を書く\@ 執筆行数 ? (総執筆行数:{執筆行数}行)#\@
	ENDSELECT
NEXT
DRAWLINE
PRINTPLAIN 　分岐　
PRINTFORML [100] - 戻る [101] - 陥落分岐の簡易化(現在:\@ 陥落分岐簡易化 ? オン # オフ \@)

INPUT
LRESULT = RESULT
SELECTCASE LRESULT
	CASE 0 TO 19
		SIF 分岐:LRESULT == ""
			RESTART
		選択分岐 = LRESULT
		VARLINE = LINECOUNT
		GOTO WRITE
	CASE 100
		RETURN
	CASE 101
		INVERTBIT 陥落分岐簡易化, 0
		RESTART
ENDSELECT

$WRITE
CLEARLINE LINECOUNT-VARLINE
DRAWLINE
PRINTFORM □「%TRAINNAME:コマンド%」の%分岐:選択分岐%分岐
IF 着脱コマンド:コマンド
	IF 着脱切り替え
		PRINT (解除時)
	ELSE
		PRINT (実行時)
	ENDIF
ENDIF
PRINTL 
段落 = 0
分岐数 = 0
表示行数 = 0
FOR LCOUNT, 0, VARSIZE("COMD")
	SIF COMD:LCOUNT == ""
		BREAK
	SPLIT COMD:LCOUNT, "/", SPLITVAR
	SIF SPLITVAR:0 != TRAINNAME:コマンド || SPLITVAR:1 != 分岐:選択分岐
		CONTINUE
	IF 着脱コマンド:コマンド
		SPLIT SPLITVAR:2, "|", SPLITVARTEQUIP
		SIF (SPLITVARTEQUIP:0 == "実行時" && 着脱切り替え == 1) || (SPLITVARTEQUIP:0 == "解除時" && 着脱切り替え == 0)
			CONTINUE
		本文 = %SPLITVARTEQUIP:1%
	ELSE
		本文 = %SPLITVAR:2%
	ENDIF
	IF 本文 == "乱数分岐"
		分岐数++
		PRINTBUTTON @"　乱数分岐{分岐数} [編集]", LCOUNT
		PRINTL 
		段落 = 1
		表示行数++
	ELSEIF 本文 != ""
		SIF 段落
			PRINT 　
		PRINTBUTTON @"　%本文% [編集]", LCOUNT
		PRINTL 
		表示行数++
	ENDIF
NEXT
IF 表示行数 == 0
	PRINTBUTTON "　[行を追加]", 0
	PRINTL
ENDIF
DRAWLINE
PRINTPLAIN 　COM　
PRINT [-1] - 戻る 
SIF 着脱コマンド:コマンド
	PRINTFORM [-9] - \@ 着脱切り替え ? 実行時の口上を書く # 解除時の口上を書く \@
PRINTL 

DO
	INPUT
	LRESULT = RESULT
	SELECTCASE LRESULT
		CASE -1
			RESTART
		CASE -9
			INVERTBIT 着脱切り替え, 0
			GOTO WRITE
		CASE 0 TO 999999
			IF 表示行数 == 0
				PRINTL [0] 行を追加
				PRINTL [2] 乱数分岐を追加
				PRINTL [5] 戻る
			ELSE
				PRINTL [0] 行を挿入(上に加筆)
				PRINTL [1] 行を追加(下に加筆)
				PRINTL [2] 乱数分岐を挿入(上に加筆)
				PRINTL [3] 乱数分岐を追加(下に加筆)
				PRINTL [4] 行を削除
				PRINTL [5] 戻る
			ENDIF
			INPUT
			SELECTCASE RESULT
				CASE 0
					PRINTL 文章を入力してください
					INPUTS
					COMVAR = %RESULTS%
					ARRAYSHIFT COMD, 1, "", LRESULT
					IF 着脱コマンド:コマンド
						COMD:LRESULT = %TRAINNAME:コマンド%/%分岐:選択分岐%/\@ 着脱切り替え ? 解除時 # 実行時 \@|%COMVAR%
					ELSE
						COMD:LRESULT = %TRAINNAME:コマンド%/%分岐:選択分岐%/%COMVAR%
					ENDIF
				CASE 1
					PRINTL 文章を入力してください
					INPUTS
					COMVAR = %RESULTS%
					ARRAYSHIFT COMD, 1, "", LRESULT+1
					IF 着脱コマンド:コマンド
						COMD:(LRESULT+1) = %TRAINNAME:コマンド%/%分岐:選択分岐%/\@ 着脱切り替え ? 解除時 # 実行時 \@|%COMVAR%
					ELSE
						COMD:(LRESULT+1) = %TRAINNAME:コマンド%/%分岐:選択分岐%/%COMVAR%
					ENDIF
				CASE 2
					ARRAYSHIFT COMD, 1, "", LRESULT
					IF 着脱コマンド:コマンド
						COMD:LRESULT = %TRAINNAME:コマンド%/%分岐:選択分岐%/\@ 着脱切り替え ? 解除時 # 実行時 \@|乱数分岐
					ELSE
						COMD:LRESULT = %TRAINNAME:コマンド%/%分岐:選択分岐%/乱数分岐
					ENDIF
				CASE 3
					ARRAYSHIFT COMD, 1, "", LRESULT+1
					IF 着脱コマンド:コマンド
						COMD:(LRESULT+1) = %TRAINNAME:コマンド%/%分岐:選択分岐%/\@ 着脱切り替え ? 解除時 # 実行時 \@|乱数分岐
					ELSE
						COMD:(LRESULT+1) = %TRAINNAME:コマンド%/%分岐:選択分岐%/乱数分岐
					ENDIF
				CASE 4
					PRINTL 指定の行を削除します。よろしいですか？
					PRINTL [0] - はい
					PRINTL [1] - いいえ
					CALL INPUTF, 0, 1
					SIF RESULT == 0
						ARRAYREMOVE COMD, LRESULT, 1
				CASE 5
					GOTO WRITE
			ENDSELECT
			SIF 自動保存
				CALL 口上プロジェクトセーブ, 口上プロジェクト
			GOTO WRITE
	ENDSELECT
LOOP 1

@口上プロジェクトセーブ, SAVENO
#DIM DYNAMIC SAVENO
SAVEDATA SAVENO, @"保存日時:%GETTIMES()% %NAME:TARGET%の口上"

@口上出力
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC CCOUNT;COMMAND COUNT
#DIM DYNAMIC BCOUNT;BRANCH COUNT
#DIM DYNAMIC 行数
#DIM DYNAMIC 表示済み
#DIMS DYNAMIC SPLITVAR, 3
#DIMS DYNAMIC SPLITVARTEQUIP, 2
#DIM DYNAMIC 着脱コマンド
;#DIMS DYNAMIC 分岐文, 1000000
#DIMS DYNAMIC 本文, 1000000
#DIM DYNAMIC 分岐数
#DIM DYNAMIC 処理済み分岐数
#DIM DYNAMIC ISELSE
#DIMS DYNAMIC 処理フラグ
#DIM DYNAMIC 概要表示済み
#DIM DYNAMIC 分岐無し
#DIM DYNAMIC TEQUIP分岐済み
#DIM DYNAMIC 配列終端
{
#DIMS DYNAMIC 分岐 =
"初実行時",
"陥落済み",
"恋慕",
"親愛",
"淫乱",
"娼婦",
"服従",
"隷属",
"屈服刻印LV3",
"反発刻印LV3",
"屈服刻印LV2",
"反発刻印LV2",
"屈服刻印LV1",
"反発刻印LV1",
"通常時",
}

;適宜詰めてるので正確に取得できるはず
配列終端 = FINDELEMENT(COMD, "", 0, VARSIZE("COMD"), 1)

CLEARLINE LINECOUNT
;COM_KX1から出力する

PRINTFORML ;-------------------------------------------------
IF ORIGIN
	PRINTFORML ;eraOrigin用 %NAME:TARGET%口上
ELSE
	PRINTFORML ;eraBEMANI用 %NAME:TARGET%口上
ENDIF
PRINTFORML ;この口上は本体同梱の口上エディタで作成されました
PRINTFORML ;-------------------------------------------------
PRINTFORML ;コマンド実行時のセリフ FCOM:(COM番号)
PRINTFORML ;-------------------------------------------------

;FOR3つ入れ子 不安しかない
FOR CCOUNT, 0, VARSIZE("TRAINNAME")
	SIF TRAINNAME:CCOUNT == ""
		CONTINUE
	;軽量化のFINDELEMENT
	SIF FINDELEMENT(COMD, TRAINNAME:CCOUNT, 0, 配列終端) == -1
		CONTINUE
	着脱コマンド = 0
	ISELSE = 0
	表示済み = 0
	概要表示済み = 0
	分岐無し = 0
	TEQUIP分岐済み = 0
	FOR BCOUNT, 0, VARSIZE("分岐")
		行数 = 0
		分岐数 = 0
		SIF FINDELEMENT(COMD, @"%TRAINNAME:CCOUNT%/%分岐:BCOUNT%", 0, 配列終端) == -1
			CONTINUE
		;陥落分岐簡易化中なら一部の分岐無視
		;暫定でオフ
		;SELECTCASE 分岐:BCOUNT
		;	CASE "陥落済み"
		;		SIF !陥落分岐簡易化
		;			CONTINUE
		;	CASE "恋慕", "親愛", "淫乱", "娼婦", "服従", "隷属"
		;		SIF 陥落分岐簡易化
		;			CONTINUE
		;ENDSELECT
		VARSET 本文
		FOR LCOUNT, 0, VARSIZE("COMD")
			SIF COMD:LCOUNT == ""
				BREAK
			SPLIT COMD:LCOUNT, "/", SPLITVAR
			;コマンド名及び分岐名が違ったら処理しない
			SIF SPLITVAR:0 != TRAINNAME:CCOUNT || SPLITVAR:1 != 分岐:BCOUNT
				CONTINUE
			DEBUGPRINTFORML COMD:{LCOUNT}を分割 %SPLITVAR:0% %SPLITVAR:1% %SPLITVAR:2%
			;本文を|でSPLITできるならそれは着脱コマンド
			SPLIT SPLITVAR:2, "|", SPLITVARTEQUIP
			SIF RESULT >= 2
				着脱コマンド = 1
			;着脱コマンドは2回回す 最初は実行時のみ処理
			IF 着脱コマンド
				SIF SPLITVARTEQUIP:0 == "解除時"
					CONTINUE
				DEBUGPRINTFORML {FINDELEMENT(本文, "", 0, VARSIZE("本文"), 1)}行目に %SPLITVARTEQUIP:1% を登録
				;前詰めで入れていく
				本文:FINDELEMENT(本文, "", 0, VARSIZE("本文"), 1) = %SPLITVARTEQUIP:1%
				行数++
				SIF SPLITVARTEQUIP:1 == "乱数分岐"
					分岐数++
			ELSE
				DEBUGPRINTFORML {FINDELEMENT(本文, "", 0, VARSIZE("本文"), 1)}行目に %SPLITVAR:2% を登録
				本文:FINDELEMENT(本文, "", 0, VARSIZE("本文"), 1) = %SPLITVAR:2%
				行数++
				SIF SPLITVAR:2 == "乱数分岐"
					分岐数++
			ENDIF
		NEXT
		;ここから形成
		SIF 行数 == 0
			CONTINUE
		IF !概要表示済み
			PRINTL ;-------------------------------------------------
			PRINTFORML ;%TRAINNAME:CCOUNT%
			PRINTL ;-------------------------------------------------
			PRINTFORML @COM_%TRAINNAME:CCOUNT%_%CSVNAMERPS(NO:TARGET)%
			概要表示済み = 1
		ENDIF
		処理済み分岐数 = 0
		;着脱コマンドなら実行時(TEQUIPが0時)の分岐を作る
		IF 着脱コマンド && !TEQUIP分岐済み
			;TEQUIPNAMEとTRAINNAMEが同じ場合
			FOR LCOUNT, 0, VARSIZE("TEQUIP")
				SIF TEQUIPNAME:LCOUNT == TRAINNAME:CCOUNT
					PRINTFORML IF TEQUIP:%TEQUIPNAME:LCOUNT% == 0
			NEXT
			;その他
			SELECTCASE TRAINNAME:CCOUNT
				CASE "貞操帯"
					PRINTL IF CFLAG:貞操帯 == 0
				CASE "新妻プレイ"
					PRINTL IF TEQUIP:エプロン == 0
				CASE "トイレに行く"
					PRINTL IF TEQUIP:トイレ == 0
				CASE "女装させる"
					PRINTL IF TEQUIP:女装
				;触手系は特殊
				CASE "触手召喚"
					PRINTL IF TEQUIP:触手 == 0
				CASE "触手挿入"
					PRINTL IF TEQUIP:バイブ == 0
				CASE "アナル触手"
					PRINTL IF TEQUIP:アナルバイブ == 0
				CASE "触手クリ責め"
					PRINTL IF TEQUIP:クリキャップ == 0
				CASE "触手乳首責め"
					PRINTL IF TEQUIP:ニプルキャップ == 0
				CASE "触手搾乳"
					PRINTL IF TEQUIP:搾乳器 == 0
				CASE "触手緊縛"
					PRINTL IF TEQUIP:縄 == 0
				CASE "触手浣腸"
					PRINTL IF TEQUIP:浣腸器 == 0
				CASE "触手口辱"
					PRINTL IF TEQUIP:触手口辱 == 0
				CASE "触手搾精"
					PRINTL IF TEQUIP:オナホール == 0
				CASE "触手射精止め"
					PRINTL IF TEQUIP:射精止め == 0
			ENDSELECT
			TEQUIP分岐済み = 1
		ENDIF
		;着脱コマンドなら以下インデントを1つ増やす
		SIF 着脱コマンド
			PRINT 	
		;IF分岐を作る
		IF ISELSE
			PRINT ELSEIF 
		ELSE
			PRINT IF 
		ENDIF
		処理フラグ = 
		SELECTCASE 分岐:BCOUNT
			CASE "初実行時"
				PRINTL FCOM:SELECTCOM == 0
				処理フラグ '= "FCOM:SELECTCOM = 1"
			CASE "陥落済み"
				PRINTL CFLAG:陥落
			CASE "恋慕"
				PRINTL TALENT:恋慕
			CASE "親愛"
				PRINTL TALENT:親愛
			CASE "淫乱"
				PRINTL TALENT:淫乱
			CASE "娼婦"
				PRINTL TALENT:娼婦
			CASE "服従"
				PRINTL TALENT:服従
			CASE "隷属"
				PRINTL TALENT:隷属
			CASE "屈服刻印LV3"
				PRINTL MARK:屈服刻印 == 3
			CASE "反発刻印LV3"
				PRINTL MARK:反発刻印 == 3
			CASE "屈服刻印LV2"
				PRINTL MARK:屈服刻印 >= 2
			CASE "反発刻印LV2"
				PRINTL MARK:反発刻印 >= 2
			CASE "屈服刻印LV1"
				PRINTL MARK:屈服刻印 >= 1
			CASE "反発刻印LV1"
				PRINTL MARK:反発刻印 >= 1
			CASE "通常時"
				;CLEARLINEの前に一応改行しておく
				IF ISELSE
					PRINTL 
					CLEARLINE 1
					SIF 着脱コマンド
						PRINT 	
					PRINTL ELSE
				ELSE
					PRINTL 
					CLEARLINE 1
					分岐無し = 1
				ENDIF
		ENDSELECT
		ISELSE = 1
		;本文を書く
		FOR LCOUNT, 0, VARSIZE("本文")
			IF 本文:LCOUNT == ""
				;乱数分岐していればENDSELECTで閉じる
				IF 処理済み分岐数
					SIF 着脱コマンド
						PRINT 	
					SIF !分岐無し
						PRINT 	
					PRINTL ENDSELECT
				ENDIF
				;処理するフラグがあれば入れる
				IF 処理フラグ != ""
					SIF 着脱コマンド
						PRINT 	
					PRINTFORML 	%処理フラグ%
				ENDIF
				BREAK
			ENDIF
			;インデント調整
			SIF 着脱コマンド
				PRINT 	
			SIF !分岐無し
				PRINT 	
			;乱数分岐ならSELECTCASE RAND:Xを作る
			IF 本文:LCOUNT == "乱数分岐"
				IF 処理済み分岐数 == 0
					PRINTFORML SELECTCASE RAND:{分岐数}
					;インデント調整
					SIF 着脱コマンド
						PRINT 	
					SIF !分岐無し
						PRINT 	
				ENDIF
				PRINTFORML 	CASE {処理済み分岐数}
				処理済み分岐数++
			ELSE
				;乱数分岐の有無でインデントが違う
				IF 処理済み分岐数
					PRINTFORML 		PRINTFORMW %本文:LCOUNT%
				ELSE
					PRINTFORML PRINTFORMW %本文:LCOUNT%
				ENDIF
			ENDIF
		NEXT
		表示済み = 1
	NEXT
	;最後にENDIFで閉じる
	IF 表示済み && !分岐無し
		IF 着脱コマンド
			PRINTL 	ENDIF
		ELSE
			PRINTL ENDIF
		ENDIF
	ENDIF
	IF !着脱コマンド
		PRINTL 
		CONTINUE
	ENDIF
	;着脱コマンドならELSEを置いてもう一度回す
	PRINTL ELSE
	ISELSE = 0
	表示済み = 0
	分岐無し = 0
	FOR BCOUNT, 0, VARSIZE("分岐")
		行数 = 0
		分岐数 = 0
		;陥落分岐簡易化中なら一部の分岐無視
		;暫定でオフ
		;SELECTCASE 分岐:BCOUNT
		;	CASE "陥落済み"
		;		SIF !陥落分岐簡易化
		;			CONTINUE
		;	CASE "恋慕", "親愛", "淫乱", "娼婦", "服従", "隷属"
		;		SIF 陥落分岐簡易化
		;			CONTINUE
		;ENDSELECT
		VARSET 本文
		FOR LCOUNT, 0, VARSIZE("COMD")
			SIF COMD:LCOUNT == ""
				BREAK
			SPLIT COMD:LCOUNT, "/", SPLITVAR
			;コマンド名及び分岐名が違ったら処理しない
			SIF SPLITVAR:0 != TRAINNAME:CCOUNT || SPLITVAR:1 != 分岐:BCOUNT
				CONTINUE
			SPLIT SPLITVAR:2, "|", SPLITVARTEQUIP
			;着脱コマンドは2回回す 2回目は解除時
			IF 着脱コマンド
				SIF SPLITVARTEQUIP:0 == "実行時"
					CONTINUE
				;前詰めで入れていく
				本文:FINDELEMENT(本文, "", 0, VARSIZE("本文"), 1) = %SPLITVARTEQUIP:1%
				行数++
				SIF SPLITVARTEQUIP:1 == "乱数分岐"
					分岐数++
			ELSE
				本文:FINDELEMENT(本文, "", 0, VARSIZE("本文"), 1) = %SPLITVAR:2%
				行数++
				SIF SPLITVAR:2 == "乱数分岐"
					分岐数++
			ENDIF
		NEXT
		;ここから形成
		SIF 行数 == 0
			CONTINUE
		処理済み分岐数 = 0
		;1回目の処理で既にELSE分岐が作られているので分岐形成はしない
		;着脱コマンドなので以下インデントを1つ増やす
		PRINT 	
		;IF分岐を作る
		IF ISELSE
			PRINT ELSEIF 
		ELSE
			PRINT IF 
		ENDIF
		処理フラグ = 
		SELECTCASE 分岐:BCOUNT
			CASE "初実行時"
				PRINTL FCOM:SELECTCOM == 1
				処理フラグ '= "FCOM:SELECTCOM = 2"
			CASE "陥落済み"
				PRINTL CFLAG:陥落
			CASE "恋慕"
				PRINTL TALENT:恋慕
			CASE "親愛"
				PRINTL TALENT:親愛
			CASE "淫乱"
				PRINTL TALENT:淫乱
			CASE "娼婦"
				PRINTL TALENT:娼婦
			CASE "服従"
				PRINTL TALENT:服従
			CASE "隷属"
				PRINTL TALENT:隷属
			CASE "屈服刻印LV3"
				PRINTL MARK:屈服刻印 == 3
			CASE "反発刻印LV3"
				PRINTL MARK:反発刻印 == 3
			CASE "屈服刻印LV2"
				PRINTL MARK:屈服刻印 >= 2
			CASE "反発刻印LV2"
				PRINTL MARK:反発刻印 >= 2
			CASE "屈服刻印LV1"
				PRINTL MARK:屈服刻印 >= 1
			CASE "反発刻印LV1"
				PRINTL MARK:反発刻印 >= 1
			CASE "通常時"
				;CLEARLINEの前に一応改行しておく
				IF ISELSE
					PRINTL 
					CLEARLINE 1
					PRINTL 	ELSE
				ELSE
					PRINTL 
					CLEARLINE 1
					分岐無し = 1
				ENDIF
		ENDSELECT
		ISELSE = 1
		;本文を書く
		FOR LCOUNT, 0, VARSIZE("本文")
			IF 本文:LCOUNT == ""
				;乱数分岐していればENDSELECTで閉じる
				IF 処理済み分岐数
					PRINT 	
					SIF !分岐無し
						PRINT 	
					PRINTL 	ENDSELECT
				ENDIF
				;処理するフラグがあれば入れる
				IF 処理フラグ != ""
					PRINT 	
					PRINTFORML 	%処理フラグ%
				ENDIF
				BREAK
			ENDIF
			;インデント調整
			PRINT 	
			SIF !分岐無し
				PRINT 	
			;乱数分岐ならSELECTCASE RAND:Xを作る
			IF 本文:LCOUNT == "乱数分岐"
				IF 処理済み分岐数 == 0
					PRINTFORML SELECTCASE RAND:{分岐数}
					;インデント調整
					PRINT 	
					SIF !分岐無し
						PRINT 	
				ENDIF
				PRINTFORML 	CASE {処理済み分岐数}
				処理済み分岐数++
			ELSE
				;乱数分岐の有無でインデントが違う
				IF 処理済み分岐数
					PRINTFORML 		PRINTFORMW %本文:LCOUNT%
				ELSE
					PRINTFORML PRINTFORMW %本文:LCOUNT%
				ENDIF
			ENDIF
		NEXT
		表示済み = 1
	NEXT
	;最後にENDIFで閉じる
	SIF 表示済み && !分岐無し
		PRINTL 	ENDIF
	;IF TEQUIP～ELSEのENDIF
	PRINTL ENDIF
	PRINTL 
	AWAIT
NEXT

OUTPUTLOG @"CreatedDialogue/COM_%CSVNAMERPS(NO:TARGET)%.ERB"
PRINTW CreatedDialogueフォルダに口上が出力されました。ERB/口上フォルダにコピーしてお使いください



