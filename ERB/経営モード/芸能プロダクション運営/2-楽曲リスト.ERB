@MUSIC_LIST
#DIM DYNAMIC ページ数
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC 各難易度
#DIM DYNAMIC 表示数
#DIM DYNAMIC 処理数
#DIM DYNAMIC 次ページあり
#DIMS DYNAMIC 収録機種フォルダ
#DIMS DYNAMIC ソート形式 = "バブルソート"
#DIM DYNAMIC 総曲数
#DIM DYNAMIC ソート対象
#DIM DYNAMIC ソート済み, 4

CALL REF_MUSIC

総曲数 = 0
FOR LCOUNT, 0, 1000
	IF 楽曲情報:LCOUNT:0 != ""
		総曲数++
	ELSE
		BREAK
	ENDIF
NEXT

収録機種フォルダ = 

VARLINE = 0

$LIST
表示数 = 0
処理数 = 0
次ページあり = 0

CALL LOOP_CLEARLINE

DRAWLINE
PRINTL 楽曲を選んでください
PRINTL 
PRINT No.   

PRINTBUTTON "Vo ", 1001
PRINTBUTTON "In  ", 1002
PRINTBUTTON "Da  ", 1003
PRINTL 　　　曲名

FOR LCOUNT, 0, 総曲数
	;リストの終端に到達したらBREAK
	;SIF LCOUNT > LOCAL
	;	BREAK
	;収録機種フォルダを使っている場合は収録機種の名前が配列に入ってたら表示する
	IF 収録機種フォルダ != ""
		FOR LCOUNT2, 0, 20
			SIF 楽曲情報:LCOUNT:LCOUNT2 == 収録機種フォルダ
				GOTO 表示
		NEXT
		CONTINUE
	ENDIF
	$表示
	処理数++
	;ページ数*10までは表示しない
	IF 処理数 > ページ数*10
		;10曲表示してあるなら次ページ存在フラグを立ててBREAK
		IF 表示数 >= 10
			次ページあり = 1
			BREAK
		ENDIF
		SIF 楽曲情報:LCOUNT:0 == ""
			CONTINUE
		PRINTFORM [{LCOUNT, 2, RIGHT}] 
		FOR 各難易度, 1, 4
			SELECTCASE TOINT(楽曲情報:LCOUNT:各難易度)
				CASE 0
					PRINT ‐ 
				CASE IS < 10
					PRINTFORM %TOFULL(楽曲情報:LCOUNT:各難易度)% 
				CASEELSE
					PRINTFORM %楽曲情報:LCOUNT:各難易度% 
			ENDSELECT
		NEXT
		PRINTFORML  %楽曲情報:LCOUNT:0%
		表示数++
	ENDIF
NEXT

DRAWLINE
IF 収録機種フォルダ != ""
	PRINTPLAINFORM 　%収録機種フォルダ%.{ページ数+1}　
ELSE
	PRINTPLAINFORM 　PAGE.{ページ数+1}　
ENDIF
IF ページ数 > 0
	PRINTC [998]前のページへ
ELSE
	PRINTC  
ENDIF
SIF 次ページあり
	PRINTC [999]次のページへ
PRINTL 
PRINTPLAIN 　MUSIC SELECT　
PRINT [1000]戻る 
PRINT [1001] Voでソート 
PRINT [1002] Instでソート 
PRINT [1003] Daでソート 
PRINTL [1004] 収録機種フォルダを見る
DO
	INPUT
	SELECTCASE RESULT
		CASE 1000
			IDOL選曲 = 
			RETURN 0
		CASE 0 TO 総曲数
			FOR LCOUNT, 0, 4
				IDOL選曲:LCOUNT = %楽曲情報:RESULT:LCOUNT%
			NEXT
			RETURN 0
		CASE 998
			IF ページ数 > 0
				ページ数--
				GOTO LIST
			ENDIF
		CASE 999
			IF 次ページあり
				ページ数++
				GOTO LIST
			ENDIF
		CASE 1001 TO 1003
			ソート対象 = RESULT%1000
			SELECTCASE RESULT
				CASE 1001
					CALL 難易度ソート, "Vo", 総曲数, ソート済み:ソート対象 == 0 ? "FORWARD" # "BACK"
				CASE 1002
					CALL 難易度ソート, "Inst", 総曲数, ソート済み:ソート対象 == 0 ? "FORWARD" # "BACK"
				CASE 1003
					CALL 難易度ソート, "Da", 総曲数, ソート済み:ソート対象 == 0 ? "FORWARD" # "BACK"
			ENDSELECT
			INVERTBIT ソート済み:ソート対象, 0
			ページ数 = 0
			GOTO LIST
		CASE 1004
			DRAWLINE
			PRINTL □表示したい楽曲の機種を選んでください
			PRINTL  [1] beatmania・beatmaniaIIDX
			PRINTL  [2] pop'n music
			PRINTL  [3] Dance Dance Revolution
			PRINTL  [4] GuitarFreaks・drummania・GITADORA
			PRINTL  [5] jubeat
			PRINTL  [6] REFLEC BEAT・悠久のリフレシア
			PRINTL  [7] SOUND VOLTEX
			PRINTL  [8] ノスタルジア
			PRINTL  [9] Dance Evolution
			PRINTL [10] Beat Stream
			PRINTL [11] CHUNITHM
			PRINTL [12] 太鼓の達人
			PRINTL [13] Deemo
			PRINTL [14] BMS
			PRINTL [99] 全曲表示
			;ミュゼカとダガッキは今のところ除外しておく
			DRAWLINE
			PRINTPLAIN 　機種フォルダ　
			PRINTL [0] 戻る
			DO
				INPUT
				SELECTCASE RESULT
					CASE 0
						GOTO LIST
					CASE 1
						収録機種フォルダ = IIDX
					CASE 2
						収録機種フォルダ = PM
					CASE 3
						収録機種フォルダ = DDR
					CASE 4
						収録機種フォルダ = GFDM
					CASE 5
						収録機種フォルダ = 指
					CASE 6
						収録機種フォルダ = RB
					CASE 7
						収録機種フォルダ = SDVX
					CASE 8
						収録機種フォルダ = ノスタルジア
					CASE 9
						収録機種フォルダ = DEA
					CASE 10
						収録機種フォルダ = BS
					CASE 11
						収録機種フォルダ = CHUNITHM
					CASE 12
						収録機種フォルダ = 太鼓
					CASE 13
						収録機種フォルダ = Deemo
					CASE 14
						収録機種フォルダ = BMS
					CASE 99
						収録機種フォルダ = 
						GOTO LIST
				ENDSELECT
				ページ数 = 0
				SIF INRANGE(RESULT, 1, 14)
					GOTO LIST
			LOOP 1
	ENDSELECT
LOOP 1


@REF_MUSIC
#DIM DYNAMIC MUSIC
;この関数が呼ばれると、2次元配列変数「楽曲情報」に曲名と難易度が入る
;楽曲情報:A:Bだとすると、Aには曲番号、Bには曲名、Vo難易度、Inst難易度、Dance難易度の順で入る
;初期状態だと楽曲名順(0→9、A→Z、あ→ん)。2次元配列にまとめることで各難易度でのソートが可能
;難易度は数値だけど型は文字列なのでTOINTあたり通して使ってください

VARSET 楽曲情報:0:0

;0-9 ----------------
楽曲情報:(MUSIC++):0 '= "ⅩⅢ", "12", "11", "7", "GFDM"
楽曲情報:(MUSIC++):0 '= "19,November", "3", "6", "3", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "20,november", "1", "5", "3", "IIDX", "DDR", "PM"
楽曲情報:(MUSIC++):0 '= "2038", "0", "8", "4", "BMS"
楽曲情報:(MUSIC++):0 '= "5.1.1.", "0", "5", "2", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "5.8.8.", "0", "3", "1", "IIDX"
楽曲情報:(MUSIC++):0 '= "5PM ETERNAL.", "3", "5", "3", "IIDX"
楽曲情報:(MUSIC++):0 '= "7 colors", "5", "8", "6", "RB", "PM", "指"
楽曲情報:(MUSIC++):0 '= "Ⅸ", "9", "9", "9", "IIDX", "PM", "DDR", "GFDM", "指", "RB", "SDVX", "ダガッキ"
;ABCD ----------------
楽曲情報:(MUSIC++):0 '= "Absurd Gaff", "0", "6", "4", "SDVX", "BMS"
楽曲情報:(MUSIC++):0 '= "ÆTHER", "0", "7", "11", "IIDX", "DDR", "RB"
楽曲情報:(MUSIC++):0 '= "AFTER THE GAME OF LOVE", "7", "7", "5", "DDR"
楽曲情報:(MUSIC++):0 '= "air", "0", "5", "8", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "Air", "0", "10", "3", "BMS"
楽曲情報:(MUSIC++):0 '= "All My Love", "5", "5", "5", "DDR"
楽曲情報:(MUSIC++):0 '= "AM-3P", "0", "6", "5", "DDR"
楽曲情報:(MUSIC++):0 '= "And The Dead Ravened For", "10", "9", "7", "GFDM"
楽曲情報:(MUSIC++):0 '= "Angel Fish", "4", "6", "2", "PM"
楽曲情報:(MUSIC++):0 '= "ANiMA", "0", "12", "1", "Deemo"
楽曲情報:(MUSIC++):0 '= "AVE DE RAPINA", "0", "6", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "AWAKE", "6", "7", "9", "DDR"
楽曲情報:(MUSIC++):0 '= "awakening", "4", "5", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "A.DOGMA", "0", "12", "3", "GFDM"
楽曲情報:(MUSIC++):0 '= "B4U", "6", "6", "6", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "BABY BABY GIMME YOUR LOVE", "7", "3", "6", "DDR", "DEA"
楽曲情報:(MUSIC++):0 '= "Beautiful Dream", "5", "5", "7", "DDR", "RB", "GFDM"
楽曲情報:(MUSIC++):0 '= "BOOM BOOM DISCO NIGHT", "3", "6", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "Bounce Bounce Bounce", "9", "5", "5", "IIDX"
楽曲情報:(MUSIC++):0 '= "BRE∀K DOWN", "3", "7", "6", "DDR", "PM", "GFDM"
楽曲情報:(MUSIC++):0 '= "BRILLIANT 2U", "5", "5", "5", "DDR", "IIDX", "DEA"
楽曲情報:(MUSIC++):0 '= "Broadway Diva", "9", "6", "4", "PM"
楽曲情報:(MUSIC++):0 '= "CAN'T STOP FALLIN' IN LOVE", "5", "4", "5", "DDR", "IIDX", "DEA"
楽曲情報:(MUSIC++):0 '= "Change the World", "6", "7", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "CHAOS", "0", "4", "0", "DDR"
楽曲情報:(MUSIC++):0 '= "CHECKING YOU OUT", "4", "7", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "CHOCOLATE PHILOSOPHY", "5", "6", "3", "GFDM", "PM", "RB", "DDR", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= "Chronos", "0", "8", "7", "IIDX", "DDR", "GFDM", "指", "ダガッキ", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= "Come to Life", "6", "9", "9", "DDR", "PM"
;とりあえずBMS、ボルテ、ウニ、Deemo、太鼓だけで
楽曲情報:(MUSIC++):0 '= "conflict", "10", "10", "5", "BMS", "CHUNITHM", "SDVX", "Deemo", "太鼓"
楽曲情報:(MUSIC++):0 '= "Cosmic Hurricane", "3", "8", "10", "DDR", "PM", "GFDM", "RB"
楽曲情報:(MUSIC++):0 '= "D2R", "7", "6", "6", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "Daisuke", "7", "6", "8", "IIDX", "DEA", "指", "BS"
楽曲情報:(MUSIC++):0 '= "D.A.N.C.E.!", "4", "4", "8", "IIDX"
楽曲情報:(MUSIC++):0 '= "Darling my LUV", "4", "5", "6", "IIDX", "GFDM"
楽曲情報:(MUSIC++):0 '= "DEAD END", "0", "6", "6", "DDR"
楽曲情報:(MUSIC++):0 '= "Do The Evolution", "4", "4", "5", "DDR", "DEA", "ダガッキ"
楽曲情報:(MUSIC++):0 '= "Don't forget", "4", "4", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "DOUBLE TORNARD", "0", "8", "5", "DDR"
楽曲情報:(MUSIC++):0 '= "DROP THE BOMB", "8", "6", "6", "DDR", "RB"
楽曲情報:(MUSIC++):0 '= "DYNAMITE RAVE", "6", "6", "5", "DDR"
;EFGH ----------------
楽曲情報:(MUSIC++):0 '= "earth scape", "0", "1", "1", "IIDX"
楽曲情報:(MUSIC++):0 '= "EGOISM 440", "0", "9", "12", "DDR"
楽曲情報:(MUSIC++):0 '= "Endless Summer Story", "3", "6", "2", "IIDX"
楽曲情報:(MUSIC++):0 '= "Eternal Tears", "3", "3", "2", "IIDX"
楽曲情報:(MUSIC++):0 '= "ever snow", "3", "5", "3", "DDR"
楽曲情報:(MUSIC++):0 '= "Fantasia", "6", "8", "5", "PM", "IIDX", "指", "RB"
楽曲情報:(MUSIC++):0 '= "FLOWERS for ALBION", "0", "6", "1", "IIDX"
楽曲情報:(MUSIC++):0 '= "Follow Tomorrow", "6", "6", "7", "IIDX", "DEA", "DDR", "指"
楽曲情報:(MUSIC++):0 '= "Freeze", "0", "5", "4", "DDR"
楽曲情報:(MUSIC++):0 '= "GAMBOL", "0", "3", "2", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "General Relativity", "0", "0", "0", "IIDX"
楽曲情報:(MUSIC++):0 '= "going up", "4", "7", "5", "GFDM", "DDR"
楽曲情報:(MUSIC++):0 '= "Guilt & Love", "6", "6", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "Ha・lle・lu・jah", "5", "5", "5", "SDVX", "RB", "指", "BS", "DDR", "DEA"
楽曲情報:(MUSIC++):0 '= "Heatstroke", "7", "6", "5", "DDR"
楽曲情報:(MUSIC++):0 '= "High School Love", "4", "5", "4", "PM", "IIDX", "RB", "指", "DDR"
楽曲情報:(MUSIC++):0 '= "HORIZON", "5", "4", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "Howling", "4", "6", "6", "IIDX", "PM"
;IJKL ----------------
楽曲情報:(MUSIC++):0 '= "I LOVE SAKURA", "2", "7", "2", "RB", "指"
楽曲情報:(MUSIC++):0 '= "I Was The One", "3", "3", "3", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "Icecles", "0", "8", "6", "指", "GFDM"
楽曲情報:(MUSIC++):0 '= "Idola", "7", "10", "8", "IIDX", "PM", "DDR", "GFDM", "RB", "指", "SDVX", "BS", "ダガッキ"
楽曲情報:(MUSIC++):0 '= "IMPLANTATION", "1", "11", "1", "GFDM", "IIDX", "PM"
楽曲情報:(MUSIC++):0 '= "in love wit you", "6", "3", "3", "DDR"
楽曲情報:(MUSIC++):0 '= "INJECTION OF LOVE", "7", "5", "6", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "INSERTiON", "0", "5", "5", "DDR", "IIDX"
楽曲情報:(MUSIC++):0 '= "I'm a loser", "3", "6", "2", "GFDM"
楽曲情報:(MUSIC++):0 '= "I'M GONNA GET YOU!", "6", "6", "4", "GFDM", "DDR", "RB"
楽曲情報:(MUSIC++):0 '= "I'm so Happy", "5", "8", "8", "指", "DDR", "IIDX", "RB", "PM", "GFDM", "SDVX", "DEA", "ダガッキ", "M?SECA"
楽曲情報:(MUSIC++):0 '= "jelly kiss", "5", "5", "4", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "J219", "0", "6", "3", "BMS"
楽曲情報:(MUSIC++):0 '= "JULIAN", "6", "6", "7", "BMS", "SDVX", "CHUNITHM"
楽曲情報:(MUSIC++):0 '= "KHAMEN BREAK", "2", "7", "7", "IIDX", "PM", "DDR", "GFDM", "指", "RB", "SDVX", "ダガッキ"
楽曲情報:(MUSIC++):0 '= @"KIMONO%UNICODE(0x2764)%PRINCESS", "7", "8", "9", "DDR", "DEA", "PM", "RB"
楽曲情報:(MUSIC++):0 '= "La libertad", "6", "6", "6", "DDR"
楽曲情報:(MUSIC++):0 '= "La Señorita", "6", "5", "4", "DDR"
楽曲情報:(MUSIC++):0 '= "LET ME BELIEVE", "8", "8", "5", "GFDM"
楽曲情報:(MUSIC++):0 '= "Lift You Up", "7", "6", "3", "DDR"
楽曲情報:(MUSIC++):0 '= "lights", "6", "7", "5", "IIDX"
楽曲情報:(MUSIC++):0 '= "Love & Justice", "5", "10", "8", "BMS"
楽曲情報:(MUSIC++):0 '= "Love2シュガ→", "4", "4", "4", "DDR", "PM", "RB", "ダガッキ"
楽曲情報:(MUSIC++):0 '= "LOVE WILL・・・", "3", "4", "3", "IIDX"
楽曲情報:(MUSIC++):0 '= "LUV TO ME", "2", "5", "4", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "LUV TO ME(english version)", "4", "5", "4", "IIDX", "DDR"
;MNOP ----------------
楽曲情報:(MUSIC++):0 '= "MAGICAL VOICE SHOWER", "12", "0", "3", "PM"
楽曲情報:(MUSIC++):0 '= "MAGIC & LOVE", "5", "6", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "Make A Difference", "10", "8", "5", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "MAX LOVE", "3", "4", "4", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "Medicine of Love", "5", "4", "3", "IIDX", "RB"
楽曲情報:(MUSIC++):0 '= "Melody Life", "3", "4", "3", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "Mermaid Girl", "6", "5", "4", "IIDX", "DDR", "PM", "RB", "SDVX"
楽曲情報:(MUSIC++):0 '= "murmur twins", "9", "10", "7", "IIDX", "PM", "DDR", "RB", "GFDM"
楽曲情報:(MUSIC++):0 '= "neu", "8", "12", "0", "PM", "IIDX", "指", "ノスタルジア", "SDVX"
楽曲情報:(MUSIC++):0 '= "Never Fade Away", "5", "7", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "New Decade", "1", "5", "10", "DDR", "IIDX", "指"
楽曲情報:(MUSIC++):0 '= "Nine point eight", "7", "5", "2", "Deemo"
楽曲情報:(MUSIC++):0 '= "nine seconds", "2", "2", "2", "IIDX"
楽曲情報:(MUSIC++):0 '= "NO DOUBT GET LOUD", "7", "3", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "Nyoah's Sword Dance 華麗なるニョアの剣舞", "0", "11", "10"
楽曲情報:(MUSIC++):0 '= "One Phrase Blues", "0", "9", "6", "GFDM", "IIDX"
楽曲情報:(MUSIC++):0 '= "OTENAMI Hurricane", "0", "10", "10", "IIDX"
楽曲情報:(MUSIC++):0 '= "PARANOIA survivor MAX", "0", "5", "10", "DDR"
楽曲情報:(MUSIC++):0 '= "Piano Samurai", "0", "10", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "Pierce The Sky", "6", "10", "7", "DDR"
楽曲情報:(MUSIC++):0 '= "Pink Rose", "4", "6", "4", "IIDX", "PM", "DDR", "指", "RB", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= "Pluto", "0", "9", "8", "DDR", "IIDX"
楽曲情報:(MUSIC++):0 '= "Pluto Relinquish", "0", "9", "12", "DDR"
楽曲情報:(MUSIC++):0 '= "PUNISHER", "6", "7", "7", "IIDX", "PM", "DDR", "GFDM", "指", "RB", "SDVX", "ダガッキ"
;QRST ----------------
楽曲情報:(MUSIC++):0 '= "quasar", "0", "7", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "quick master", "0", "4", "3", "IIDX", "PM", "DDR"
楽曲情報:(MUSIC++):0 '= "rage against usual", "0", "10", "6", "IIDX", "GFDM"
楽曲情報:(MUSIC++):0 '= "Rainbow after snow", "5", "7", "7", "IIDX", "指"
楽曲情報:(MUSIC++):0 '= "Really Love", "5", "6", "3", "IIDX"
楽曲情報:(MUSIC++):0 '= "RESISTANCE", "5", "6", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "Restart", "5", "10", "4", "GFDM"
楽曲情報:(MUSIC++):0 '= "RЁVOLUTIΦN", "6", "7", "8", "GFDM", "DDR"
楽曲情報:(MUSIC++):0 '= "Roots of my way!", "5", "5", "3", "IIDX"
楽曲情報:(MUSIC++):0 '= "Seasons", "8", "9", "4", "DDR"
楽曲情報:(MUSIC++):0 '= "Secret Randez-vous", "8", "5", "6", "DDR", "DEA"
楽曲情報:(MUSIC++):0 '= "Sense 2007", "0", "11", "7", "IIDX"
楽曲情報:(MUSIC++):0 '= "Show me your moves", "4", "4", "5", "DDR"
楽曲情報:(MUSIC++):0 '= "She is my wife", "1", "4", "3", "IIDX", "DDR", "DEA"
楽曲情報:(MUSIC++):0 '= "Silent Hill", "5", "4", "2", "DDR"
楽曲情報:(MUSIC++):0 '= "Somehow You Found Me", "7", "7", "9", "DDR"
楽曲情報:(MUSIC++):0 '= "Space Dog", "6", "4", "3", "PM"
楽曲情報:(MUSIC++):0 '= "SPEEDY CAT", "6", "7", "7", "IIDX"
楽曲情報:(MUSIC++):0 '= "SPICY PIECE", "0", "7", "3", "PM"
楽曲情報:(MUSIC++):0 '= "Stand Alone Beat Masta", "8", "10", "7", "指", "RB"
楽曲情報:(MUSIC++):0 '= "Stick Around", "4", "5", "2", "IIDX"
楽曲情報:(MUSIC++):0 '= "Summer fantasy(Darwin Remix)", "7", "6", "4", "DDR"
楽曲情報:(MUSIC++):0 '= "Super Duper Racers", "7", "9", "8", "RB", "IIDX"
楽曲情報:(MUSIC++):0 '= "super highway", "0", "5", "3", "IIDX"
楽曲情報:(MUSIC++):0 '= "SUZY AND THE TIME MACHINE", "6", "8", "5", "GFDM"
楽曲情報:(MUSIC++):0 '= "Take A Step Forward", "5", "4", "4", "DDR"
楽曲情報:(MUSIC++):0 '= "Thank You Merry Christmas", "3", "4", "5", "DDR", "指", "RB", "PM"
楽曲情報:(MUSIC++):0 '= "The Least 100sec", "0", "11", "5", "GFDM", "DDR", "IIDX", "RB", "PM"
楽曲情報:(MUSIC++):0 '= "The Least 333sec", "0", "12", "6", "GFDM"
楽曲情報:(MUSIC++):0 '= "THE REASON", "8", "8", "8", "DDR"
楽曲情報:(MUSIC++):0 '= "Top The Charts", "7", "6", "6", "DDR"
楽曲情報:(MUSIC++):0 '= "Treasure×Star", "2", "6", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "True Blue", "7", "7", "5", "指", "IIDX", "PM", "RB", "SDVX", "DDR"
楽曲情報:(MUSIC++):0 '= "Twelfth Style", "0", "5", "10", "IIDX"
;UVWXYZ ----------------
楽曲情報:(MUSIC++):0 '= "UNLIMITED FIRE", "2", "5", "4", "RB", "指", "GFDM", "SDVX"
楽曲情報:(MUSIC++):0 '= "Voltage", "0", "6", "2", "IIDX"
楽曲情報:(MUSIC++):0 '= "Watch Out Pt.2", "0", "9", "9", "IIDX", "DEA"
楽曲情報:(MUSIC++):0 '= "White Eve", "4", "6", "3", "PM", "RB"
楽曲情報:(MUSIC++):0 '= "WORLD COLOR", "4", "5", "3", "PM"
楽曲情報:(MUSIC++):0 '= "Wow Wow VENUS", "5", "6", "6", "RB", "指", "DEA", "PM", "DDR"
楽曲情報:(MUSIC++):0 '= "X-Plan", "7", "8", "6", "GFDM"
楽曲情報:(MUSIC++):0 '= "Xepher", "8", "8", "5", "IIDX", "DDR", "SDVX"
楽曲情報:(MUSIC++):0 '= "You are a Star", "7", "6", "5", "DDR"
;あか ----------------
楽曲情報:(MUSIC++):0 '= "アズール", "0", "9", "5", "BMS"
楽曲情報:(MUSIC++):0 '= "アズール リミックス", "0", "10", "5", "BMS"
楽曲情報:(MUSIC++):0 '= "イ号零型", "9", "9", "5", "指", "RB"
楽曲情報:(MUSIC++):0 '= "一網打尽", "0", "12", "4", "GFDM"
楽曲情報:(MUSIC++):0 '= "梅雪夜", "8", "10", "7", "RB", "指", "PM", "IIDX", "ダガッキ"
楽曲情報:(MUSIC++):0 '= "エコ爺", "2", "5", "2", "IIDX"
楽曲情報:(MUSIC++):0 '= "エンジェル ドリーム", "5", "6", "7", "太鼓"
楽曲情報:(MUSIC++):0 '= "大桟橋", "5", "6", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "踊るフィーバーロボ", "2", "5", "3", "PM", "RB", "SDVX"
楽曲情報:(MUSIC++):0 '= "朧", "7", "7", "7", "PM", "指", "RB", "IIDX", "DEA", "ダガッキ", "DDR", "GFDM", "SDVX"
楽曲情報:(MUSIC++):0 '= "風のファンタジー", "6", "5", "7", "太鼓"
楽曲情報:(MUSIC++):0 '= "かずあそび", "9", "9", "3", "IIDX"
楽曲情報:(MUSIC++):0 '= "からふるぱすてる", "5", "8", "5", "GFDM", "DDR"
楽曲情報:(MUSIC++):0 '= "ギタドラシカ", "10", "10", "10", "GFDM"
楽曲情報:(MUSIC++):0 '= "キラキラ☆ステーション", "4", "4", "3", "RB", "指"
楽曲情報:(MUSIC++):0 '= "キルト", "6", "8", "6", "指", "PM", "GFDM", "RB"
楽曲情報:(MUSIC++):0 '= "ぐっばい my crybaby", "5", "4", "3", "GFDM"
楽曲情報:(MUSIC++):0 '= "紅蓮の焔", "4", "6", "5", "GFDM", "指", "PM"
楽曲情報:(MUSIC++):0 '= "黒髪乱れし修羅となりて", "6", "7", "5", "PM", "IIDX", "GFDM", "指", "RB", "DDR", "SDVX", "BS", "M?SECA"
楽曲情報:(MUSIC++):0 '= "恋歌疾風！かるたクイーンいろは", "8", "9", "7", "PM", "BS"
楽曲情報:(MUSIC++):0 '= "恋時雨", "6", "9", "6", "DDR", "指", "PM"
楽曲情報:(MUSIC++):0 '= "恋する☆宇宙戦争っ！！", "4", "6", "6", "IIDX", "RB", "SDVX", "PM", "ダガッキ", "指", "BS", "GFDM", "DDR"
楽曲情報:(MUSIC++):0 '= "恋は白帯、サンシロー", "4", "4", "4", "IIDX"
楽曲情報:(MUSIC++):0 '= "ゴーイング マイ ウェイ!", "6", "12", "3", "GFDM"
楽曲情報:(MUSIC++):0 '= "この子の七つのお祝いに", "12", "9", "7", "GFDM", "DDR", "PM", "指"
楽曲情報:(MUSIC++):0 '= @"混乱少女%UNICODE(0x2764)%そふらんちゃん!!", "4", "7", "7", "SDVX", "PM"
;さたな ----------------
楽曲情報:(MUSIC++):0 '= "防人恋歌", "5", "6", "4", "PM", "指"
楽曲情報:(MUSIC++):0 '= "サクラヨゾラ", "4", "7", "4", "RB"
楽曲情報:(MUSIC++):0 '= "三度笠ポン太は今日も行く", "8", "7", "2", "GFDM"
楽曲情報:(MUSIC++):0 '= "シュッパツシンコウ・シサカンコ", "5", "5", "5", "IIDX"
楽曲情報:(MUSIC++):0 '= "雫", "9", "11", "6", "PM", "RB", "DDR", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= "忍恋花", "8", "11", "7", "IIDX"
楽曲情報:(MUSIC++):0 '= "ジャガー人間の受難", "0", "12", "8", "GFDM"
楽曲情報:(MUSIC++):0 '= "シャムシールの舞", "0", "10", "12", "PM"
楽曲情報:(MUSIC++):0 '= "スイーツ・ドリーム", "3", "10", "5", "PM"
楽曲情報:(MUSIC++):0 '= "隅田川夏恋歌", "3", "5", "3", "指", "RB", "PM", "ダガッキ", "DDR", "BS", "GFDM", "SDVX", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= "すわひでおのゴロゴロ年号覚え唄完璧版", "2", "8", "4", "PM"
楽曲情報:(MUSIC++):0 '= "刹那", "8", "8", "9", "GFDM"
楽曲情報:(MUSIC++):0 '= "創世ノート", "7", "10", "8", "IIDX", "PM", "DDR", "GFDM", "指", "RB", "ダガッキ", "SDVX"
楽曲情報:(MUSIC++):0 '= "太陽 ～T・A・I・Y・O～", "6", "6", "5", "IIDX", "GFDM"
楽曲情報:(MUSIC++):0 '= "大見解", "7", "5", "5", "PM", "GFDM", "DDR"
楽曲情報:(MUSIC++):0 '= "たからもの", "4", "6", "4", "IIDX", "GFDM"
楽曲情報:(MUSIC++):0 '= "打打打打打打打打打打", "6", "8", "5", "IIDX", "PM", "RB", "SDVX", "BS", "DDR"
楽曲情報:(MUSIC++):0 '= "たまゆら", "8", "10", "7", "GFDM", "IIDX"
楽曲情報:(MUSIC++):0 '= "ちくわパフェだよ☆CKP", "4", "8", "7", "GFDM", "DDR", "指", "PM", "RB", "ダガッキ", "DEA", "BS", "CHUNITHM", "SDVX"
楽曲情報:(MUSIC++):0 '= "蝶になれ", "6", "4", "5", "PM"
楽曲情報:(MUSIC++):0 '= "チョコレートスマイル", "7", "7", "7", "BS", "DDR", "DEA", "指", "PM", "RB", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= "ツキミチヌ", "6", "7", "3", "RB", "指"
楽曲情報:(MUSIC++):0 '= "罪と罰", "7", "7", "9", "IIDX", "DEA"
楽曲情報:(MUSIC++):0 '= "天庭", "12", "11", "6", "GFDM", "PM", "RB"
楽曲情報:(MUSIC++):0 '= "ドーパミン", "0", "11", "11", "指", "DDR"
楽曲情報:(MUSIC++):0 '= "どきドキ バレンタイン", "4", "7", "4", "GFDM"
楽曲情報:(MUSIC++):0 '= "突撃!ガラスのニーソ姫!", "11", "5", "7", "IIDX", "DDR", "BS", "SDVX"
楽曲情報:(MUSIC++):0 '= "轟け！恋のビーンボール！！", "7", "9", "7", "IIDX", "PM", "DDR", "GFDM", "指", "RB", "SDVX", "ダガッキ", "DEA"
楽曲情報:(MUSIC++):0 '= "†渚の小悪魔ラヴリィ～レイディオ†", "4", "4", "8", "指", "IIDX", "RB", "PM", "ダガッキ", "GFDM", "DDR", "BS"
楽曲情報:(MUSIC++):0 '= "嘆きの樹", "0", "12", "12", "IIDX", "DDR"
楽曲情報:(MUSIC++):0 '= "ねぇ？メイドさんはみんな忠実だと思う？", "11", "7", "3", "BMS"
;はまやらわ ----------------
楽曲情報:(MUSIC++):0 '= "パステルドリーム", "5", "7", "6", "太鼓"
楽曲情報:(MUSIC++):0 '= "花吹雪", "6", "6", "6", "IIDX"
楽曲情報:(MUSIC++):0 '= "羽根亡キ少女唄", "8", "9", "5", "GFDM", "指"
楽曲情報:(MUSIC++):0 '= "春待ち花", "6", "8", "6", "GFDM"
楽曲情報:(MUSIC++):0 '= "華爛漫 -Flowers-", "6", "7", "7", "DDR", "IIDX", "PM", "RB", "DEA", "指"
楽曲情報:(MUSIC++):0 '= "万物快楽理論", "1", "7", "4", "PM", "RB"
楽曲情報:(MUSIC++):0 '= "ピアノ協奏曲第1番”蠍火”", "0", "11", "2", "IIDX", "PM", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= @"表裏一体！？怪盗いいんちょの悩み%UNICODE(0x2764)%", "8", "8", "7", "IIDX"
楽曲情報:(MUSIC++):0 '= "ヒデオ体操第一", "2", "4", "12", "PM"
楽曲情報:(MUSIC++):0 '= "ビビットストリーム", "0", "5", "5", "BS", "DDR", "指", "RB", "SDVX"
楽曲情報:(MUSIC++):0 '= "ヒマワリ", "6", "5", "4", "IIDX", "DDR", "GFDM", "SDVX"
楽曲情報:(MUSIC++):0 '= "フー・フローツ", "5", "6", "5", "指", "DDR"
楽曲情報:(MUSIC++):0 '= "冬椿", "7", "8", "5", "IIDX"
楽曲情報:(MUSIC++):0 '= "ブランコ", "6", "7", "4", "GFDM"
楽曲情報:(MUSIC++):0 '= "ペリーでぇす！", "3", "7", "2", "PM", "RB"
楽曲情報:(MUSIC++):0 '= "星宿る空の下で 枝に結ぶ願い", "10", "11", "8", "GFDM", "指"
楽曲情報:(MUSIC++):0 '= "ポチコの幸せな日常", "4", "6", "8", "PM", "指", "RB"
楽曲情報:(MUSIC++):0 '= "星屑のキロク", "0", "8", "5", "DDR", "指", "RB"
楽曲情報:(MUSIC++):0 '= "猛進ソリストライフ！", "7", "10", "10", "CHUNITHM"
楽曲情報:(MUSIC++):0 '= "モフモフしたいの", "4", "11", "3", "GFDM"
楽曲情報:(MUSIC++):0 '= "量子の海のリントヴルム", "0", "11", "6", "指", "RB", "PM", "GFDM", "ダガッキ", "IIDX"
楽曲情報:(MUSIC++):0 '= "リメンバーリメンバー", "7", "4", "2", "PM", "RB", "指"
楽曲情報:(MUSIC++):0 '= "凛として咲く花の如く", "5", "7", "3", "PM", "GFDM", "IIDX", "指", "DDR", "ダガッキ", "RB", "DEA", "SDVX", "BS", "CHUNITHM"
楽曲情報:(MUSIC++):0 '= "ルミナスデイズ", "3", "3", "2", "SDVX", "指", "DDR", "ノスタルジア", "PM"
楽曲情報:(MUSIC++):0 '= "ロボット☆ライフ", "4", "5", "6", "RB", "ノスタルジア"
楽曲情報:(MUSIC++):0 '= "ワルツ第17番ト短調”大犬のワルツ”", "0", "12", "6", "IIDX"

@難易度ソート, ARGS, 総曲数, ソート順
#DIM DYNAMIC 総曲数
#DIM DYNAMIC LCOUNT
#DIMS DYNAMIC ソート順
#DIM DYNAMIC ソート用変数, 1000

SELECTCASE ARGS
	CASE "Vo"
		FOR LCOUNT, 0, 総曲数
			SELECTCASE ソート順
				CASE "FORWARD"
					ソート用変数:LCOUNT = TOINT(楽曲情報:LCOUNT:1)*1000+LCOUNT
				CASE "BACK"
					ソート用変数:LCOUNT = (TOINT(楽曲情報:LCOUNT:1)*1000+LCOUNT)*-1
			ENDSELECT
		NEXT
	CASE "Inst"
		FOR LCOUNT, 0, 総曲数
			SELECTCASE ソート順
				CASE "FORWARD"
					ソート用変数:LCOUNT = TOINT(楽曲情報:LCOUNT:2)*1000+LCOUNT
				CASE "BACK"
					ソート用変数:LCOUNT = (TOINT(楽曲情報:LCOUNT:2)*1000+LCOUNT)*-1
			ENDSELECT
		NEXT
	CASE "Da"
		FOR LCOUNT, 0, 総曲数
			SELECTCASE ソート順
				CASE "FORWARD"
					ソート用変数:LCOUNT = TOINT(楽曲情報:LCOUNT:3)*1000+LCOUNT
				CASE "BACK"
					ソート用変数:LCOUNT = (TOINT(楽曲情報:LCOUNT:3)*1000+LCOUNT)*-1
			ENDSELECT
		NEXT
ENDSELECT

FOR LCOUNT, 0, 総曲数
	SIF ソート用変数:LCOUNT < 1000
		ソート用変数:LCOUNT -= 1000
NEXT

ARRAYMSORT ソート用変数, 楽曲情報

RETURN

[SKIPSTART]
;ARRAYMSORTの実装によりお払い箱
@バブルソート, 総曲数, ソート対象難易度, ARG
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 処理対象
#DIM DYNAMIC 総曲数
#DIM DYNAMIC ソート対象難易度
#DIMS DYNAMIC ソート順
IF ARG == 0
	ソート順 = FORWARD
ELSEIF ARG == 1
	ソート順 = BACK
ENDIF

FOR LCOUNT, 0, 総曲数
	FOR 処理対象, 総曲数-1, LCOUNT, -1
		;関数の第三引数に応じてソート順を変える
		IF ソート順 == "FORWARD"
			;処理対象の曲がひとつ前の曲より難易度が低い場合は交換
			IF 処理対象 != 0 && TOINT(楽曲情報:処理対象:ソート対象難易度) < TOINT(楽曲情報:(処理対象-1):ソート対象難易度)
				REPEAT 20
					SWAP 楽曲情報:処理対象:COUNT, 楽曲情報:(処理対象-1):COUNT
				REND
			ENDIF
		ELSEIF ソート順 == "BACK"
			;処理対象の曲がひとつ前の曲より難易度が高い場合は交換
			IF 処理対象 != 0 && TOINT(楽曲情報:処理対象:ソート対象難易度) > TOINT(楽曲情報:(処理対象-1):ソート対象難易度)
				REPEAT 20
					SWAP 楽曲情報:処理対象:COUNT, 楽曲情報:(処理対象-1):COUNT
				REND
			ENDIF
		ENDIF
	NEXT
NEXT

@選択法ソート, 総曲数, ソート対象難易度, ARG
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 処理対象
#DIM DYNAMIC 処理数 = 1
#DIM DYNAMIC 総曲数
#DIM DYNAMIC ソート対象難易度
#DIMS DYNAMIC ソート順
IF ARG == 0
	ソート順 = FORWARD
ELSEIF ARG == 1
	ソート順 = BACK
ENDIF

;関数の第三引数に応じてソート順を変える
IF ソート順 == "FORWARD"
	;難易度は12段階なので12回ループする
	FOR LCOUNT, 1, 13
		FOR 処理対象, 0, 総曲数
			;難易度が低い順に、配列の前に詰めていく
			IF TOINT(楽曲情報:処理対象:ソート対象難易度) == LCOUNT
				REPEAT 20
					SWAP 楽曲情報:処理対象:COUNT, 楽曲情報:処理数:COUNT
				REND
				処理数++
			ENDIF
		NEXT
	NEXT
ELSEIF ソート順 == "BACK"
	;難易度は12段階なので12回ループする
	FOR LCOUNT, 12, 0, -1
		FOR 処理対象, 0, 総曲数
			;難易度が高い順に、配列の前に詰めていく
			IF TOINT(楽曲情報:処理対象:ソート対象難易度) == LCOUNT
				REPEAT 20
					SWAP 楽曲情報:処理対象:COUNT, 楽曲情報:処理数:COUNT
				REND
				処理数++
			ENDIF
		NEXT
	NEXT
ENDIF

@挿入法ソート, 総曲数, ソート対象難易度, ARG
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 処理対象
#DIM DYNAMIC 処理数 = 1
#DIM DYNAMIC 総曲数
#DIM DYNAMIC ソート対象難易度
#DIMS DYNAMIC ソート順
IF ARG == 0
	ソート順 = FORWARD
ELSEIF ARG == 1
	ソート順 = BACK
ENDIF

FOR 処理対象, 1, 総曲数
	;1～処理対象までの配列と比較
	FOR 処理数, 1, 処理対象
		IF ソート順 == "FORWARD"
			;処理対象よりレベルが高いものが見つからなかったらその場所に居座る
			;処理対象より1レベル高い難易度に到達したら、そのひとつ前の配列に挿入する
			IF 楽曲情報:処理対象:ソート対象難易度 < 楽曲情報:処理数:ソート対象難易度
				;挿入する前に以後の配列を擬似ARRAYSHIFTしておく
				FOR LCOUNT, 処理対象, 処理数, -1
					REPEAT 20
						SWAP 楽曲情報:LCOUNT:COUNT, 楽曲情報:(LCOUNT-1):COUNT
					REND
				NEXT
				;ここまで書いて気づいた 完全にバブルソートの下位互換だこれ
			ENDIF
		ENDIF
	NEXT
NEXT

;似たような結果にしかならなさそうなのでシェルソートは省略




;@ヒープソート, 総曲数, ソート対象難易度, ARG

;多次元配列に対応したソートの汎用関数
;引数:変数名, ソート順(0=昇順 1=降順), ソート対象の次元, 参照する配列, 一次元目の総データ数, 二次元目の総データ数(共に省略可能だが非推奨)
;対象次元 = 1を指定した場合は、参照配列で指定した二次元目の値で一次元目の配列をソートする(HOGE:ソート対象:参照配列)
;　　　　　 2を指定した場合は、参照配列で指定した一次元目の配列から二次元目をソートする(HOGE:参照配列:ソート対象)
;安定:1=安定ソート(同値の順番を保持する) 0=安定じゃないソート(同値の順番を無視する) デフォルトは1
@ARRAYSORT_2D, ARGS, ARG, 対象次元, 参照配列, データ数1 = -1, データ数2 = -1, 安定 = 1
#DIM DYNAMIC 対象次元
#DIM DYNAMIC 参照配列
#DIM DYNAMIC データ数1
#DIM DYNAMIC データ数2
#DIM DYNAMIC 安定

SIF データ数1 == -1
	データ数1 = VARSIZE(@"%ARGS%", 0)

SIF データ数2 == -1
	データ数2 = VARSIZE(@"%ARGS%", 1)

VARSET 参照用変数

ARRAYCOPY @"%ARGS%", "参照用変数"

IF 安定
	LOCALS = マージソート
ELSE
	LOCALS = クイックソート
ENDIF

CALLFORM %LOCALS%, ARG, 0, -1, データ数1, データ数2, 対象次元, 参照配列

ARRAYCOPY "参照用変数", @"%ARGS%"

@マージソート, ARG, 左端 = 0, 右端 = -1, データ数1, データ数2, 対象次元, 参照配列
#DIM DYNAMIC 左端
#DIM DYNAMIC 右端
#DIM DYNAMIC データ数1
#DIM DYNAMIC データ数2
#DIM DYNAMIC 対象次元
#DIM DYNAMIC 参照配列

#DIMS DYNAMIC ソート順
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 中央, 2
#DIM DYNAMIC 作業用変数, 1000, 1000

IF ARG == 0
	ソート順 = FORWARD
ELSEIF ARG == 1
	ソート順 = BACK
ENDIF

IF 右端 == -1
	IF 対象次元 == 1
		右端 = データ数1-1
	ELSEIF 対象次元 == 2
		右端 = データ数2-1
	ENDIF
ENDIF

;一つになるまで分解したら再帰終了
SIF 左端 == 右端
	RETURN

;中央の配列を計算
VARSET 中央, (左端+右端)/2
;中央から左を再帰処理
CALL マージソート, ARG, 左端, 中央, データ数1, データ数2, 対象次元, 参照配列
;右側も再帰処理
CALL マージソート, ARG, 中央+1, 右端, データ数1, データ数2, 対象次元, 参照配列 

ARRAYCOPY "参照用変数", "作業用変数"

FOR LCOUNT, 左端, 右端+1
	IF 対象次元 == 1
		LOCAL = 0
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、小さい方から順に戻していく
		IF ソート順 == "FORWARD" && 作業用変数:左端:参照配列 <= 作業用変数:(中央+1):参照配列
			LOCAL = 1
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、大きい方から順に戻していく
		ELSEIF ソート順 == "BACK" && 作業用変数:左端:参照配列 >= 作業用変数:(中央+1):参照配列
			LOCAL = 1
		ENDIF
		;左端が右辺に到達したらあとは右辺のみ計算する
		SIF 左端 >= 中央:1+1
			GOTO 右辺1
		;中央が右端に到達したらあとは左辺のみ計算する
		SIF 中央 >= 右端
			GOTO 左辺1
		IF LOCAL
			$左辺1
			REPEAT データ数2
				参照用変数:LCOUNT:COUNT = 作業用変数:左端:COUNT
			REND
			左端++
		ELSE
			$右辺1
			REPEAT データ数2
				参照用変数:LCOUNT:COUNT = 作業用変数:(中央+1):COUNT
			REND
			中央++
		ENDIF
	ELSEIF 対象次元 == 2
		LOCAL = 0
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、小さい方から順に戻していく
		IF ソート順 == "FORWARD" && 作業用変数:参照配列:左端 <= 作業用変数:参照配列:(中央+1)
			LOCAL = 1
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、大きい方から順に戻していく
		ELSEIF ソート順 == "BACK" && 作業用変数:参照配列:左端 >= 作業用変数:参照配列:(中央+1)
			LOCAL = 1
		ENDIF
		;左端が右辺に到達したらあとは右辺のみ計算する
		SIF 左端 >= 中央:1+1
			GOTO 右辺2
		;中央が右端に到達したらあとは左辺のみ計算する
		SIF 中央 >= 右端
			GOTO 左辺2
		IF LOCAL || 中央 == 右端
			$左辺2
			参照用変数:参照配列:LCOUNT = 作業用変数:参照配列:左端
			左端++
		ELSE
			$右辺2
			参照用変数:参照配列:LCOUNT = 作業用変数:参照配列:(中央+1)
			中央++
		ENDIF
	ENDIF
NEXT

@クイックソート, ARG, 左端 = 0, 右端 = -1, データ数, データ数2, 対象次元, 参照配列
#DIM DYNAMIC データ数
#DIM DYNAMIC データ数2
#DIM DYNAMIC 対象次元
#DIM DYNAMIC 参照配列
#DIMS DYNAMIC ソート順
#DIM DYNAMIC 基準値
#DIM DYNAMIC 左端
#DIM DYNAMIC 右端
#DIM DYNAMIC 左候補
#DIM DYNAMIC 右候補

IF ARG == 0
	ソート順 = FORWARD
ELSEIF ARG == 1
	ソート順 = BACK
ENDIF

;左候補、右候補と銘打ってるけど、配列を横に並べた際のイメージで、左は配列の前、右は配列の後ろという意味
左候補 = 左端
IF 右端 == -1
	IF 対象次元 == 1
		右端 = データ数-1
	ELSEIF 対象次元 == 2
		右端 = データ数2-1
	ENDIF
ENDIF
右候補 = 右端

;基準値は渡さずに逐一計算したほうがよさげ
IF 対象次元 == 1
	基準値 = 参照用変数:右端:参照配列
ELSEIF 対象次元 == 2
	基準値 = 参照用変数:参照配列:右端
ENDIF

;クイックソート対象区間の左候補と右候補がぶつかるまでループ
WHILE 左候補 < 右候補
	IF 対象次元 == 1
		;関数の第三引数に応じてソート順を変える
		IF ソート順 == "FORWARD"
			;基準値以上のデータが見つかるまで、配列の前から探す
			WHILE 参照用変数:左候補:参照配列 <= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以下のデータが見つかるまで、配列の後ろから探す
			WHILE 参照用変数:右候補:参照配列 >= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ELSEIF ソート順 == "BACK"
			;基準値以下のデータが見つかるまで、配列の前から探す
			WHILE 参照用変数:左候補:参照配列 >= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以上のデータが見つかるまで、配列の後ろから探す
			WHILE 参照用変数:右候補:参照配列 <= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ENDIF
		;上記の候補ふたつの値を入れ替える ただし左候補の配列が右候補の配列より前にある場合のみ
		IF 左候補 < 右候補
			REPEAT データ数2
				SWAP 参照用変数:左候補:COUNT, 参照用変数:右候補:COUNT
			REND
		ENDIF
	ELSEIF 対象次元 == 2
		;関数の第三引数に応じてソート順を変える
		IF ソート順 == "FORWARD"
			;基準値以上のデータが見つかるまで、配列の前から探す
			WHILE 参照用変数:参照配列:左候補 <= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以下のデータが見つかるまで、配列の後ろから探す
			WHILE 参照用変数:参照配列:右候補 >= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ELSEIF ソート順 == "BACK"
			;基準値以下のデータが見つかるまで、配列の前から探す
			WHILE 参照用変数:参照配列:左候補 >= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以上のデータが見つかるまで、配列の後ろから探す
			WHILE 参照用変数:参照配列:右候補 <= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ENDIF
		;上記の候補ふたつの値を入れ替える ただし左候補の配列が右候補の配列より前にある場合のみ
		SIF 左候補 < 右候補
			SWAP 参照用変数:参照配列:左候補, 参照用変数:参照配列:右候補
	ENDIF
WEND

;左候補=右候補(中間) 左候補探しは基準値と同じかそれ以上の場合に終わってるはずなので、中間を基準値(右端)と入れ替える
IF 対象次元 == 1
	REPEAT データ数2
		SWAP 参照用変数:左候補:COUNT, 参照用変数:右端:COUNT
	REND
ELSEIF 対象次元 == 2
	SWAP 参照用変数:参照配列:左候補, 参照用変数:参照配列:右端
ENDIF


;中間の左側に2つ以上配列があればさらにその区間をクイックソート
SIF 左候補-左端 >= 2
	CALL クイックソート, ARG, 左端, 左候補-1, データ数, データ数2, 対象次元, 参照配列

;中間の右側に2つ以上配列があればさらにその区間をクイックソート
SIF 右端-右候補 >= 2
	CALL クイックソート, ARG, 右候補+1, 右端, データ数, データ数2, 対象次元, 参照配列

;ARRAYSORT_2Dの文字列変数版 ISNUMERIC通してないのでTOINTできない場合はエラー吐く
@ARRAYSORT_2DS, ARGS, ARG, 対象次元, 参照配列, データ数1 = -1, データ数2 = -1, 安定 = 1
#DIM DYNAMIC 対象次元
#DIM DYNAMIC 参照配列
#DIM DYNAMIC データ数1
#DIM DYNAMIC データ数2
#DIM DYNAMIC 安定

SIF データ数1 == -1
	データ数1 = VARSIZE(@"%ARGS%", 0)

SIF データ数2 == -1
	データ数2 = VARSIZE(@"%ARGS%", 1)

VARSET 参照用変数S

ARRAYCOPY @"%ARGS%", "参照用変数S"

IF 安定
	LOCALS = マージソートS
ELSE
	LOCALS = クイックソートS
ENDIF

CALLFORM %LOCALS%, ARG, 0, -1, データ数1, データ数2, 対象次元, 参照配列

ARRAYCOPY "参照用変数S", @"%ARGS%"

@マージソートS, ARG, 左端 = 0, 右端 = -1, データ数1, データ数2, 対象次元, 参照配列
#DIM DYNAMIC 左端
#DIM DYNAMIC 右端
#DIM DYNAMIC データ数1
#DIM DYNAMIC データ数2
#DIM DYNAMIC 対象次元
#DIM DYNAMIC 参照配列

#DIMS DYNAMIC ソート順
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC 中央, 2
#DIMS DYNAMIC 作業用変数, 1000, 1000

IF ARG == 0
	ソート順 = FORWARD
ELSEIF ARG == 1
	ソート順 = BACK
ENDIF

IF 右端 == -1
	IF 対象次元 == 1
		右端 = データ数1-1
	ELSEIF 対象次元 == 2
		右端 = データ数2-1
	ENDIF
ENDIF

;一つになるまで分解したら再帰終了
SIF 左端 == 右端
	RETURN

;中央の配列を計算
VARSET 中央, (左端+右端)/2
;中央から左を再帰処理
CALL マージソートS, ARG, 左端, 中央, データ数1, データ数2, 対象次元, 参照配列
;右側も再帰処理
CALL マージソートS, ARG, 中央+1, 右端, データ数1, データ数2, 対象次元, 参照配列 

ARRAYCOPY "参照用変数S", "作業用変数"

FOR LCOUNT, 左端, 右端+1
	IF 対象次元 == 1
		LOCAL = 0
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、小さい方から順に戻していく
		IF ソート順 == "FORWARD" && TOINT(作業用変数:左端:参照配列) <= TOINT(作業用変数:(中央+1):参照配列)
			LOCAL = 1
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、大きい方から順に戻していく
		ELSEIF ソート順 == "BACK" && TOINT(作業用変数:左端:参照配列) >= TOINT(作業用変数:(中央+1):参照配列)
			LOCAL = 1
		ENDIF
		;左端が右辺に到達したらあとは右辺のみ計算する
		SIF 左端 >= 中央:1+1
			GOTO 右辺1
		;中央が右端に到達したらあとは左辺のみ計算する
		SIF 中央 >= 右端
			GOTO 左辺1
		IF LOCAL
			$左辺1
			REPEAT データ数2
				参照用変数S:LCOUNT:COUNT = %作業用変数:左端:COUNT%
			REND
			左端++
		ELSE
			$右辺1
			REPEAT データ数2
				参照用変数S:LCOUNT:COUNT = %作業用変数:(中央+1):COUNT%
			REND
			中央++
		ENDIF
	ELSEIF 対象次元 == 2
		LOCAL = 0
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、小さい方から順に戻していく
		IF ソート順 == "FORWARD" && TOINT(作業用変数:参照配列:左端) <= TOINT(作業用変数:参照配列:(中央+1))
			LOCAL = 1
		;マージ対象の左辺の左端(左端)右辺の左端(中央+1)を比べ、大きい方から順に戻していく
		ELSEIF ソート順 == "BACK" && TOINT(作業用変数:参照配列:左端) >= TOINT(作業用変数:参照配列:(中央+1))
			LOCAL = 1
		ENDIF
		;左端が右辺に到達したらあとは右辺のみ計算する
		SIF 左端 >= 中央:1+1
			GOTO 右辺2
		;中央が右端に到達したらあとは左辺のみ計算する
		SIF 中央 >= 右端
			GOTO 左辺2
		IF LOCAL || 中央 == 右端
			$左辺2
			参照用変数S:参照配列:LCOUNT = %作業用変数:参照配列:左端%
			左端++
		ELSE
			$右辺2
			参照用変数S:参照配列:LCOUNT = %作業用変数:参照配列:(中央+1)%
			中央++
		ENDIF
	ENDIF
NEXT

@クイックソートS, ARG, 左端 = 0, 右端 = -1, データ数, データ数2, 対象次元, 参照配列
#DIM DYNAMIC データ数
#DIM DYNAMIC データ数2
#DIM DYNAMIC 対象次元
#DIM DYNAMIC 参照配列
#DIMS DYNAMIC ソート順
#DIM DYNAMIC 基準値
#DIM DYNAMIC 左端
#DIM DYNAMIC 右端
#DIM DYNAMIC 左候補
#DIM DYNAMIC 右候補

IF ARG == 0
	ソート順 = FORWARD
ELSEIF ARG == 1
	ソート順 = BACK
ENDIF

;左候補、右候補と銘打ってるけど、配列を横に並べた際のイメージで、左は配列の前、右は配列の後ろという意味
左候補 = 左端
IF 右端 == -1
	IF 対象次元 == 1
		右端 = データ数-1
	ELSEIF 対象次元 == 2
		右端 = データ数2-1
	ENDIF
ENDIF

;基準値は渡さずに逐一計算したほうがよさげ
IF 対象次元 == 1
	基準値 = TOINT(参照用変数S:右端:参照配列)
ELSEIF 対象次元 == 2
	基準値 = TOINT(参照用変数S:参照配列:右端)
ENDIF

;クイックソート対象区間の左候補と右候補がぶつかるまでループ
WHILE 左候補 < 右候補
	IF 対象次元 == 1
		;関数の第三引数に応じてソート順を変える
		IF ソート順 == "FORWARD"
			;基準値以上のデータが見つかるまで、配列の前から探す
			WHILE TOINT(参照用変数S:左候補:参照配列) <= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以下のデータが見つかるまで、配列の後ろから探す
			WHILE TOINT(参照用変数S:右候補:参照配列) >= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ELSEIF ソート順 == "BACK"
			;基準値以下のデータが見つかるまで、配列の前から探す
			WHILE TOINT(参照用変数S:左候補:参照配列) >= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以上のデータが見つかるまで、配列の後ろから探す
			WHILE TOINT(参照用変数S:右候補:参照配列) <= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ENDIF
		;上記の候補ふたつの値を入れ替える ただし左候補の配列が右候補の配列より前にある場合のみ
		IF 左候補 < 右候補
			REPEAT データ数2
				SWAP 参照用変数S:左候補:COUNT, 参照用変数S:右候補:COUNT
			REND
		ENDIF
	ELSEIF 対象次元 == 2
		;関数の第三引数に応じてソート順を変える
		IF ソート順 == "FORWARD"
			;基準値以上のデータが見つかるまで、配列の前から探す
			WHILE TOINT(参照用変数S:参照配列:左候補) <= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以下のデータが見つかるまで、配列の後ろから探す
			WHILE TOINT(参照用変数S:参照配列:右候補) >= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ELSEIF ソート順 == "BACK"
			;基準値以下のデータが見つかるまで、配列の前から探す
			WHILE TOINT(参照用変数S:参照配列:左候補) >= 基準値 && 左候補 < 右候補
				左候補++
			WEND
			;基準値以上のデータが見つかるまで、配列の後ろから探す
			WHILE TOINT(参照用変数S:参照配列:右候補) <= 基準値 && 左候補 < 右候補
				右候補--
			WEND
		ENDIF
		;上記の候補ふたつの値を入れ替える ただし左候補の配列が右候補の配列より前にある場合のみ
		SIF 左候補 < 右候補
			SWAP 参照用変数S:参照配列:左候補, 参照用変数S:参照配列:右候補
	ENDIF
WEND

;左候補=右候補(中間) 左候補探しは基準値と同じかそれ以上の場合に終わってるはずなので、中間を基準値(右端)と入れ替える
IF 対象次元 == 1
	REPEAT データ数2
		SWAP 参照用変数S:左候補:COUNT, 参照用変数S:右端:COUNT
	REND
ELSEIF 対象次元 == 2
	SWAP 参照用変数S:参照配列:左候補, 参照用変数S:参照配列:右端
ENDIF


;中間の左側に2つ以上配列があればさらにその区間をクイックソート
SIF 左候補-左端 >= 2
	CALL クイックソートS, ARG, 左端, 左候補-1, データ数, データ数2, 対象次元, 参照配列

;中間の右側に2つ以上配列があればさらにその区間をクイックソート
SIF 右端-右候補 >= 2
	CALL クイックソートS, ARG, 右候補+1, 右端, データ数, データ数2, 対象次元, 参照配列

@ARRAYSWAP, ARGS, ARGS:1
#DIMS DYNAMIC 保守用, 1000, 1000

ARRAYCOPY @"%ARGS%", "保守用"

ARRAYCOPY @"%ARGS:1%", @"%ARGS%"

ARRAYCOPY "保守用", @"%ARGS%"
[SKIPEND]
